{"version":3,"sources":["skylarkjs-core.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","xhrGet","url","callback","xhr","XMLHttpRequest","onreadystatechange","this","readyState","response","responseText","open","send","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","cb","requireOne","hasOwnProperty","Error","module","args","forEach","apply","window","onedep","modules","config","baseUrl","skylarkjs","skylark","http","res","console","error","cfg","JSON","parse","runtime","initApp","spa","_cfg","contextPath","app","go","path","force","prepare","then","run","spaModule","_start","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","each","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","location","href","segs","params","queryParam","nv","has","inArray","indexOf","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","prototype","isDefined","Node","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","deepEq","PGLISTENERS","Symbol","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","createClass","extendClass","ctor","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","parent","init","klassName","Function","create","__proto__","partial","inherit","delegate","TMP","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","onResolved","onRejected","onProgress","progress","done","handler","fail","bind","listener","reason","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","get","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","router","useHistoryApi","state","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","hash","noCache","finded","_cache","_routes","routeName","hub","homePath","_homePath","setting","settings","routes","Route","start","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","query","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","content","forceRefresh","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","plugins","_plugins","_config","pluginName","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","main"],"mappings":"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","file":"../skylarkjs-core.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylarkjs/skylark',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n              proto[name] = typeof props[name] == \"function\" && !props[name]._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                      (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, options) {\r\n                    return createClass(props, this, options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        mixin(p,{\r\n            then : function(onResolved,onRejected,onProgress) {\r\n                if (onProgress) {\r\n                    this.progress(onProgress);\r\n                }\r\n                return Promise.prototype.then.call(this,onResolved,onRejected);\r\n            },\r\n            done : function(handler) {\r\n                return Promise.prototype.then.call(this,handler);\r\n            },\r\n            fail : function(handler) { \r\n                return Promise.prototype.catch.call(this,handler);\r\n            }, \r\n            progress : function(handler) {\r\n                self[PGLISTENERS].push(handler);\r\n                return this;\r\n            }\r\n\r\n        });\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n        this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            e.target = this;\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.6-beta\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylarkjs/router',[\r\n    \"skylark-router/router\"\r\n], function(router) {\r\n    return router;\r\n});\r\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylarkjs/spa',[\r\n    \"skylark-spa/spa\"\r\n], function(spa) {\r\n    return spa;\r\n});\r\n\ndefine('skylarkjs/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylarkjs/core',[\r\n    \"./skylark\",\r\n    \"./router\",\r\n    \"./spa\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylarkjs', ['skylarkjs/core'], function (main) { return main; });\n\n"]}