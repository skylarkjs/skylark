{"version":3,"sources":["langx.js"],"names":["define","skylark","arrays","ArrayStore","aspect","async","Deferred","Evented","funcs","klass","objects","Restful","Stateful","strings","types","Xhr","createEvent","type","props","e","CustomEvent","safeMixin","funcArg","context","arg","idx","payload","isFunction","call","getQueryParams","url","window","location","href","segs","split","params","length","forEach","queryParam","nv","toPixel","value","parseFloat","uid","obj","_uid","uniqueId","prefix","id","idCounter","langx","mixin","toString","Array","prototype","concat","indexOf","slice","filter","URL","webkitURL"],"mappings":";;;;;;;AAAAA,QACI,YACA,WACA,eACA,WACA,UACA,aACA,YACA,UACA,UACA,YACA,YACA,aACA,YACA,UACA,SACD,SAASC,EAAQC,EAAOC,EAAWC,EAAOC,EAAMC,EAASC,EAAQC,EAAMC,EAAMC,EAAQC,EAAQC,EAASC,EAAQC,EAAMC,GACnH,YAWA,SAASC,GAAYC,EAAMC,GACvB,GAAIC,GAAI,GAAIC,aAAYH,EAAMC,EAE9B,OAAOG,GAAUF,EAAGD,GAIxB,QAASI,GAAQC,EAASC,EAAKC,EAAKC,GAChC,MAAOC,GAAWH,GAAOA,EAAII,KAAKL,EAASE,EAAKC,GAAWF,EAG/D,QAASK,GAAeC,GACpB,GAAIA,GAAMA,GAAOC,OAAOC,SAASC,KAC7BC,EAAOJ,EAAIK,MAAM,KACjBC,IAQJ,OANIF,GAAKG,OAAS,GACdH,EAAK,GAAGC,MAAM,KAAKG,QAAQ,SAASC,GAChC,GAAIC,GAAKD,EAAWJ,MAAM,IAC1BC,GAAOI,EAAG,IAAMA,EAAG,KAGpBJ,EAIX,QAASK,GAAQC,GAGb,MAAOC,YAAWD,IAAU,EAMhC,QAASE,GAAIC,GACT,MAAOA,GAAIC,OAASD,EAAIC,KAAOA,KAInC,QAASC,GAAUC,GACf,GAAIC,KAAOC,EAAY,EACvB,OAAOF,GAASA,EAASC,EAAKA,EAIlC,QAASE,KACL,MAAOA,GAzDX,GAKIC,OALcC,SACLC,MAAMC,UAAUC,OACfF,MAAMC,UAAUE,QAClBH,MAAMC,UAAUG,MACfJ,MAAMC,UAAUI,OACjBjD,EAAQ0C,OAChB/B,EAAYX,EAAQW,UACpBM,EAAab,EAAMa,WAoCnBmB,EAAO,EAMPI,EAAY,CAgDhB,OArCAE,GAAMD,GACFnC,YAAcA,EAEdM,QAASA,EAETO,eAAgBA,EAEhBY,QAASA,EAETG,IAAKA,EAELG,SAAUA,EAEVa,IAAuB,mBAAX7B,QAAyBA,OAAO6B,KAAO7B,OAAO8B,UAAY,OAK1ET,EAAMD,EAAOjD,EAAOE,EAAOI,EAAME,EAAQG,EAAQC,GAC7CX,WAAaA,EAEbE,MAAQA,EAERC,SAAUA,EAEVC,QAASA,EAETE,MAAQA,EAERE,QAASA,EAETC,SAAUA,EAEVG,IAAKA,IAIFd,EAAQkD,MAAQA","file":"../langx.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./klass\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,Deferred,Evented,funcs,klass,objects,Restful,Stateful,strings,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,funcs,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});"]}