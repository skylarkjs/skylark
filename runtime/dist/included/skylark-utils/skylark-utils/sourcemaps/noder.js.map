{"version":3,"sources":["noder.js"],"names":["define","skylark","langx","styler","ensureNodes","nodes","copyByClone","isArrayLike","map","call","node","cloneNode","flatten","nodeName","elm","chkName","name","toLowerCase","undefined","contents","contentDocument","childNodes","html","innerHTML","this","empty","isString","isNumber","i","length","appendChild","clone","deep","self","isIE","nodeType","document","createElement","each","getAttribs","attr","setAttrib","getAttrib","tag","props","mixin","createFragment","trim","singleTagRE","test","RegExp","$1","fragmentRE","containers","container","dom","slice","forEach","removeChild","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","parent","documentElement","parentNode","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","after","placing","refNode","nextSibling","insertBefore","before","prepend","append","overlay","params","overlayDiv","css","position","top","left","width","height","zIndex","opacity","remove","replace","oldNode","replaceChild","throb","timer","style","time","callback","throbber","className","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","match","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","Array","prototype"],"mappings":"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","file":"../noder.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            langx.mixin(node, props);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent) {\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n"]}