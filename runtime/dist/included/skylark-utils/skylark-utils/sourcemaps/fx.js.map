{"version":3,"sources":["fx.js"],"names":["define","skylark","langx","browser","styler","eventer","animate","elm","properties","duration","ease","callback","delay","key","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","this","fired","hasScrollTop","isPlainObject","easing","complete","isString","fx","speeds","undefined","normal","off","isFunction","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","test","push","dasherize","transitionEnd","transform","transitionProperty","join","transitionDuration","transitionDelay","transitionTiming","event","target","currentTarget","css","cssReset","call","on","debounce","clientLeft","scrollToTop","show","speed","opacity","scale","hide","pos","scrollFrom","parseInt","scrollTop","i","runEvery","freq","scrollTo","interval","setInterval","clearInterval","toggle","isInvisible","fadeTo","fadeIn","fadeOut","fadeToggle","animationDelay","normalizeCssEvent","css3PropPrefix","normalizeCssProperty","mixin","fast","slow"],"mappings":"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","file":"../fx.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if(i<=freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, callback) {\r\n        animate(elm, { opacity: opacity }, speed, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, callback) {\r\n\r\n        fadeTo(elm, speed, 0, function() {\r\n            styler.hide(elm);\r\n            if (callback) {\r\n                callback.call(elm);\r\n            }\r\n\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, callback);\r\n        } else {\r\n            fadeOut(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\r\n"]}