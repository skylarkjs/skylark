{"version":3,"sources":["skylarkjs.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","xhrGet","url","callback","xhr","XMLHttpRequest","onreadystatechange","this","readyState","response","responseText","open","send","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","cb","requireOne","hasOwnProperty","Error","module","args","forEach","apply","window","onedep","modules","config","baseUrl","skylarkjs","skylark","http","res","console","error","cfg","JSON","parse","runtime","initApp","spa","_cfg","contextPath","app","go","path","force","prepare","then","run","spaModule","_start","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","each","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","location","href","segs","params","queryParam","nv","grep","out","has","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","get","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","async","parallel","rets","func","series","waterful","ArrayStore","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","eval","responseXML","Blob","xhrObj","reponse","statusText","evt","hdr","setRequestHeader","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","router","useHistoryApi","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","noCache","finded","_cache","_routes","routeName","hub","homePath","_homePath","setting","settings","routes","Route","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","content","forceRefresh","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","plugins","_plugins","_config","pluginName","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","cssPropName","support","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","isIE","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","doc","empty","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","_createStyleSheet","external","media","rel","head","sheetsById","createStyleSheet","sheetId","addSheetRules","deleteSheetRule","rule","sheet","deleteRuleFunc","rulesPropName","_rule","deleteRule","defaultSheetId","removeStyleSheet","insertRule","insertSheetRule","addRules","rules","insertRuleFunc","isAtRule","strAttr","depth","SPACE","repeat","adjust","parentName","strAt","strNode","adjusted","getElementsByTagName","defaultSheet","removeRule","_insertRule","addRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","$","disabled","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","stopPropagation","evented","Event","_args","readyRE","shortcuts","registry","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","shortcutKeys","shortcutKey","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","home","page_down","page_up","period","space","tab","up","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","dragSource","handleElm","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","over","dropped","manager","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","dropzone","droppedCallback","enterdCount","types","webkitGetAsEntry","getAsEntry","webentry","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","contentRange","blob","uploadName","encodeURI","getUploadedBytes","jqXHR","range","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","currentLoaded","_progress","chunkSize","ajax","textStatus","lengthComputable","errorThrown","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","webkitSlice","mozSlice","_bitrateTimer","jqXhr","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","createObjectURL","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","el","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","margin","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","replaceClass","newClass","oldClass","watch","imgs","totalCount","successed","successedCount","failered","faileredCount","img","isLoaded","progressedCount","progressed","isCompleted","naturalWidth","addBackgroundImage","elm1","reURL","Image","childImgs","background","preload","urls","images","viewer","loadedCallback","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","models","methodMap","read","sync","entity","emulateHTTP","emulateJSON","urlError","_method","Entity","fetch","resp","serverAttrs","wrapError","save","destroy","stopListening","encodeURIComponent","Collection","entities","comparator","_reset","setOptions","merge","addOptions","at","min","tail","initialize","singular","removed","_removeEntitys","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","errorCallback","loadedCallbacks","errorCallbacks","startTime","callbacks","deleteJavaScript","_delegator","domNode","HTMLElement","VisualElement","batch","action","widgets","defineWidgetClass","delegateEventSplitter","Widget","_ensureElement","$el","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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QAAA,SAAA9F,EAAAlF,GACA,GAAAL,KAEAA,GAAAuF,GAAAlF,EAEA65C,EAAA7uC,QAAArL,IAGAsL,SAAA,SAAAkS,EAAAlb,GACA,GAAAtC,KAEAwd,GAAA3hB,QAAA,SAAA0J,GACAvF,EAAAuF,GAAAw0C,EAAAz3C,EAAAiD,GAAAjD,KAGA43C,EAAA7uC,QAAArL,MAKA4rB,EAAAtgB,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAupB,GAGAjJ,EAAAtgB,UACA,YACA,aACAo3B,GAIA9W,EAAAtgB,UACA,MACA,KACA,MACA,YACA,WACAoxB,GAGA9Q,EAAAtgB,UACA,SACA,YACA++B,GAGAze,EAAAtgB,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACA+nB,GAEAzH,EAAAgB,KAAA,SAAApe,GACA,MAAA,SAAAA,EACAjU,KAAA0xB,KAEA1xB,KAAA0xB,KAAAU,WAAAne,IAKAod,EAAAtgB,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACA8gC,GAIAxgB,EAAAtgB,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACA+uB,GAGAzO,EAAAtgB,UACA,YACA,aACAo3B,GAIA9W,EAAAtgB,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAkd,GAGAoD,EAAAtgB,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAsX,GAEAvmB,EAAAuvB,KAAAA,IAGA/wB,OAAA,kBACA,sBACA,SAAA+wB,GACA,MAAAA,KAGA/wB,OAAA,yBACA,YACA,UACA,UACA,UACA,WACA,SACA,YACA,UACA,UACA,SAAAwB,EAAAqM,EAAA8f,EAAAqM,EAAAjS,EAAAyX,EAAAqC,EAAAzqB,EAAA2Z,GAgFA,QAAAyuB,KACA,MAAAA,GA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","file":"../skylarkjs.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylarkjs/skylark',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n//        } else if (!nativePromise) {\r\n//            var deferred = new Deferred(valueOrPromise.cancel);\r\n//            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n//            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.6-beta\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylarkjs/router',[\r\n    \"skylark-router/router\"\r\n], function(router) {\r\n    return router;\r\n});\r\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        baseUrl : function() {\r\n            return router.baseUrl();\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylarkjs/spa',[\r\n    \"skylark-spa/spa\"\r\n], function(spa) {\r\n    return spa;\r\n});\r\n\ndefine('skylarkjs/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylarkjs/core',[\r\n    \"./skylark\",\r\n    \"./router\",\r\n    \"./spa\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylarkjs/browser',[\r\n    \"skylark-utils/browser\"\r\n], function(browser) {\r\n    return browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body : function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow : langx.isWindow,\r\n\r\n        offsetParent : offsetParent,\r\n        \r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, noder) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isPlainObject(rules)) {\r\n            css = toString(rules);\r\n        } else {\r\n            css = rules;\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var strAttr = function (name, value, depth) {\r\n            return css.SPACE.repeat(depth) + name.trim() + ': ' + value.trim() + \";\\n\";\r\n        };\r\n\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strAt = function(name,values,depth) {\r\n            var str = \"\";\r\n            if (langx.isString(values)) {\r\n                str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values + \" \\\";\";\r\n            } else if (langx.isPlainObject(values)) {\r\n                str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                str += strNode(\"\",values,depth+1);\r\n                str += css.SPACE.repeat(depth) + \"}\\n\";\r\n\r\n            } else {\r\n                throw new Error(\"Invalid param!\");\r\n            }\r\n            return str;\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\";\r\n            if (name) {\r\n                str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                for (var n in values) {\r\n                    var value =values[n];\r\n                    if (langx.isString(value)) {\r\n                        // css property\r\n                        str += strAttr(n,value,depth+1)\r\n                    }\r\n                }\r\n\r\n                str += css.SPACE.repeat(depth) + \"}\\n\";\r\n            }\r\n\r\n            for (var n in values) {\r\n                var value =values[n];\r\n                if (langx.isPlainObject(value)) {\r\n                    var adjusted = adjust(name,n,depth);\r\n                    str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                } \r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n        var str = \"\";\r\n        for (var n in json) {\r\n            if (isAtRule(n)) {\r\n                str += strAt(n,json[n],0);\r\n            } else {\r\n                str += strNode(n,json[n],0);\r\n            }\r\n        }\r\n        return str;\r\n    };\r\n   \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylarkjs/css',[\r\n    \"skylark-utils/css\"\r\n], function(css) {\r\n    return css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylarkjs/datax',[\r\n    \"skylark-utils/datax\"\r\n], function(datax) {\r\n    return datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        marginSize : marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38        \r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys : keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylarkjs/dnd',[\r\n    \"skylark-utils/dnd\"\r\n], function(dnd) {\r\n    return dnd;\r\n});\r\n\ndefine('skylarkjs/eventer',[\r\n    \"skylark-utils/eventer\"\r\n], function(eventer) {\r\n    return eventer;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylarkjs/filer',[\r\n    \"skylark-utils/filer\"\r\n], function(filer) {\r\n    return filer;\r\n});\r\n\ndefine('skylarkjs/finder',[\r\n    \"skylark-utils/finder\"\r\n], function(finder) {\r\n    return finder;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylarkjs/fx',[\r\n    \"skylark-utils/fx\"\r\n], function(fx) {\r\n    return fx;\r\n});\r\n\ndefine('skylarkjs/geom',[\r\n    \"skylark-utils/geom\"\r\n], function(geom) {\r\n    return geom;\r\n});\r\n\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector);\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylarkjs/images',[\r\n    \"skylark-utils/images\"\r\n], function(images) {\r\n    return images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylarkjs/models',[\r\n    \"skylark-utils/models\"\r\n], function(models) {\r\n    return models;\r\n});\r\n\ndefine('skylarkjs/noder',[\r\n    \"skylark-utils/noder\"\r\n], function(noder) {\r\n    return noder;\r\n});\r\n\ndefine('skylarkjs/query',[\r\n    \"skylark-utils/query\"\r\n], function(query) {\r\n    return query;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylarkjs/scripter',[\r\n    \"skylark-utils/scripter\"\r\n], function(scripter) {\r\n    return scripter;\r\n});\r\n\ndefine('skylarkjs/styler',[\r\n    \"skylark-utils/styler\"\r\n], function(styler) {\r\n    return styler;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylarkjs/velm',[\r\n    \"skylark-utils/velm\"\r\n], function(velm) {\r\n    return velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(options,el) {\r\n\t    \t//for supporting init(el,options)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) {\r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylarkjs/widgets',[\r\n    \"skylark-utils/widgets\"\r\n], function(widgets) {\r\n    return widgets;\r\n});\r\n\ndefine('skylarkjs/main',[\r\n    \"./core\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./langx\",\r\n    \"./models\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./velm\",\r\n    \"./widgets\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylarkjs', ['skylarkjs/main'], function (main) { return main; });\n\n"]}