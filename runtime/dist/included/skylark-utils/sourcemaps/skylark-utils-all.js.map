{"version":3,"sources":["skylark-utils-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","get","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","then","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","async","parallel","rets","func","series","waterful","ArrayStore","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","RegExp","cssPropName","support","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","innerHTML","dom","isIE","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","doc","empty","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","rel","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","button","checked","disabled","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","enter","home","page_down","page_up","period","space","tab","up","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","handleElm","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","over","dropped","manager","_params","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","localStream","isSupported","video","audio","stream","createObjectURL","localMediaStream","onloadedmetadata","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","dropzone","droppedCallback","enterdCount","types","webkitGetAsEntry","getAsEntry","webentry","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","contentRange","blob","uploadName","encodeURI","getUploadedBytes","jqXHR","range","upperBytesPos","BitrateTimer","timestamp","now","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","currentLoaded","_progress","chunkSize","ajax","textStatus","lengthComputable","errorThrown","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","webkitSlice","mozSlice","_bitrateTimer","jqXhr","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","el","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","exec","wrapper_node_operation","argType","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","watch","imgs","totalCount","successed","successedCount","failered","faileredCount","img","isLoaded","progressedCount","progressed","isCompleted","naturalWidth","addBackgroundImage","elm1","reURL","Image","childImgs","background","preload","urls","images","viewer","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","models","methodMap","read","sync","entity","emulateHTTP","emulateJSON","urlError","_method","Entity","fetch","resp","serverAttrs","wrapError","save","destroy","stopListening","encodeURIComponent","Collection","entities","comparator","_reset","setOptions","addOptions","at","min","tail","initialize","singular","removed","_removeEntitys","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","cookies","sKey","unescape","cookie","list","expires","domain","secure","sExpires","vEnd","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","readfileAsArrayBuffer","getFile","fileEntry","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","write","rmfile","readdir","getDirectory","dirEntry","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","move","moveTo","chdir","onchdir","fullPath","importFromHost","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","defaultVal","getItem","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","widget","defineWidgetClass","delegateEventSplitter","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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","file":"../skylark-utils-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get || prop.value !== undefined)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n//        } else if (!nativePromise) {\r\n//            var deferred = new Deferred(valueOrPromise.cancel);\r\n//            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n//            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            document = window.document,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body : function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow : langx.isWindow,\r\n\r\n        offsetParent : offsetParent,\r\n        \r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38        \r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys : keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widget() {\r\n\t    return widget;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(options,el) {\r\n\t    \t//for supporting init(el,options)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (el) {\r\n\t        \tthis.el = el;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widget, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widget = widget;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widgets\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}