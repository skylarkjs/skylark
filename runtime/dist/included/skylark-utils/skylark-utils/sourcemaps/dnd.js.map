{"version":3,"sources":["dnd.js"],"names":["define","skylark","langx","noder","datax","finder","geom","eventer","styler","draggable","elm","params","Draggable","droppable","Droppable","dnd","DndManager","on","off","attr","removeAttr","pagePosition","addClass","height","Evented","inherit","klassName","init","prepare","e","create","dragSource","handleElm","trigger","start","event","p","this","draggingOffsetX","parseInt","pageX","left","draggingOffsetY","pageY","top","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","each","key","value","dataTransfer","setData","setDragImage","effectAllowed","over","end","dropped","removeClass","manager","self","_params","forEach","eventName","isFunction","mousedown","handle","closest","target","prop","mouseup","dragstart","dragend","stop","hoverClass","activeClass","acceptable","dragover","stopPropagation","e2","overElm","preventDefault","dropEffect","dragenter","dragleave","drop","mixin"],"mappings":"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","file":"../dnd.js","sourcesContent":["define([\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\",\n    \"./datax\",\n    \"./finder\",\n    \"./geom\",\n    \"./eventer\",\n    \"./styler\"\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\n    var on = eventer.on,\n        off = eventer.off,\n        attr = datax.attr,\n        removeAttr = datax.removeAttr,\n        offset = geom.pagePosition,\n        addClass = styler.addClass,\n        height = geom.height;\n\n\n    var DndManager = langx.Evented.inherit({\n      klassName : \"DndManager\",\n\n      init : function() {\n\n      },\n\n      prepare : function(draggable) {\n          var e = eventer.create(\"preparing\",{\n             dragSource : draggable.elm,\n             handleElm : draggable.handleElm\n          });\n          draggable.trigger(e);\n          draggable.dragSource = e.dragSource;\n      },\n\n      start : function(draggable,event) {\n\n        var p = geom.pagePosition(draggable.elm);\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\n\n        var e = eventer.create(\"started\",{\n          elm : draggable.elm,\n          dragSource : draggable.dragSource,\n          handleElm : draggable.handleElm,\n          ghost : null,\n\n          transfer : {\n          }\n        });\n\n        draggable.trigger(e);\n\n\n        this.dragging = draggable;\n\n        if (draggable.draggingClass) {\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\n        }\n\n        this.draggingGhost = e.ghost;\n        if (!this.draggingGhost) {\n          this.draggingGhost = draggable.elm;\n        }\n\n        this.draggingTransfer = e.transfer;\n        if (this.draggingTransfer) {\n\n            langx.each(this.draggingTransfer,function(key,value){\n                event.dataTransfer.setData(key, value);\n            });\n        }\n\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\n\n        event.dataTransfer.effectAllowed = \"copyMove\";\n\n        this.trigger(e);\n      },\n\n      over : function() {\n\n      },\n\n      end : function(dropped) {\n        var dragging = this.dragging;\n        if (dragging) {\n          if (dragging.draggingClass) {\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\n          }\n        }\n\n        var e = eventer.create(\"ended\",{\n        });        \n        this.trigger(e);\n\n\n        this.dragging = null;\n        this.draggingTransfer = null;\n        this.draggingGhost = null;\n        this.draggingOffsetX = null;\n        this.draggingOffsetY = null;\n      }\n    });\n\n    var manager = new DndManager(),\n        draggingHeight,\n        placeholders = [];\n\n\n\n    var Draggable = langx.Evented.inherit({\n      klassName : \"Draggable\",\n\n      init : function (elm,params) {\n        var self = this;\n\n        self.elm = elm;\n        self.draggingClass = params.draggingClass || \"dragging\",\n        self._params = params;\n\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\n            if (langx.isFunction(params[eventName])) {\n                self.on(eventName, params[eventName]);\n            }\n        });\n\n\n        eventer.on(elm,{\n          \"mousedown\" : function(e) {\n            if (params.handle) {\n              self.handleElm = finder.closest(e.target,params.handle);\n              if (!self.handleElm) {\n                return;\n              }\n            }\n            manager.prepare(self);\n            if (self.dragSource) {\n              datax.prop(self.dragSource, \"draggable\", true);\n            }\n          },\n\n          \"mouseup\" :   function(e) {\n            if (self.dragSource) {\n              datax.prop(self.dragSource, \"draggable\", false);\n              self.dragSource = null;\n              self.handleElm = null;\n            }\n          },\n\n          \"dragstart\":  function(e) {\n            datax.prop(self.dragSource, \"draggable\", false);\n            manager.start(self, e);\n          },\n\n          \"dragend\":   function(e){\n            eventer.stop(e);\n\n            if (!manager.dragging) {\n              return;\n            }\n\n            manager.end(false);\n          }\n        });\n\n      }\n\n    });\n\n\n    var Droppable = langx.Evented.inherit({\n      klassName : \"Droppable\",\n\n      init : function(elm,params) {\n        var self = this,\n            draggingClass = params.draggingClass || \"dragging\",\n            hoverClass,\n            activeClass,\n            acceptable = true;\n\n        self.elm = elm;\n        self._params = params;\n\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\n            if (langx.isFunction(params[eventName])) {\n                self.on(eventName, params[eventName]);\n            }\n        });\n\n        eventer.on(elm,{\n          \"dragover\" : function(e) {\n            e.stopPropagation()\n\n            if (!acceptable) {\n              return\n            }\n\n            var e2 = eventer.create(\"overing\",{\n                overElm : e.target,\n                transfer : manager.draggingTransfer,\n                acceptable : true\n            });\n            self.trigger(e2);\n\n            if (e2.acceptable) {\n              e.preventDefault() // allow drop\n\n              e.dataTransfer.dropEffect = \"copyMove\";\n            }\n\n          },\n\n          \"dragenter\" :   function(e) {\n            var params = self._params,\n                elm = self.elm;\n\n            var e2 = eventer.create(\"entered\",{\n                transfer : manager.draggingTransfer\n            });\n\n            self.trigger(e2);\n\n            e.stopPropagation()\n\n            if (hoverClass && acceptable) {\n              styler.addClass(elm,hoverClass)\n            }\n          },\n\n          \"dragleave\":  function(e) {\n            var params = self._params,\n                elm = self.elm;\n            if (!acceptable) return false\n            \n            var e2 = eventer.create(\"leaved\",{\n                transfer : manager.draggingTransfer\n            });\n            \n            self.trigger(e2);\n\n            e.stopPropagation()\n\n            if (hoverClass && acceptable) {\n              styler.removeClass(elm,hoverClass);\n            }\n          },\n\n          \"drop\":   function(e){\n            var params = self._params,\n                elm = self.elm;\n\n            eventer.stop(e); // stops the browser from redirecting.\n\n            if (!manager.dragging) return\n\n           // manager.dragging.elm.removeClass('dragging');\n\n            if (hoverClass && acceptable) {\n              styler.addClass(elm,hoverClass)\n            }\n\n            var e2 = eventer.create(\"dropped\",{\n                transfer : manager.draggingTransfer\n            });\n\n            self.trigger(e2);\n\n            manager.end(true)\n          }\n        });\n\n        manager.on(\"started\",function(e){\n            var e2 = eventer.create(\"started\",{\n                transfer : manager.draggingTransfer,\n                acceptable : false\n            });\n\n            self.trigger(e2);\n\n            acceptable = e2.acceptable;\n            hoverClass = e2.hoverClass;\n            activeClass = e2.activeClass;\n\n            if (activeClass && acceptable) {\n              styler.addClass(elm,activeClass);\n            }\n\n         }).on(\"ended\" , function(e){\n            var e2 = eventer.create(\"ended\",{\n                transfer : manager.draggingTransfer,\n                acceptable : false\n            });\n\n            self.trigger(e2);\n\n            if (hoverClass && acceptable) {\n              styler.removeClass(elm,hoverClass);\n            }\n            if (activeClass && acceptable) {\n              styler.removeClass(elm,activeClass);\n            }\n\n            acceptable = false;\n            activeClass = null;\n            hoverClass = null;\n        });\n\n      }\n    });\n\n\n    function draggable(elm, params) {\n      return new Draggable(elm,params);\n    }\n\n    function droppable(elm, params) {\n      return new Droppable(elm,params);\n    }\n\n    function dnd(){\n      return dnd;\n    }\n\n    langx.mixin(dnd, {\n       //params ： {\n        //  target : Element or string or function\n        //  handle : Element\n        //  copy : boolean\n        //  placeHolder : \"div\"\n        //  hoverClass : \"hover\"\n        //  start : function\n        //  enter : function\n        //  over : function\n        //  leave : function\n        //  drop : function\n        //  end : function\n        //\n        //\n        //}\n        draggable   : draggable,\n\n        //params ： {\n        //  accept : string or function\n        //  placeHolder\n        //\n        //\n        //\n        //}\n        droppable : droppable,\n\n        manager : manager\n\n\n    });\n\n    return skylark.dnd = dnd;\n});\n"]}