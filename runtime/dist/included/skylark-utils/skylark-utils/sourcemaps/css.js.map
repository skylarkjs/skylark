{"version":3,"sources":["css.js"],"names":["define","skylark","langx","construct","_createStyleSheet","link","document","createElement","id","count","rel","type","async","defer","head","appendChild","sheetElementsById","css","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","selector","index","call","this","addRule","mixin","createStyleSheet","cssText","loadStyleSheet","url","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","push","node","onload","onerror","startTime","Date","getTime","callbacks","i","length","href","deleteSheetRule","sheetId","rule","isNumber","each","_rule","removeStyleSheet","Error","remove","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","filter","matchSelector","selectorText","map","normalizeRule","support","nativeCSSStyleRule","CSSStyleRule","reverse","insertSheetRule"],"mappings":"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","file":"../css.js","sourcesContent":["define([\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\"\n], function(skylark, langx, construct) {\n\n    var head = document.getElementsByTagName(\"head\")[0],\n        count = 0,\n        sheetsByUrl = {},\n        sheetElementsById = {},\n        defaultSheetId = _createStyleSheet(),\n        defaultSheet = sheetElementsById[defaultSheetId],\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\n        insertRuleFunc,\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\n\n    if (defaultSheet.insertRule) {\n        var _insertRule = defaultSheet.insertRule;\n        insertRuleFunc = function(selector, css, index) {\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\n        };\n    } else {\n        insertRuleFunc = defaultSheet.addRule;\n    }\n\n    function normalizeSelector(selectorText) {\n        var selector = [],\n            last, len;\n        last = defaultSheet[rulesPropName].length;\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\n        len = defaultSheet[rulesPropName].length;\n        for (var i = len - 1; i >= last; i--) {\n            selector.push(_sheet[_rules][i].selectorText);\n            deleteRuleFunc.call(defaultSheet, i);\n        }\n        return selector.reverse().join(', ');\n    }\n\n    function _createStyleSheet() {\n        var link = document.createElement(\"link\"),\n            id = (count++);\n\n        link.rel = \"stylesheet\";\n        link.type = \"text/css\";\n        link.async = false;\n        link.defer = false;\n\n        head.appendChild(link);\n        sheetElementsById[id] = link;\n\n        return id;\n    }\n\n    function css() {\n        return css;\n    }\n\n    langx.mixin(css, {\n        createStyleSheet: function(cssText) {\n            return _createStyleSheet();\n        },\n\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\n            var sheet = sheetsByUrl[url];\n            if (!sheet) {\n                sheet = sheetsByUrl[url] = {\n                    state: 0, //0:unload,1:loaded,-1:loaderror\n                    loadedCallbacks: [],\n                    errorCallbacks: []\n                };\n            }\n\n            sheet.loadedCallbacks.push(loadedCallback);\n            sheet.errorCallbacks.push(errorCallback);\n\n            if (sheet.state === 1) {\n                sheet.node.onload();\n            } else if (sheet.state === -1) {\n                sheet.node.onerror();\n            } else {\n                sheet.id = _createStyleSheet();\n                var node = sheet.node = sheetElementsById[sheet.id];\n\n                startTime = new Date().getTime();\n\n                node.onload = function() {\n                    sheet.state = 1;\n                    sheet.state = -1;\n                    var callbacks = sheet.loadedCallbacks,\n                        i = callbacks.length;\n\n                    while (i--) {\n                        callbacks[i]();\n                    }\n                    sheet.loadedCallbacks = [];\n                    sheet.errorCallbacks = [];\n                },\n                node.onerror = function() {\n                    sheet.state = -1;\n                    var callbacks = sheet.errorCallbacks,\n                        i = callbacks.length;\n\n                    while (i--) {\n                        callbacks[i]();\n                    }\n                    sheet.loadedCallbacks = [];\n                    sheet.errorCallbacks = [];\n                };\n\n                node.href = sheet.url = url;\n\n                sheetsByUrl[node.url] = sheet;\n\n            }\n            return sheet.id;\n        },\n\n        deleteSheetRule: function(sheetId, rule) {\n            var sheet = sheetElementsById[sheetId];\n            if (langx.isNumber(rule)) {\n                deleteRuleFunc.call(sheet, rule);\n            } else {\n                langx.each(sheet[rulesPropName], function(i, _rule) {\n                    if (rule === _rule) {\n                        deleteRuleFunc.call(sheet, i);\n                        return false;\n                    }\n                });\n            }\n        },\n\n        deleteRule: function(rule) {\n            this.deleteSheetRule(defaultSheetId, rule);\n            return this;\n        },\n\n        removeStyleSheet: function(sheetId) {\n            if (sheetId === defaultSheetId) {\n                throw new Error(\"The default stylesheet can not be deleted\");\n            }\n            var sheet = sheetElementsById[sheetId];\n            delete sheetElementsById[sheetId];\n\n\n            construct.remove(sheet);\n            return this;\n        },\n\n        findRules: function(selector, sheetId) {\n            //return array of CSSStyleRule objects that match the selector text\n            var rules = [],\n                filters = parseSelector(selector);\n            $(document.styleSheets).each(function(i, styleSheet) {\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\n                    }).map(function() {\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\n                    }));\n                }\n            });\n            return rules.reverse();\n        },\n\n        insertRule: function(selector, css, index) {\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\n        },\n\n        insertSheetRule: function(sheetId, selector, css, index) {\n            if (!selector || !css) {\n                return -1;\n            }\n\n            var sheet = sheetElementsById[sheetId];\n            index = index || sheet[rulesPropName].length;\n\n            return insertRuleFunc.call(sheet, selector, css, index);\n\n        }\n    });\n\n    return skylark.css = css;\n});\n"]}