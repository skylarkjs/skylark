{"version":3,"sources":["skylarkjs.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","xhrGet","url","callback","xhr","XMLHttpRequest","onreadystatechange","this","readyState","response","responseText","open","send","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","cb","requireOne","hasOwnProperty","Error","module","args","forEach","apply","window","onedep","modules","config","baseUrl","skylarkjs","skylark","http","res","console","error","cfg","JSON","parse","runtime","initApp","spa","_cfg","contextPath","app","go","path","force","prepare","then","run","spaModule","_start","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","each","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","location","href","segs","params","queryParam","nv","has","inArray","indexOf","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","prototype","isDefined","Node","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","deepEq","PGLISTENERS","Symbol","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","createClass","extendClass","ctor","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","parent","init","klassName","Function","create","__proto__","partial","inherit","delegate","TMP","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","onResolved","onRejected","onProgress","progress","done","handler","fail","bind","listener","reason","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","get","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","router","useHistoryApi","state","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","hash","noCache","finded","_cache","_routes","routeName","hub","homePath","_homePath","setting","settings","routes","Route","start","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","query","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","content","forceRefresh","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","plugins","_plugins","_config","pluginName","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","cls","re","property","computedStyle","style","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","contents","contentDocument","childNodes","html","empty","isIE","getAttribs","setAttrib","getAttrib","tag","setAttribute","append","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","placing","refNode","nextSibling","insertBefore","prepend","overlay","overlayDiv","position","top","left","width","height","zIndex","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","update","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","offsetWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","relativeRect","scrollIntoView","align","getOffset","rootElm","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","matched","cssPropName","support","velm","ancestor","root","rootIsSelector","matches","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","cache","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","parseSelector","checkbox","checked","$","disabled","enabled","focus","activeElement","tabindex","gt","sel","hidden","lt","not","radio","selected","visible","isArrayFilter","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","sort","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","stopPropagation","evented","Event","_args","readyRE","shortcuts","registry","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","add","shortcutKeys","shortcutKey","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","delete","special","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","func","elem","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","el","toArray","is","excludes","parents","parentsUntil","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","margin","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","addBack","place","addContent","replaceClass","newClass","oldClass","tuples","Callbacks","once","memory","always","fns","tuple","returned","notify","list","stateString","disable","lock","fireWith","triggerAndReturn","triggerGlobal","global","ajaxStart","active","ajaxStop","ajaxBeforeSend","beforeSend","ajaxSuccess","status","success","resolveWith","ajaxComplete","ajaxError","rejectWith","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","ajax","urlAnchor","ajaxSettings","crossDomain","originAnchor","dataType","hasPlaceholder","Date","now","jsonp","ajaxJSONP","abortTimeout","accepts","headers","setHeader","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","getResponseHeader","eval","responseXML","blankRE","statusText","xhrFields","async","username","password","parseArguments","serialize","scope","addToPrefiltersOrTransports","dataTypeExpression","dataTypes","rnotwhite","jQuery","ajaxExtend","flatOptions","extend","firing","firingStart","firingLength","firingIndex","fire","stopOnFalse","unique","locked","sub","progressValues","progressContexts","resolveContexts","resolveValues","remain","updateFn","notifyWith","jsonpID","rscript","responseData","_callbackName","jsonpCallback","callbackName","script","originalCallback","errorType","triggerHandler","head","json","xml","post","getJSON","escape","encodeURIComponent","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup","construct","_createStyleSheet","link","count","rel","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","draggable","Draggable","droppable","Droppable","dnd","DndManager","dragSource","handleElm","draggingOffsetX","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","Blob","createObjectURL","images","elementNodeTypes","1","9","11","ImagesLoaded","onAlways","getImages","addElementImages","addImage","background","addElementBackgroundImages","childImgs","img","reURL","backgroundImage","addBackground","loadingImage","LoadingImage","Background","_this","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","Image","handleEvent","method","unbindEvents","imagesLoaded","inst","loaded","models","methodMap","patch","read","sync","entity","emulateHTTP","emulateJSON","urlError","_method","textStatus","errorThrown","Entity","fetch","resp","serverAttrs","wrapError","save","destroy","stopListening","Collection","entities","comparator","_reset","setOptions","addOptions","insert","at","min","tail","initialize","singular","removed","_removeEntitys","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","_place","choices","layoutNode","aroundNodeCoords","win","view","best","choice","corner","spaceAvailable","w","L","R","M","h","T","B","aroundCorner","bb","startXpos","startYpos","startX","startY","endX","endY","corners","padding","c","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","resizable","defaultOptions","touchActionNone","direction","border","grabber","startSize","currentSize","resizer","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","_delegator","domNode","HTMLElement","VisualElement","batch","action","widget","delegateEventSplitter","Widget","_ensureElement","$el","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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","file":"../skylarkjs.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylarkjs/skylark',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n              proto[name] = typeof props[name] == \"function\" && !props[name]._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                      (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, options) {\r\n                    return createClass(props, this, options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        mixin(p,{\r\n            then : function(onResolved,onRejected,onProgress) {\r\n                if (onProgress) {\r\n                    this.progress(onProgress);\r\n                }\r\n                return Promise.prototype.then.call(this,onResolved,onRejected);\r\n            },\r\n            done : function(handler) {\r\n                return Promise.prototype.then.call(this,handler);\r\n            },\r\n            fail : function(handler) { \r\n                return Promise.prototype.catch.call(this,handler);\r\n            }, \r\n            progress : function(handler) {\r\n                self[PGLISTENERS].push(handler);\r\n                return this;\r\n            }\r\n\r\n        });\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n        this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            e.target = this;\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.6-beta\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylarkjs/router',[\r\n    \"skylark-router/router\"\r\n], function(router) {\r\n    return router;\r\n});\r\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylarkjs/spa',[\r\n    \"skylark-spa/spa\"\r\n], function(spa) {\r\n    return spa;\r\n});\r\n\ndefine('skylarkjs/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylarkjs/core',[\r\n    \"./skylark\",\r\n    \"./router\",\r\n    \"./spa\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        'checkbox': function(elm){\r\n            return elm.type === \"checkbox\";\r\n        },\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'radio': function(elm){\r\n            return elm.type === \"radio\";\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        local.pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/ajax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    var Callbacks = function(options) {\r\n        options = langx.mixin({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                langx.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        langx.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = langx.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? langx.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    //     This module is borrow from zepto.deferred.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    //\r\n    //     Some code (c) 2005, 2013 jQuery Foundation, Inc. and other contributors\r\n\r\n    var slice = Array.prototype.slice\r\n\r\n    function Deferred(func) {\r\n        var tuples = [\r\n                // action, add listener, listener list, final state\r\n                [\"resolve\", \"done\", Callbacks({ once: 1, memory: 1 }), \"resolved\"],\r\n                [\"reject\", \"fail\", Callbacks({ once: 1, memory: 1 }), \"rejected\"],\r\n                [\"notify\", \"progress\", Callbacks({ memory: 1 })]\r\n            ],\r\n            state = \"pending\",\r\n            promise = {\r\n                state: function() {\r\n                    return state\r\n                },\r\n                always: function() {\r\n                    deferred.done(arguments).fail(arguments)\r\n                    return this\r\n                },\r\n                then: function( /* fnDone [, fnFailed [, fnProgress]] */ ) {\r\n                    var fns = arguments\r\n                    return Deferred(function(defer) {\r\n                        langx.each(tuples, function(i, tuple) {\r\n                            var fn = $.isFunction(fns[i]) && fns[i]\r\n                            deferred[tuple[1]](function() {\r\n                                var returned = fn && fn.apply(this, arguments)\r\n                                if (returned && langx.isFunction(returned.promise)) {\r\n                                    returned.promise()\r\n                                        .done(defer.resolve)\r\n                                        .fail(defer.reject)\r\n                                        .progress(defer.notify)\r\n                                } else {\r\n                                    var context = this === promise ? defer.promise() : this,\r\n                                        values = fn ? [returned] : arguments\r\n                                    defer[tuple[0] + \"With\"](context, values)\r\n                                }\r\n                            })\r\n                        })\r\n                        fns = null\r\n                    }).promise()\r\n                },\r\n\r\n                promise: function(obj) {\r\n                    return obj != null ? langx.mixin(obj, promise) : promise\r\n                }\r\n            },\r\n            deferred = {}\r\n\r\n        langx.each(tuples, function(i, tuple) {\r\n            var list = tuple[2],\r\n                stateString = tuple[3]\r\n\r\n            promise[tuple[1]] = list.add\r\n\r\n            if (stateString) {\r\n                list.add(function() {\r\n                    state = stateString\r\n                }, tuples[i ^ 1][2].disable, tuples[2][2].lock)\r\n            }\r\n\r\n            deferred[tuple[0]] = function() {\r\n                deferred[tuple[0] + \"With\"](this === deferred ? promise : this, arguments)\r\n                return this\r\n            }\r\n            deferred[tuple[0] + \"With\"] = list.fireWith\r\n        })\r\n\r\n        promise.promise(deferred)\r\n        if (func) func.call(deferred, deferred)\r\n        return deferred\r\n    }\r\n\r\n    var when = function(sub) {\r\n        var resolveValues = slice.call(arguments),\r\n            len = resolveValues.length,\r\n            i = 0,\r\n            remain = len !== 1 || (sub && langx.isFunction(sub.promise)) ? len : 0,\r\n            deferred = remain === 1 ? sub : Deferred(),\r\n            progressValues, progressContexts, resolveContexts,\r\n            updateFn = function(i, ctx, val) {\r\n                return function(value) {\r\n                    ctx[i] = this\r\n                    val[i] = arguments.length > 1 ? slice.call(arguments) : value\r\n                    if (val === progressValues) {\r\n                        deferred.notifyWith(ctx, val)\r\n                    } else if (!(--remain)) {\r\n                        deferred.resolveWith(ctx, val)\r\n                    }\r\n                }\r\n            }\r\n\r\n        if (len > 1) {\r\n            progressValues = new Array(len)\r\n            progressContexts = new Array(len)\r\n            resolveContexts = new Array(len)\r\n            for (; i < len; ++i) {\r\n                if (resolveValues[i] && langx.isFunction(resolveValues[i].promise)) {\r\n                    resolveValues[i].promise()\r\n                        .done(updateFn(i, resolveContexts, resolveValues))\r\n                        .fail(deferred.reject)\r\n                        .progress(updateFn(i, progressContexts, progressValues))\r\n                } else {\r\n                    --remain\r\n                }\r\n            }\r\n        }\r\n        if (!remain) deferred.resolveWith(resolveContexts, resolveValues)\r\n        return deferred.promise()\r\n    };\r\n\r\n    //     zepto.ajax.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    var jsonpID = 0,\r\n        document = window.document,\r\n        key,\r\n        name,\r\n        rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n        jsonType = 'application/json',\r\n        htmlType = 'text/html',\r\n        blankRE = /^\\s*$/,\r\n        originAnchor = document.createElement('a');\r\n\r\n    originAnchor.href = window.location.href;\r\n\r\n    // trigger a custom event and return false if it was cancelled\r\n    function triggerAndReturn(context, eventName, data) {\r\n        var event = eventer.create(eventName);\r\n        $(context).trigger(event, data)\r\n        return !event.isDefaultPrevented()\r\n    }\r\n\r\n    // trigger an Ajax \"global\" event\r\n    function triggerGlobal(settings, context, eventName, data) {\r\n        if (settings.global) return triggerAndReturn(context || document, eventName, data)\r\n    }\r\n\r\n    // Number of active Ajax requests\r\n    var active = 0;\r\n\r\n    function ajaxStart(settings) {\r\n        if (settings.global && active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\r\n    }\r\n\r\n    function ajaxStop(settings) {\r\n        if (settings.global && !(--active)) triggerGlobal(settings, null, 'ajaxStop')\r\n    }\r\n\r\n    // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\r\n    function ajaxBeforeSend(xhr, settings) {\r\n        var context = settings.context\r\n        if (settings.beforeSend.call(context, xhr, settings) === false ||\r\n            triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\r\n            return false\r\n\r\n        triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        ajaxStop(settings)\r\n    }\r\n\r\n    // Empty function, used as default callback\r\n    function empty() {}\r\n\r\n    var ajaxJSONP = function(options, deferred) {\r\n        if (!('type' in options)) return ajax(options)\r\n\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = (langx.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                ajaxError(null, errorType || 'error', xhr, options, deferred)\r\n            } else {\r\n                ajaxSuccess(responseData[0], xhr, options, deferred)\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && langx.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        if (ajaxBeforeSend(xhr, options) === false) {\r\n            abort('abort')\r\n            return xhr\r\n        }\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return xhr;\r\n    };\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest()\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: jsonType,\r\n            xml: 'application/xml, text/xml',\r\n            html: htmlType,\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    };\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) mime = mime.split(';', 2)[0]\r\n        return mime && (mime == htmlType ? 'html' :\r\n            mime == jsonType ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text'\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && langx.type(options.data) != \"string\")\r\n            options.data = param(options.data, options.traditional)\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\r\n            options.url = appendQuery(options.url, options.data), options.data = undefined\r\n    }\r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options || {}),\r\n            deferred = Deferred(),\r\n            urlAnchor\r\n        for (key in ajaxSettings)\r\n            if (settings[key] === undefined) settings[key] = ajaxSettings[key]\r\n\r\n        ajaxStart(settings)\r\n\r\n        if (!settings.crossDomain) {\r\n            urlAnchor = document.createElement('a')\r\n            urlAnchor.href = settings.url\r\n            urlAnchor.href = urlAnchor.href\r\n            settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\r\n        }\r\n\r\n        if (!settings.url) settings.url = window.location.toString()\r\n        serializeData(settings)\r\n\r\n        var dataType = settings.dataType,\r\n            hasPlaceholder = /\\?.+=\\?/.test(settings.url)\r\n        if (hasPlaceholder) dataType = 'jsonp'\r\n\r\n        if (settings.cache === false || (\r\n                (!options || options.cache !== true) &&\r\n                ('script' == dataType || 'jsonp' == dataType)\r\n            ))\r\n            settings.url = appendQuery(settings.url, '_=' + Date.now())\r\n\r\n        if ('jsonp' == dataType) {\r\n            if (!hasPlaceholder)\r\n                settings.url = appendQuery(settings.url,\r\n                    settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\r\n            return ajaxJSONP(settings, deferred)\r\n        }\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n\r\n        if (settings.headers)\r\n            for (name in settings.headers) setHeader(name, settings.headers[name])\r\n        xhr.setRequestHeader = setHeader\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script')(1, eval)(result)\r\n                        else if (dataType == 'xml') result = xhr.responseXML\r\n                        else if (dataType == 'json') result = blankRE.test(result) ? null : JSON.parse(result)\r\n                    } catch (e) { error = e }\r\n\r\n                    if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\r\n                    else ajaxSuccess(result, xhr, settings, deferred)\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) nativeSetHeader.apply(xhr, headers[name])\r\n\r\n        if (settings.timeout > 0) abortTimeout = setTimeout(function() {\r\n            xhr.onreadystatechange = empty\r\n            xhr.abort()\r\n            ajaxError(null, 'timeout', xhr, settings, deferred)\r\n        }, settings.timeout)\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr\r\n    }\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if (langx.isFunction(data)) dataType = success, success = data, data = undefined\r\n        if (!langx.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    var get = function( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    };\r\n\r\n    var post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return ajax(options)\r\n    };\r\n\r\n    var getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return ajax(options)\r\n    }\r\n\r\n    query.fn.load = function(url, data, success) {\r\n        if (!this.length) return this\r\n        var self = this,\r\n            parts = url.split(/\\s/),\r\n            selector,\r\n            options = parseArguments(url, data, success),\r\n            callback = options.success\r\n        if (parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        ajax(options)\r\n        return this\r\n    }\r\n\r\n    var escape = encodeURIComponent\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value)\r\n            if (scope) key = traditional ? scope :\r\n                scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) params.add(value.name, value.value)\r\n            // recurse into nested objects\r\n            else if (type == \"array\" || (!traditional && type == \"object\"))\r\n                serialize(params, value, traditional, key)\r\n            else params.add(key, value)\r\n        })\r\n    }\r\n\r\n    var param = function(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) value = value()\r\n            if (value == null) value = \"\"\r\n            this.push(escape(key) + '=' + escape(value))\r\n        }\r\n        serialize(params, obj, traditional)\r\n        return params.join('&').replace(/%20/g, '+')\r\n    };\r\n\r\n    var\r\n        /* Prefilters\r\n         * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n         * 2) These are called:\r\n         *    - BEFORE asking for a transport\r\n         *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n         * 3) key is the dataType\r\n         * 4) the catchall symbol \"*\" can be used\r\n         * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n         */\r\n        prefilters = {},\r\n\r\n        /* Transports bindings\r\n         * 1) key is the dataType\r\n         * 2) the catchall symbol \"*\" can be used\r\n         * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n         */\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    var ajaxTransport = addToPrefiltersOrTransports(transports);\r\n\r\n    // A special extend for ajax options\r\n    // that takes \"flat\" options (not to be deep extended)\r\n    // Fixes #9887\r\n    function ajaxExtend(target, src) {\r\n        var key, deep,\r\n            flatOptions = ajaxSettings.flatOptions || {};\r\n\r\n        for (key in src) {\r\n            if (src[key] !== undefined) {\r\n                (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\r\n            }\r\n        }\r\n        if (deep) {\r\n            jQuery.extend(true, target, deep);\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    // Creates a full fledged settings object into target\r\n    // with both ajaxSettings and settings fields.\r\n    // If target is omitted, writes into ajaxSettings.\r\n    var ajaxSetup = function(target, settings) {\r\n        return settings ?\r\n\r\n            // Building a settings object\r\n            ajaxExtend(ajaxExtend(target, ajaxSettings), settings) :\r\n\r\n            // Extending ajaxSettings\r\n            ajaxExtend(ajaxSettings, target);\r\n    };\r\n\r\n    // Base inspection function for prefilters and transports\r\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\r\n\r\n        var inspected = {},\r\n            seekingTransport = (structure === transports);\r\n\r\n        function inspect(dataType) {\r\n            var selected;\r\n            inspected[dataType] = true;\r\n            jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\r\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\r\n                if (typeof dataTypeOrTransport === \"string\" &&\r\n                    !seekingTransport && !inspected[dataTypeOrTransport]) {\r\n\r\n                    options.dataTypes.unshift(dataTypeOrTransport);\r\n                    inspect(dataTypeOrTransport);\r\n                    return false;\r\n                } else if (seekingTransport) {\r\n                    return !(selected = dataTypeOrTransport);\r\n                }\r\n            });\r\n            return selected;\r\n        }\r\n\r\n        return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\r\n    }\r\n\r\n\r\n    langx.mixin(ajax, {\r\n    \tajaxJSONP : ajaxJSONP,\r\n    \tajaxPrefilter : ajaxPrefilter,\r\n    \tajaxTransport: ajaxTransport,\r\n    \tajaxSettings : ajaxSettings,\r\n    \tajaxSetup : ajaxSetup,\r\n\r\n    \tCallbacks:Callbacks,\r\n\r\n    \tDeferred: Deferred,\r\n\r\n    \tget : get,\r\n    \tgetJSON : getJSON,\r\n    \tparam: param,\r\n    \tpost: post,\r\n\r\n    \twhen: when\r\n\r\n    });\r\n\r\n\r\n    return skylark.ajax = ajax;\r\n});\r\n\ndefine('skylarkjs/ajax',[\r\n    \"skylark-utils/ajax\"\r\n], function(ajax) {\r\n    return ajax;\r\n});\r\n\ndefine('skylarkjs/browser',[\r\n    \"skylark-utils/browser\"\r\n], function(browser) {\r\n    return browser;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylarkjs/css',[\r\n    \"skylark-utils/css\"\r\n], function(css) {\r\n    return css;\r\n});\r\n\ndefine('skylarkjs/datax',[\r\n    \"skylark-utils/datax\"\r\n], function(datax) {\r\n    return datax;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylarkjs/dnd',[\r\n    \"skylark-utils/dnd\"\r\n], function(dnd) {\r\n    return dnd;\r\n});\r\n\ndefine('skylarkjs/eventer',[\r\n    \"skylark-utils/eventer\"\r\n], function(eventer) {\r\n    return eventer;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylarkjs/filer',[\r\n    \"skylark-utils/filer\"\r\n], function(filer) {\r\n    return filer;\r\n});\r\n\ndefine('skylarkjs/finder',[\r\n    \"skylark-utils/finder\"\r\n], function(finder) {\r\n    return finder;\r\n});\r\n\ndefine('skylarkjs/fx',[\r\n    \"skylark-utils/fx\"\r\n], function(fx) {\r\n    return fx;\r\n});\r\n\ndefine('skylarkjs/geom',[\r\n    \"skylark-utils/geom\"\r\n], function(geom) {\r\n    return geom;\r\n});\r\n\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./query\"\r\n], function(skylark,langx,$) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n  /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // coerce ImagesLoaded() without new, to be new ImagesLoaded()\r\n      if ( !( this instanceof ImagesLoaded ) ) {\r\n        return new ImagesLoaded( elem, options, onAlways );\r\n      }\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new Background( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger( eventName);\r\n      this.trigger( 'always');\r\n\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n\r\n    // ----- events ----- //\r\n\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- Background -------------------------- //\r\n  var Background = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n\r\n   $.fn.imagesLoaded = function( options, callback ) {\r\n      var inst = new ImagesLoaded( this, options, callback );\r\n\r\n      var d = new langx.Deferred();\r\n      \r\n      inst.on(\"progress\",function(e){\r\n        d.progress(e);\r\n      });\r\n\r\n      inst.on(\"done\",function(e){\r\n        d.resolve(e);\r\n      });\r\n\r\n      inst.on(\"fail\",function(e){\r\n        d.reject(e);\r\n      });\r\n\r\n      return d.promise;\r\n   };\r\n\r\n    function images() {\r\n        return images;\r\n    }\r\n\r\n    langx.mixin(images, {\r\n      loaded : ImagesLoaded\r\n    });\r\n\r\n    return skylark.images = images;\r\n});\r\n\ndefine('skylarkjs/images',[\r\n    \"skylark-utils/images\"\r\n], function(images) {\r\n    return images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./ajax\"\r\n], function(skylark,langx,ajax) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = ajax(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylarkjs/models',[\r\n    \"skylark-utils/models\"\r\n], function(models) {\r\n    return models;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylarkjs/mover',[\r\n    \"skylark-utils/mover\"\r\n], function(mover) {\r\n    return mover;\r\n});\r\n\ndefine('skylarkjs/noder',[\r\n    \"skylark-utils/noder\"\r\n], function(noder) {\r\n    return noder;\r\n});\r\n\ndefine('skylarkjs/query',[\r\n    \"skylark-utils/query\"\r\n], function(query) {\r\n    return query;\r\n});\r\n\ndefine('skylark-utils/resizer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return skylark.resizer = resizer;\r\n});\r\n\ndefine('skylarkjs/resizer',[\r\n    \"skylark-utils/resizer\"\r\n], function(resizer) {\r\n    return resizer;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylarkjs/scripter',[\r\n    \"skylark-utils/scripter\"\r\n], function(scripter) {\r\n    return scripter;\r\n});\r\n\ndefine('skylark-utils/selector',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return skylark.selector = selector;\r\n});\r\n\ndefine('skylarkjs/selector',[\r\n    \"skylark-utils/selector\"\r\n], function(selector) {\r\n    return selector;\r\n});\r\n\ndefine('skylarkjs/styler',[\r\n    \"skylark-utils/styler\"\r\n], function(styler) {\r\n    return styler;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylarkjs/velm',[\r\n    \"skylark-utils/velm\"\r\n], function(velm) {\r\n    return velm;\r\n});\r\n\ndefine('skylark-utils/widget',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    function widget() {\r\n        return widget;\r\n    }\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n        init :function(el,options) {\r\n            if (!langx.isHtmlNode(el)) {\r\n                options = el;\r\n                el = null;\r\n            }\r\n            if (el) {\r\n            \tthis.el = el;\r\n        \t}\r\n            if (options) {\r\n                langx.mixin(this,options);\r\n            }\r\n            if (!this.cid) {\r\n                this.cid = langx.uniqueId('w');\r\n            }\r\n            this._ensureElement();\r\n        },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    }\r\n  \t});\r\n\r\n\r\n    langx.mixin(widget, {\r\n    \t$ : query,\r\n\r\n    \tWidget : Widget\r\n    });\r\n\r\n\r\n    return skylark.widget = widget;\r\n});\r\n\ndefine('skylarkjs/widget',[\r\n    \"skylark-utils/widget\"\r\n], function(widget) {\r\n    return widget;\r\n});\r\n\ndefine('skylarkjs/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./langx\",\r\n    \"./models\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./resizer\",\r\n    \"./scripter\",\r\n    \"./selector\",\r\n    \"./styler\",\r\n    \"./velm\",\r\n    \"./widget\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylarkjs', ['skylarkjs/main'], function (main) { return main; });\n\n"]}