{"version":3,"sources":["transforms.js"],"names":["define","skylark","langx","browser","datax","styler","getMatrix","radian","x","y","Cos","Math","cos","Sin","sin","M11","M12","M21","M22","getZoom","scale","zoom","change","el","d","matrix","css","css3Transform","toFixed","transformData","data","_createApiMethod","calcFunc","args","makeArray","arguments","shift","unshift","apply","this","transforms","normalizeCssProperty","calcs","vertical","PI","horizontal","rotate","degress","left","right","hZoom","vZoom","zoomin","zoomout","forEach","name","mixin","reset"],"mappings":";;;;;;;AAAAA,QACI,YACA,UACA,YACA,UACA,YACD,SAASC,EAAQC,EAAMC,EAAQC,EAAMC,GAGtC,QAASC,GAAUC,EAAQC,EAAGC,GAC5B,GAAIC,GAAMC,KAAKC,IAAIL,GAASM,EAAMF,KAAKG,IAAIP,EAC3C,QACEQ,IAAKL,EAAMF,EACXQ,KAAMH,EAAMJ,EACZQ,IAAKJ,EAAML,EACXU,IAAKR,EAAMD,GAIf,QAASU,GAAQC,EAAOC,GACpB,MAAOD,GAAQ,GAAKA,GAASC,EAAOA,EAClCD,EAAQ,GAAKA,EAAQC,GAAQA,EAAO,EAGxC,QAASC,GAAOC,EAAGC,GACjB,GAAIC,GAASnB,EAAUkB,EAAEjB,OAAQiB,EAAEf,EAAGe,EAAEhB,EACxCH,GAAOqB,IAAIH,EAAGI,EAAe,UACzBF,EAAOV,IAAIa,QAAQ,IAAM,IAAMH,EAAOR,IAAIW,QAAQ,IAAM,IACxDH,EAAOT,IAAIY,QAAQ,IAAM,IAAMH,EAAOP,IAAIU,QAAQ,IAAM,WAIhE,QAASC,GAAcN,EAAGC,GACxB,MAAIA,OACFpB,GAAM0B,KAAKP,EAAG,YAAYC,IAE1BA,EAAIpB,EAAM0B,KAAKP,EAAG,iBAClBC,EAAEjB,OAASiB,EAAEjB,QAAU,EACvBiB,EAAEhB,EAAIgB,EAAEhB,GAAK,EACbgB,EAAEf,EAAIe,EAAEf,GAAK,EACbe,EAAEH,KAAOG,EAAEH,MAAQ,EACZG,GAsDX,QAASO,GAAiBC,GACxB,MAAO,YACL,GAAIC,GAAO/B,EAAMgC,UAAUC,WACzBZ,EAAKU,EAAKG,QACRZ,EAAIK,EAAcN,EACpBU,GAAKI,QAAQb,GACbQ,EAASM,MAAMC,KAAKN,GACpBX,EAAOC,EAAGC,GACVK,EAAcN,EAAGC,IAIvB,QAASgB,KACP,MAAOA,GArGT,GAAIb,GAAgBxB,EAAQsC,qBAAqB,aAsC7CC,GAEFC,SAAW,SAAUnB,GACjBA,EAAEjB,OAASI,KAAKiC,GAAKpB,EAAEjB,OACvBiB,EAAEf,OAINoC,WAAa,SAAUrB,GACnBA,EAAEjB,OAASI,KAAKiC,GAAKpB,EAAEjB,OACvBiB,EAAEhB,OAINsC,OAAS,SAAUtB,EAAEuB,GACjBvB,EAAEjB,OAASwC,EAAUpC,KAAKiC,GAAK,KAInCI,KAAO,SAAUxB,GACbA,EAAEjB,QAAUI,KAAKiC,GAAK,GAI1BK,MAAQ,SAAUzB,GACdA,EAAEjB,QAAUI,KAAKiC,GAAK,GAI1BxB,MAAO,SAAUI,EAAEH,GACf,GAAI6B,GAAQ/B,EAAQK,EAAEf,EAAGY,GAAO8B,EAAQhC,EAAQK,EAAEhB,EAAGa,EACjD6B,IAASC,IACX3B,EAAEf,GAAKyC,EACP1B,EAAEhB,GAAK2C,IAKbC,OAAQ,SAAU5B,GAChBkB,EAAMtB,MAAMI,EAAE,KAIhB6B,QAAS,SAAU7B,GACjBkB,EAAMtB,MAAMI,QAuChB,QAjBC,WAAW,aAAa,SAAS,OAAO,QAAQ,QAAQ,OAAO,SAAS,WAAW8B,QAAQ,SAASC,GACnGf,EAAWe,GAAQxB,EAAiBW,EAAMa,MAG5CrD,EAAMsD,MAAMhB,GACViB,MAAQ,SAASlC,GACf,GAAIC,IACFhB,EAAI,EACJC,EAAI,EACJF,OAAS,EAEXe,GAAOC,EAAGC,GACVK,EAAcN,EAAGC,MAKdvB,EAAQuC,WAAaA","file":"../transforms.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n"]}