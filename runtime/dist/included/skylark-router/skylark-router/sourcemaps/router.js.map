{"version":3,"sources":["router.js"],"names":["define","skylark","langx","createEvent","type","props","e","CustomEvent","safeMixin","current","_curCtx","dispatch","ctx","ret","route","exit","path","params","_prevCtx","m","map","r","enter","force","Deferred","when","then","_hub","trigger","previous","go","router","useHistoryApi","state","window","history","pushState","document","title","_baseUrl","replace","dispatchEvent","useHashbang","newHash","location","hash","noCache","finded","_cache","each","_routes","name","match","routeName","baseUrl","isDefined","this","hub","homePath","_homePath","setting","settings","routes","mixin","Route","start","host","initPath","pathname","undefined","startsWith","addEventListener","preventDefault","Evented","inherit","klassName","init","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","self","forEach","eventName","isFunction","on","query","_entering","result","_entered","ok","_exiting","_exited","names","x","indexOf","slice","decodeURIComponent","exec","i","len","length","val","off","apply","arguments","one"],"mappings":";;;;;;;AAAAA,QACI,wBACA,uBACD,SAASC,EAASC,GAUjB,QAASC,GAAYC,EAAKC,GACtB,GAAIC,GAAI,GAAIC,aAAYH,EAAKC,EAC7B,OAAOH,GAAMM,UAAUF,EAAGD,GAqI9B,QAASI,KACL,MAAOC,GAIX,QAASC,GAASC,GAEd,GAAIF,EAAS,CACT,GAAIG,GAAMH,EAAQI,MAAMC,MACpBC,KAAMN,EAAQM,KACdC,OAAQP,EAAQO,SACjB,EACH,KAAKJ,EACD,OAMR,GAFAK,EAAWR,EACXA,EAAUE,GACLF,EAAQI,MAAO,CAChB,GAAIK,GAAIC,EAAIV,EAAQM,KACpBN,GAAQI,MAAQK,EAAEL,MAClBJ,EAAQO,OAASE,EAAEF,OAGvB,GAAII,GAAIX,EAAQI,MAAMQ,OAClBC,MAAOb,EAAQa,MACfP,KAAMN,EAAQM,KACdC,OAAQP,EAAQO,SAClB,EAEFf,GAAMsB,SAASC,KAAKJ,GAAGK,KAAK,WACxBC,EAAKC,QAAQzB,EAAY,WACrBM,QAASC,EACTmB,SAAUX,KAGdR,EAAQI,MAAMQ,OACVN,KAAMN,EAAQM,KACdC,OAAQP,EAAQO,SAClB,GAEEC,GACAA,EAASJ,MAAMC,MACXC,KAAME,EAASF,KACfC,OAAQC,EAASD,SAClB,GAGPU,EAAKC,QAAQzB,EAAY,UACrBM,QAASC,EACTmB,SAAUX,OAKtB,QAASY,GAAGd,EAAMO,GACd,IAAKA,GAASb,GAAWA,EAAQM,MAAQA,EACrC,OAAO,CAEX,IAAIJ,GAAMQ,EAAIJ,EACd,IAAIJ,EAGA,GAFAA,EAAII,KAAOA,EAEPe,EAAOC,cAAe,CACtB,GAAIC,IACAV,MAAOA,EACPP,KAAMA,EAGVkB,QAAOC,QAAQC,UAAUH,EAAOI,SAASC,OAAQC,EAAWvB,GAAMwB,QAAQ,KAAM,MAChFN,OAAOO,cAActC,EAAY,YAC7B8B,MAAOA,SAER,IAAIF,EAAOW,YAAa,CAC3B,GAAIC,GAAU,KAAO3B,CACjBkB,QAAOU,SAASC,OAASF,EACzBT,OAAOU,SAASC,KAAOF,EAEvBhC,EAASC,OAGbD,GAASC,EAGjB,QAAO,EAGX,QAASQ,GAAIJ,EAAM8B,GACf,GAAIC,IAAS,CACb,QAAKD,IACDC,EAASC,EAAOhC,IAEL+B,GAGf7C,EAAM+C,KAAKC,EAAS,SAASC,EAAMrC,GAC/B,GAAID,GAAMC,EAAMsC,MAAMpC,EACtB,QAAIH,IACAkC,GACIjC,MAAOA,EACPG,OAAQJ,IAEL,KAIXkC,IAAWD,IACXE,EAAOhC,GAAQ+B,GAEZA,GAGX,QAAS/B,GAAKqC,EAAWpC,GACrB,GACID,GADAF,EAAQoC,EAAQG,EAKpB,OAHIvC,KACAE,EAAOF,EAAME,KAAKC,IAEfD,EAGX,QAASa,KACL,MAAOX,GAGX,QAASoC,GAAQtC,GACb,MAAId,GAAMqD,UAAUvC,IAChBuB,EAAWvB,EACJwC,MAEAjB,EAIf,QAASkB,KACL,MAAO9B,GAGX,QAAS+B,GAAS1C,GACd,MAAId,GAAMqD,UAAUvC,IAChB2C,EAAY3C,EACLwC,MAEAG,EAIf,QAAS7C,GAAMqC,EAAMS,GACjB,GAAI1D,EAAMqD,UAAUK,GAAU,CAC1B,GAAIC,KAGJ,OAFAA,GAASV,GAAQS,EACjBE,EAAOD,GACAL,KAEP,MAAON,GAAQC,GAIvB,QAASW,GAAOD,GACZ,IAAK3D,EAAMqD,UAAUM,GACjB,MAAO3D,GAAM6D,SAAUb,EAEvB,KAAK,GAAIC,KAAQU,GACbX,EAAQC,GAAQ,GAAIpB,GAAOiC,MAAMb,EAAMU,EAASV,IAM5D,QAASc,KACqB,MAAtBlC,EAAOW,aAA+C,MAAxBX,EAAOC,gBACjCE,OAAOU,SAASsB,MAAShC,OAAOC,QAAQC,UAExCL,EAAOC,eAAgB,EAGvBD,EAAOW,aAAc,EAI7B,IAAIyB,GAAW,EAEXpC,GAAOC,eACPmC,EAAWjC,OAAOU,SAASwB,SACVC,SAAb9B,IACAA,EAAW4B,EAAS3B,QAAQ,MAAO,KAEvC2B,EAAWA,EAAS3B,QAAQD,EAAU,KAAOoB,GAAa,KAE1DQ,EADOpC,EAAOW,YACHR,OAAOU,SAASC,KAAKL,QAAQ,KAAM,KAAOmB,GAAa,IAEvD,IAGVQ,EAASG,WAAW,OACrBH,EAAW,IAAMA,GAoBjBpC,EAAOC,cACPE,OAAOqC,iBAAiB,WAAY,SAASjE,GACtCA,EAAE2B,OAAOtB,EAASL,EAAE2B,OACvB3B,EAAEkE,mBAECzC,EAAOW,aACdR,OAAOqC,iBAAiB,aAAc,SAASjE,GAC3CK,GACIK,KAAMkB,OAAOU,SAASC,KAAKL,QAAQ,MAAO,MAE9ClC,EAAEkE,mBAIV1C,EAAGqC,GArXP,GAAIzD,GACAQ,EACAqB,EACAoB,EACAT,KACAF,KACArB,EAAO,GAAIzB,GAAMuE,QAOjBT,EAAQ9D,EAAMuE,QAAQC,SACtBC,UAAW,QACXC,KAAM,SAASzB,EAAMS,GACjBA,EAAU1D,EAAM6D,SAAUH,EAC1B,IAAIiB,GAASjB,EAAQiB,QAAU,GAC3BC,EAAUD,EACVE,EAAaD,EAAQ1B,MAAM,qBACZ,QAAf2B,GACAA,EAAaA,EAAW3D,IAAI,SAAS4D,GACjC,MAAOA,GAAUC,UAAU,KAE/BH,EAAUA,EAAQtC,QAAQ,qBAAsB,UAEhDuC,KAGAD,EADY,MAAZA,EACU,OAEAA,EAAQtC,QAAQ,IAAK,OAGnCgB,KAAK0B,SAAWtB,EAChBJ,KAAKL,KAAOA,EACZK,KAAKqB,OAASA,EACdrB,KAAKuB,WAAaA,EAClBvB,KAAKvC,OAAS6D,EACdtB,KAAK2B,MAAQ,GAAIC,QAAO,IAAMN,EAAU,IAAK,GAE7C,IAAIO,GAAO7B,MACV,WAAY,UAAW,UAAW,UAAU8B,QAAQ,SAASC,GACtDrF,EAAMsF,WAAW5B,EAAQ2B,KACzBF,EAAKI,GAAGF,EAAW3B,EAAQ2B,OAKvCjE,MAAO,SAASV,EAAI8E,GAChB,GAAIA,EAAO,CACP,GAAIrE,GAAImC,KAAKmC,UAAU/E,GACnByE,EAAO7B,IAEX,OAAOtD,GAAMsB,SAASC,KAAKJ,GAAGK,KAAK,WAC/B,GAAIpB,GAAIH,EAAY,YAChBW,MAAOuE,EACPO,QAAQ,GAKZ,OAFAP,GAAKzD,QAAQtB,GAENA,EAAEsF,SAQb,MALApC,MAAKqC,SAASjF,GAEd4C,KAAK5B,QAAQzB,EAAY,UAAWD,EAAMM,WACtCM,MAAO0C,MACR5C,KACI4C,MAIfzC,KAAM,SAASH,EAAK8E,GAChB,GAAIA,EAAO,CACP,GAAII,GAAKtC,KAAKuC,SAASnF,EACvB,KAAKkF,EACD,OAAO,CAGX,IAAIxF,GAAIH,EAAY,WAChBW,MAAO0C,KACPoC,QAAQ,GAKZ,OAFApC,MAAK5B,QAAQtB,GAENA,EAAEsF,OAOT,MALApC,MAAKwC,QAAQpF,GACb4C,KAAK5B,QAAQzB,EAAY,SAAUD,EAAMM,WACrCM,MAAO0C,MACR5C,KAEI4C,MAIfJ,MAAO,SAASpC,GACZ,GAAIiF,GAAQzC,KAAKuB,WACbmB,EAAIlF,EAAKmF,QAAQ,KACjBnF,GAAQkF,EAAIlF,EAAKoF,MAAM,EAAGF,GAAKG,mBAAmBrF,GAClDG,EAAIqC,KAAK2B,MAAMmB,KAAKtF,EAExB,KAAKG,EACD,OAAO,CAIX,KAAK,GADDF,MACKsF,EAAI,EAAGC,EAAMrF,EAAEsF,OAAQF,EAAIC,IAAOD,EAAG,CAC1C,GAAIpD,GAAO8C,EAAMM,EAAI,GACjBG,EAAML,mBAAmBlF,EAAEoF,GAC/BtF,GAAOkC,GAAQuD,EAGnB,MAAOzF,IAGXD,KAAM,SAASC,GACX,GAAID,GAAOwC,KAAKqB,MAMhB,OALI5D,KACAD,EAAOA,EAAKwB,QAAQ,oBAAqB,SAASY,EAAO4B,GACrD,MAAO/D,GAAO+D,MAGfhE,GAGX2E,UAAW,SAAS/E,GAChB,OAAO,GAEXiF,SAAU,SAASjF,GACf,OAAO,GAEXmF,SAAU,SAASnF,GACf,OAAO,GAEXoF,QAAS,SAASpF,GACd,OAAO,KA6OXmB,EAAS,WACT,MAAOA,GAqDX,OAlDA7B,GAAM6D,MAAMhC,GACRiC,MAASA,EAGTvD,QAAWA,EAGXqB,GAAMA,EAENV,IAAOA,EAEPqC,IAAOA,EAEPkD,IAAO,WACHhF,EAAKgF,IAAIC,MAAMjF,EAAMkF,YAGzBpB,GAAM,WACF9D,EAAK8D,GAAGmB,MAAMjF,EAAMkF,YAGxBC,IAAO,WACHnF,EAAKmF,IAAIF,MAAMjF,EAAMkF,YAIzB7F,KAAQA,EAERa,SAAYA,EAEZyB,QAAWA,EAEXI,SAAYA,EAEZ5C,MAASA,EAETgD,OAAUA,EAGVG,MAASA,EAETrC,QAAW,SAAStB,GAEhB,MADAqB,GAAKC,QAAQtB,GACNkD,MAGXxB,cAAiB,KACjBU,YAAe,OAGZzC,EAAQ8B,OAASA","file":"../router.js","sourcesContent":["define([\n    \"skylark-langx/skylark\",\n    \"skylark-langx/langx\"\n], function(skylark, langx) {\n\n    var _curCtx,\n        _prevCtx,\n        _baseUrl,\n        _homePath,\n        _routes = {},\n        _cache = {},\n        _hub = new langx.Evented();\n\n    function createEvent(type,props) {\n        var e = new CustomEvent(type,props);\n        return langx.safeMixin(e, props);\n    }\n\n    var Route = langx.Evented.inherit({\n        klassName: \"Route\",\n        init: function(name, setting) {\n            setting = langx.mixin({}, setting);\n            var pathto = setting.pathto || \"\",\n                pattern = pathto,\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\n            if (paramNames !== null) {\n                paramNames = paramNames.map(function(paramName) {\n                    return paramName.substring(1);\n                });\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\n            } else {\n                paramNames = [];\n            }\n            if (pattern === \"*\") {\n                pattern = \"(.*)\";\n            } else {\n                pattern = pattern.replace(\"/\", \"\\\\/\");\n            }\n\n            this._setting = setting;\n            this.name = name;\n            this.pathto = pathto;\n            this.paramNames = paramNames;\n            this.params = pattern;\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\n\n            var self = this;\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\n                if (langx.isFunction(setting[eventName])) {\n                    self.on(eventName, setting[eventName]);\n                }\n            });\n        },\n\n        enter: function(ctx,query) {\n            if (query) {\n                var r = this._entering(ctx),\n                    self = this;\n\n                return langx.Deferred.when(r).then(function(){\n                    var e = createEvent(\"entering\", {\n                        route: self,\n                        result: true\n                    });\n\n                    self.trigger(e);\n\n                    return e.result;\n                });\n            } else {\n                this._entered(ctx);\n\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\n                    route: this\n                }, ctx)));\n                return this;\n            }\n        },\n\n        exit: function(ctx, query) {\n            if (query) {\n                var ok = this._exiting(ctx);\n                if (!ok) {\n                    return false;\n                }\n\n                var e = createEvent(\"exiting\", {\n                    route: this,\n                    result: true\n                });\n\n                this.trigger(e);\n\n                return e.result;\n            } else {\n                this._exited(ctx);\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\n                    route: this\n                }, ctx)));\n\n                return this;\n            }\n        },\n\n        match: function(path) {\n            var names = this.paramNames,\n                x = path.indexOf('?'),\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\n                m = this.regex.exec(path);\n\n            if (!m) {\n                return false\n            };\n\n            var params = {};\n            for (var i = 1, len = m.length; i < len; ++i) {\n                var name = names[i - 1],\n                    val = decodeURIComponent(m[i]);\n                params[name] = val;\n            }\n\n            return params;\n        },\n\n        path: function(params) {\n            var path = this.pathto;\n            if (params) {\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\n                    return params[paramName];\n                });\n            }\n            return path;\n        },\n\n        _entering: function(ctx) {\n            return true;\n        },\n        _entered: function(ctx) {\n            return true;\n        },\n        _exiting: function(ctx) {\n            return true;\n        },\n        _exited: function(ctx) {\n            return true;\n        },\n    });\n\n    function current() {\n        return _curCtx;\n    }\n\n    // refresh the current route\n    function dispatch(ctx) {\n\n        if (_curCtx) {\n            var ret = _curCtx.route.exit({\n                path: _curCtx.path,\n                params: _curCtx.params\n            }, true);\n            if (!ret) {\n                return;\n            }\n        }\n\n        _prevCtx = _curCtx;\n        _curCtx = ctx;\n        if (!_curCtx.route) {\n            var m = map(_curCtx.path);\n            _curCtx.route = m.route;\n            _curCtx.params = m.params;\n        }\n\n        var r = _curCtx.route.enter({\n            force: _curCtx.force,\n            path: _curCtx.path,\n            params: _curCtx.params\n        },true);\n\n        langx.Deferred.when(r).then(function() {\n            _hub.trigger(createEvent(\"routing\", {\n                current: _curCtx,\n                previous: _prevCtx\n            }));\n\n            _curCtx.route.enter({\n                path: _curCtx.path,\n                params: _curCtx.params\n            },false);\n\n            if (_prevCtx) {\n                _prevCtx.route.exit({\n                    path: _prevCtx.path,\n                    params: _prevCtx.params\n                }, false);\n            }\n\n            _hub.trigger(createEvent(\"routed\", {\n                current: _curCtx,\n                previous: _prevCtx\n            }));\n        });\n    }\n\n    function go(path, force) {\n        if (!force && _curCtx && _curCtx.path == path) {\n            return false;\n        }\n        var ctx = map(path);\n        if (ctx) {\n            ctx.path = path;\n\n            if (router.useHistoryApi) {\n                var state = {\n                    force: force,\n                    path: path\n                }\n\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\n                window.dispatchEvent(createEvent(\"popstate\", {\n                    state: state\n                }));\n            } else if (router.useHashbang) {\n                var newHash = \"#!\" + path;\n                if (window.location.hash !== newHash) {\n                    window.location.hash = newHash;\n                } else {\n                    dispatch(ctx);\n                };\n            } else {\n                dispatch(ctx);\n            }\n        }\n        return true;\n    }\n\n    function map(path, noCache) {\n        var finded = false;\n        if (!noCache) {\n            finded = _cache[path];\n            if (finded) {\n                return finded;\n            }\n        }\n        langx.each(_routes, function(name, route) {\n            var ret = route.match(path);\n            if (ret) {\n                finded = {\n                    route: route,\n                    params: ret\n                }\n                return false;\n            }\n            return true;\n        });\n        if (finded && !noCache) {\n            _cache[path] = finded;\n        }\n        return finded;\n    }\n\n    function path(routeName, params) {\n        var route = _routes[routeName],\n            path;\n        if (route) {\n            path = route.path(params);\n        }\n        return path;\n    }\n\n    function previous() {\n        return _prevCtx;\n    }\n\n    function baseUrl(path) {\n        if (langx.isDefined(path)) {\n            _baseUrl = path;\n            return this;\n        } else {\n            return _baseUrl;\n        }\n    }\n\n    function hub(){\n        return _hub;\n    }\n\n    function homePath(path) {\n        if (langx.isDefined(path)) {\n            _homePath = path;\n            return this;\n        } else {\n            return _homePath;\n        }\n    }\n\n    function route(name, setting) {\n        if (langx.isDefined(setting)) {\n            var settings = {};\n            settings[name] = setting;\n            routes(settings);\n            return this;\n        } else {\n            return _routes[name];\n        }\n    }\n\n    function routes(settings) {\n        if (!langx.isDefined(settings)) {\n            return langx.mixin({}, _routes);\n        } else {\n            for (var name in settings) {\n                _routes[name] = new router.Route(name, settings[name]);\n            }\n        }\n    }\n\n    //starts routing urls\n    function start() {\n        if (router.useHashbang == null && router.useHistoryApi == null) {\n            if (window.location.host  && window.history.pushState) {\n                //web access\n                router.useHistoryApi = true;\n            } else {\n                // local access\n                router.useHashbang = true;\n            }\n        }\n\n        var initPath = \"\";\n\n        if (router.useHistoryApi) {\n            initPath = window.location.pathname;\n            if (_baseUrl === undefined) {\n                _baseUrl = initPath.replace(/\\/$/, \"\");\n            }\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\n        } else if (router.useHashbang) {\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\n        } else {\n            initPath = \"/\";\n        }\n\n        if (!initPath.startsWith(\"/\")) {\n            initPath = \"/\" + initPath;\n        }\n        /*\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\n            var elm = e.currentTarget,\n                url = elm.getAttribute(\"href\");\n\n            if (url == \"#\") {\n                return;\n            }\n            if (url && langx.isSameOrigin(elm.href)) {\n                if (url.indexOf(_baseUrl) === 0) {\n                    url = url.substr(_baseUrl.length);\n                    eventer.stop(e);\n                    url = url.replace('#!', '');\n                    go(url);\n                }\n            }\n        });\n        */\n        if (router.useHistoryApi) {\n            window.addEventListener(\"popstate\", function(e) {\n                if(e.state) dispatch(e.state);\n                e.preventDefault();\n            });\n        } else if (router.useHashbang) {\n            window.addEventListener(\"hashchange\", function(e) {\n                dispatch({\n                    path: window.location.hash.replace(/^#!/, \"\")\n                });\n                e.preventDefault();\n            });\n        }\n\n        go(initPath);\n    }\n\n    var router = function() {\n        return router;\n    };\n\n    langx.mixin(router, {\n        \"Route\": Route,\n\n        // Current path being processed\n        \"current\": current,\n\n        // Changes the current path\n        \"go\": go,\n\n        \"map\": map,\n\n        \"hub\": hub,\n\n        \"off\": function() {\n            _hub.off.apply(_hub, arguments);\n        },\n\n        \"on\": function() {\n            _hub.on.apply(_hub, arguments);\n        },\n\n        \"one\": function() {\n            _hub.one.apply(_hub, arguments);\n        },\n\n        // Returns the path of the named route\n        \"path\": path,\n\n        \"previous\": previous,\n\n        \"baseUrl\": baseUrl,\n\n        \"homePath\": homePath,\n\n        \"route\": route,\n\n        \"routes\": routes,\n\n        //starts routing urls\n        \"start\": start,\n\n        \"trigger\": function(e) {\n            _hub.trigger(e);\n            return this;\n        },\n\n        \"useHistoryApi\": null,\n        \"useHashbang\": null\n    });\n\n    return skylark.router = router;\n});\n"]}