{"version":3,"sources":["_storages/localfs.js"],"names":["define","langx","errorHandler","e","msg","code","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","Deferred","requestFileSystem","window","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","Evented","inherit","_fs","_isPersisted","_cwd","init","fs","this","root","readfileAsArrayBuffer","path","callback","errback","getFile","fileEntry","file","reader","FileReader","onloadend","result","readAsArrayBuffer","readfileAsDataURL","readAsDataURL","readfileAsText","readAsText","writefile","contents","self","folders","split","slice","length","mkdir","join","create","createWriter","fileWriter","truncated","onwriteend","truncate","position","onerror","blob","Blob","type","write","rmfile","remove","readdir","getDirectory","dirEntry","readEntries","dirReader","results","entries","concat","Array","prototype","call","map","entry","name","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","Error","rmdir","removeRecursively","copy","src","dest","cwd","copyTo","move","moveTo","chdir","onchdir","fullPath","importFromHost","files","deferred","i","f","promise","exportToHost","mixin","isSupported","request","size","isPersisted","typ","PERSISTENT","TEMPORARY","d","resolve","reject"],"mappings":";;;;;;;AAQAA,QACI,YACD,SAASC,GAOX,QAASC,GAAaC,GACpB,GAAIC,GAAM,EAEV,QAAQD,EAAEE,MACR,IAAKC,WAAUC,mBACbH,EAAM,oBACN,MACF,KAAKE,WAAUE,cACbJ,EAAM,eACN,MACF,KAAKE,WAAUG,aACbL,EAAM,cACN,MACF,KAAKE,WAAUI,yBACbN,EAAM,0BACN,MACF,KAAKE,WAAUK,kBACbP,EAAM,mBACN,MACF,SACEA,EAAM,gBAIV,MAAOA,GA+NN,QAASQ,KACL,MAAOA,GA9Pd,GAAIC,GAAWZ,EAAMY,SACpBC,EAAqBC,OAAOD,mBAAqBC,OAAOC,wBAgCrDC,GA/ByBF,OAAOG,2BAA6BH,OAAOI,gCACrDJ,OAAOK,gBAAkBL,OAAOM,mBAAqBN,OAAOO,YA8B9DrB,EAAMsB,QAAQC,SAC9BC,IAAM,KACNC,cAAe,EACfC,KAAO,KAEPC,KAAM,SAAUC,GACfC,KAAKL,IAAMI,EACXC,KAAKH,KAAOE,EAAGE,MAIhBC,sBAAyB,SAAUC,EAAKC,EAASC,GAC7CL,KAAKH,KAAKS,QAAQH,KAAU,SAAUI,GACpCA,EAAUC,KAAK,SAAUA,GACvB,GAAIC,GAAS,GAAIC,WACjBD,GAAOE,UAAY,WACjBP,EAAS,KAAMJ,KAAKY,SAEtBH,EAAOI,kBAAkBL,IACxBH,IACFA,IAGPS,kBAAqB,SAAUX,EAAKC,EAASC,GACzCL,KAAKH,KAAKS,QAAQH,KAAU,SAAUI,GACpCA,EAAUC,KAAK,SAAUA,GACvB,GAAIC,GAAS,GAAIC,WACjBD,GAAOE,UAAY,WACjBP,EAAS,KAAMJ,KAAKY,SAEtBH,EAAOM,cAAcP,IACpBH,IACFA,IAGPW,eAAkB,SAAUb,EAAKC,EAASC,GACtCL,KAAKH,KAAKS,QAAQH,KAAU,SAAUI,GACpCA,EAAUC,KAAK,SAAUA,GACvB,GAAIC,GAAS,GAAIC,WACjBD,GAAOE,UAAY,WACjBP,EAAS,KAAMJ,KAAKY,SAEtBH,EAAOQ,WAAWT,IACjBH,IACFA,IAGPa,UAAY,SAAUf,EAAMgB,EAAUf,EAASC,GAC3C,GAAIe,GAAOpB,KACVqB,EAAUlB,EAAKmB,MAAM,IACtBD,GAAUA,EAAQE,MAAM,EAAGF,EAAQG,OAAS,GAE5CxB,KAAKyB,MAAMJ,EAAQK,KAAK,KAAK,WAC5BN,EAAKvB,KAAKS,QAAQH,GAAOwB,QAAQ,GAAO,SAAUpB,GAChDA,EAAUqB,aAAa,SAAUC,GAC/B,GAAIC,IAAY,CAChBD,GAAWE,WAAa,WACtB,MAAKD,QAKL1B,GAAYA,MAJV0B,GAAY,MACZ9B,MAAKgC,SAAShC,KAAKiC,YAKvBJ,EAAWK,QAAU7B,CAErB,IAAI8B,GAAOhB,GACNgB,YAAgBC,QACpBD,EAAO,GAAIC,OAAMjB,IAAYkB,KAAM,gBAEpCR,EAAWS,MAAMH,IAChB9B,IACFA,MAKRkC,OAAS,SAAUpC,EAAMC,EAASC,GAC9BL,KAAKH,KAAKS,QAAQH,KAAU,SAAUI,GACpCA,EAAUiC,OAAO,WACfpC,KACCC,IACFA,IAGPoC,QAAU,SAAUtC,EAAMC,EAASC,GAC/BL,KAAKH,KAAK6C,aAAavC,KAAU,SAAUwC,GAIzC,QAASC,KACPC,EAAUD,YAAY,SAAUE,GACzBA,EAAQtB,QAIXuB,EAAUA,EAAQC,OACjBC,MAAMC,UAAU3B,MAAM4B,KAAKL,GAASM,IACnC,SAAUC,GACP,MAAOA,GAAMC,MAAQD,EAAME,YAAc,IAAM,OAIpDX,KAVAxC,EAAS,KAAM2C,IAYhB1C,GAlBL,GAAIwC,GAAYF,EAASa,eACrBT,IACJH,MAkBCvC,IAGPoB,MAAQ,SAAUtB,EAAMC,EAASC,GAC7B,GAAIoD,GAActD,EAAKmB,MAAM,KAEzBoC,EAAY,SAASC,EAAStC,GAMhC,MAJkB,KAAdA,EAAQ,IAA2B,IAAdA,EAAQ,KAC/BA,EAAUA,EAAQE,MAAM,IAGL,GAAjBF,EAAQG,WACXpB,GAASuD,OAGVA,GAAQjB,aAAarB,EAAQ,IAAKM,QAAQ,EAAMiC,WAAW,GACzD,SAAUjB,GACR,GAAIA,EAASY,YAGPlC,EAAQG,QAAgC,GAAtBiC,EAAYjC,OAChCkC,EAAUf,EAAUtB,EAAQE,MAAM,IAG9BnB,GAAUA,EAASuC,OAEpB,CACL,GAAItE,GAAI,GAAIwF,OAAM1D,EAAO,sBACzB,KAAIE,EAGF,KAAMhC,EAFNgC,GAAQhC,KAMd,SAASA,GACL,IAAIgC,EAGF,KAAMhC,EAFNgC,GAAQhC,KAQlBqF,GAAU1D,KAAKH,KAAM4D,IAIzBK,MAAQ,SAAU3D,EAAMC,EAASC,GAC7BL,KAAKH,KAAK6C,aAAavC,KAAU,SAAUwC,GACzCA,EAASoB,kBAAkB,WACzB3D,KACCC,IACFA,IAGP2D,KAAO,SAAUC,EAAKC,EAAM9D,GAExBJ,KAAKH,KAAKS,QAAQ2D,KAAS,SAAS1D,GAClC4D,IAAIzB,aAAawB,KAAU,SAASvB,GAClCpC,EAAU6D,OAAOzB,EAAU,WACzBvC,KACCA,IACFA,IACFA,IAGPiE,KAAO,SAASJ,EAAKC,EAAM9D,GAEvBJ,KAAKH,KAAKS,QAAQ2D,KAAS,SAAS1D,GAClC4D,IAAIzB,aAAawB,KAAU,SAASvB,GAClCpC,EAAU+D,OAAO3B,EAAU,WACzBvC,KACCA,IACFA,IACFA,IAGPmE,MAAQ,SAAUpE,EAAMC,GACpBJ,KAAKH,KAAK6C,aAAavC,KAAU,SAAUwC,GACzCwB,IAAMxB,EACF5C,GAAGyE,SACLzE,GAAGyE,QAAQL,IAAIM,UAEjBrE,KACCA,IAGPsE,eAAiB,SAASC,GAGtB,IAAK,GAAWnE,GADZoE,EAAW,GAAI7F,GACV8F,EAAI,EAASrE,EAAOmE,EAAME,KAAMA,GACrC,SAAUC,GACTX,IAAI7D,QAAQE,EAAK8C,MAAO3B,QAAQ,EAAMiC,WAAW,GAAO,SAASrD,GAC/DA,EAAUqB,aAAa,SAASC,GAC9BA,EAAWS,MAAMwC,IAChB1G,IACFA,IACHoC,EAEH,OAAOoE,GAASG,SAGpBC,aAAe,eAiClB,OArBG7G,GAAM8G,MAAMnG,GACRoG,YAAc,WACV,QAASlG,GAEbmG,QAAU,SAASC,EAAKC,GACvBD,EAAOA,GAAQ,QACf,IAAIE,GAAMD,EAAcE,WAAaC,UACpCC,EAAI,GAAI1G,EAQN,OAPAC,GAAkBsG,EAAKF,EAAM,SAASzF,GAClC,GAAII,GAAK,GAAIZ,GAAWQ,KAAM0F,GAC9BI,GAAEC,QAAQ3F,IACX,SAAS1B,GACXoH,EAAEE,OAAOtH,KAGHoH,EAAEV,SAGb5F,WAAaA,IAGbL","file":"../../_storages/localfs.js","sourcesContent":["/**\n *\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\n * http://www.psteam.co.jp/qface/license\n * \n * @Author: liwenfeng\n * @Date: 2014/02/28\n */\ndefine([\n    \"../langx\"\n], function(langx){\n\tvar Deferred = langx.Deferred,\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\n\n\n\tfunction errorHandler(e) {\n\t  var msg = '';\n\n\t  switch (e.code) {\n\t    case FileError.QUOTA_EXCEEDED_ERR:\n\t      msg = 'QUOTA_EXCEEDED_ERR';\n\t      break;\n\t    case FileError.NOT_FOUND_ERR:\n\t      msg = 'NOT_FOUND_ERR';\n\t      break;\n\t    case FileError.SECURITY_ERR:\n\t      msg = 'SECURITY_ERR';\n\t      break;\n\t    case FileError.INVALID_MODIFICATION_ERR:\n\t      msg = 'INVALID_MODIFICATION_ERR';\n\t      break;\n\t    case FileError.INVALID_STATE_ERR:\n\t      msg = 'INVALID_STATE_ERR';\n\t      break;\n\t    default:\n\t      msg = 'Unknown Error';\n\t      break;\n\t  };\n\n\t  return msg;\n\t}\n\t\n\tvar FileSystem = langx.Evented.inherit({\n\t\t_fs : null,\n\t\t_isPersisted : true,\n\t\t_cwd : null,\n\n\t\tinit:\tfunction (fs) {\n\t\t\tthis._fs = fs;\n\t\t\tthis._cwd = fs.root;\n\t\t},\n\t\t\t\n\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\n\t\t      fileEntry.file(function (file) {\n\t\t        var reader = new FileReader();\n\t\t        reader.onloadend = function () {\n\t\t          callback(null, this.result);\n\t\t        };\n\t\t        reader.readAsArrayBuffer(file);\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t},\n\n\t\treadfileAsDataURL :  function (path,callback,errback) {\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\n\t\t      fileEntry.file(function (file) {\n\t\t        var reader = new FileReader();\n\t\t        reader.onloadend = function () {\n\t\t          callback(null, this.result);\n\t\t        };\n\t\t        reader.readAsDataURL(file);\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t},\n\n\t\treadfileAsText :  function (path,callback,errback) {\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\n\t\t      fileEntry.file(function (file) {\n\t\t        var reader = new FileReader();\n\t\t        reader.onloadend = function () {\n\t\t          callback(null, this.result);\n\t\t        };\n\t\t        reader.readAsText(file);\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t},\n\n\t\twritefile : function (path, contents, callback,errback) {\n\t\t    var self = this,\n\t\t    \tfolders = path.split('/');\n\t\t    folders = folders.slice(0, folders.length - 1);\n\n\t\t    this.mkdir(folders.join('/'),function(){\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\n\t\t\t        var truncated = false;\n\t\t\t        fileWriter.onwriteend = function () {\n\t\t\t          if (!truncated) {\n\t\t\t            truncated = true;\n\t\t\t            this.truncate(this.position);\n\t\t\t            return;\n\t\t\t          }\n\t\t\t          callback && callback();\n\t\t\t        };\n\t\t\t        fileWriter.onerror = errback;\n\t\t\t        // TODO: find a way to write as binary too\n\t\t\t        var blob = contents;\n\t\t\t        if (!blob instanceof Blob) {\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\n\t\t\t        } \n\t\t\t        fileWriter.write(blob);\n\t\t\t      }, errback);\n\t\t\t    }, errback);\n\n\t\t    });\n\t\t},\n\n\t\trmfile : function (path, callback,errback) {\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\n\t\t      fileEntry.remove(function () {\n\t\t        callback();\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t},\n\n\t\treaddir : function (path, callback,errback) {\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\n\t\t      var dirReader = dirEntry.createReader();\n\t\t      var entries = [];\n\t\t      readEntries();\n\t\t      function readEntries() {\n\t\t        dirReader.readEntries(function (results) {\n\t\t          if (!results.length) {\n\t\t            callback(null, entries);\n\t\t          }\n\t\t          else {\n\t\t            entries = entries.concat(\n\t\t            \tArray.prototype.slice.call(results).map(\n\t\t            \t\tfunction (entry) {\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\n\t\t            \t\t}\n\t\t            \t)\n\t\t            );\n\t\t            readEntries();\n\t\t          }\n\t\t        }, errback);\n\t\t      }\n\t\t    }, errback);\n\t\t},\n\n\t\tmkdir : function (path, callback,errback) {\n\t\t    var folderParts = path.split('/');\n\n\t\t    var createDir = function(rootDir, folders) {\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\n\t\t      if (folders[0] == '.' || folders[0] == '') {\n\t\t        folders = folders.slice(1);\n\t\t      }\n\n\t\t      if (folders.length ==0) {\n\t\t      \tcallback(rootDir);\n\t\t      \treturn;\n\t\t      }\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\n\t\t        function (dirEntry) {\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\n\t\t            // Recursively add the new subfolder if we have more to create and\n\t\t            // There was more than one folder to create.\n\t\t            if (folders.length && folderParts.length != 1) {\n\t\t              createDir(dirEntry, folders.slice(1));\n\t\t            } else {\n\t\t              // Return the last directory that was created.\n\t\t              if (callback) callback(dirEntry);\n\t\t            }\n\t\t          } else {\n\t\t            var e = new Error(path + ' is not a directory');\n\t\t            if (errback) {\n\t\t              errback(e);\n\t\t            } else {\n\t\t              throw e;\n\t\t            }\n\t\t          }\n\t\t        },\n\t\t        function(e) {\n\t\t            if (errback) {\n\t\t              errback(e);\n\t\t            } else {\n\t\t              throw e;\n\t\t            }\n\t\t        }\n\t\t      );\n\t\t    };\n\n\t\t    createDir(this._cwd, folderParts);\n\n\t\t},\n\n\t\trmdir : function (path, callback,errback) {\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\n\t\t      dirEntry.removeRecursively(function () {\n\t\t        callback();\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t  },\n\n\t\tcopy : function (src, dest, callback) {\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\n\t\t        fileEntry.copyTo(dirEntry, function () {\n\t\t          callback();\n\t\t        }, callback);\n\t\t      }, callback);\n\t\t    }, callback);\n\t\t},\n\n\t\tmove : function(src, dest, callback) {\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\n\t\t        fileEntry.moveTo(dirEntry, function () {\n\t\t          callback();\n\t\t        }, callback);\n\t\t      }, callback);\n\t\t    }, callback);\n\t\t},\n\n\t\tchdir : function (path, callback) {\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\n\t\t      cwd = dirEntry;\n\t\t      if (fs.onchdir) {\n\t\t        fs.onchdir(cwd.fullPath);\n\t\t      }\n\t\t      callback();\n\t\t    }, callback);\n\t\t},\n\n\t\timportFromHost : function(files) {\n\t\t    // Duplicate each file the user selected to the app's fs.\n\t\t    var deferred = new Deferred();\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\n\t\t        (function(f) {\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\n\t\t\t          }, errorHandler);\n\t\t\t        }, errorHandler);\n\t\t     \t})(file);\n \t   \t \t}\n  \t\t    return deferred.promise;\n\t\t  },\n\n\t\t  exportToHost : function() {\n\n\t\t  }\n\t\n\t});\n\t\n\n\n    function localfs() {\n        return localfs;\n    }\n\n    langx.mixin(localfs, {\n        isSupported : function() {\n            return !!requestFileSystem;\n        },\n        request : function(size,isPersisted){\n        \tsize = size || 1024 * 1024 * 10;\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\n        \t\td = new Deferred();\n            requestFileSystem(typ, size, function(_fs) {\n                var fs = new FileSystem(_fs,!!isPersisted);\n                d.resolve(fs);\n            }, function(e) {\n            \td.reject(e);\n            });\n\n            return d.promise;\n        },\n\n        FileSystem : FileSystem\n    });\n    \n\treturn localfs;\n});"]}