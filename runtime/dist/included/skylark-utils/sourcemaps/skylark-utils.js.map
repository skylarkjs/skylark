{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","property","arguments","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","after","placing","refNode","parent","nextSibling","insertBefore","append","before","contents","contentDocument","childNodes","tag","setAttribute","createFragment","html","singleTagRE","test","$1","fragmentRE","containers","container","innerHTML","dom","slice","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","doc","empty","hasChildNodes","firstChild","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","isWindow","construct","_createStyleSheet","link","count","rel","type","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","selector","index","addRule","createStyleSheet","loadStyleSheet","url","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","href","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","filter","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","matches","ancestors","ret","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","button","checked","idx","disabled","enabled","eq","even","focus","activeElement","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","space","tab","up","create","keys","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","handleElm","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","_params","eventName","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","dropzone","droppedCallback","enterdCount","types","items","webkitGetAsEntry","getAsEntry","webentry","then","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","headers","contentRange","FormData","blob","uploadName","encodeURI","contentType","getUploadedBytes","jqXHR","range","getResponseHeader","upperBytesPos","BitrateTimer","timestamp","now","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","context","currentLoaded","_progress","chunkSize","ajax","done","textStatus","progress","lengthComputable","total","resolveWith","fail","errorThrown","rejectWith","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","toString","form","serializeArray","fileupload","process","processData","Blob","webkitSlice","mozSlice","Xhr","request","_bitrateTimer","jqXhr","entry","path","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","el","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","makeArray","unshift","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","func","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","charAt","exec","wrapper_node_operation","argType","arg","object","get","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","inst","ImagesLoaded","images","viewer","img","_init","Image","border","padding","_load","_dispose","failered","dispose","elementNodeTypes","1","9","11","onAlways","elements","getImages","bind","addElementImages","addImage","background","addElementBackgroundImages","childImgs","reURL","backgroundImage","addBackground","loadingImage","LoadingImage","PreloadImage","onProgress","_this","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","handleEvent","method","unbindEvents","imagesLoaded","models","methodMap","patch","read","sync","entity","defaults","emulateHTTP","emulateJSON","dataType","urlError","attrs","toJSON","_method","beforeSend","xhr","setRequestHeader","Entity","Stateful","isMatch","fetch","success","resp","serverAttrs","set","wrapError","save","validate","wait","_validate","isNew","destroy","stopListening","collection","idAttribute","encodeURIComponent","Collection","entities","comparator","_reset","silent","setOptions","addOptions","array","at","min","tail","partial","initialize","singular","removed","_removeEntitys","changes","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","existing","hasChanged","cid","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","constructor","validationError","_onEntityEvent","prevId","previousAttributes","_place","choices","layoutNode","aroundNodeCoords","win","view","String","best","choice","corner","spaceAvailable","w","L","R","M","h","T","B","res","aroundCorner","bb","startXpos","startYpos","startX","startY","endX","endY","corners","c","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","l","b","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","resizable","defaultOptions","touchActionNone","direction","grabber","startSize","currentSize","isHtmlNode","resizer","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","script","deleteJavaScript","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","cookies","sKey","unescape","cookie","list","expires","domain","secure","sExpires","Number","vEnd","Infinity","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","write","rmfile","readdir","getDirectory","dirEntry","results","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","deferred","f","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","widget","defineWidgetClass","delegateEventSplitter","Widget","uniqueId","_ensureElement","$el","render","_removeElement","unlistenTo","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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,GAAA8B,MAAAgP,GACAmqC,MAAA,SAAA/0C,EAAAg1C,EAAAx7C,GAMA,MALAwG,GAAAvG,QAAA,SAAA4C,GACA,GAAAiB,GAAAjB,YAAAy4C,GAAAz4C,EAAAuO,EAAAvO,EACAiB,GAAA03C,GAAAt7C,MAAA4D,EAAA9D,KAGAiE,MAGAwN,KAAA,GAAA6pC,GAAAj6C,SAAAkC,MAEA+3C,cAAAA,EAEA7S,QAAA,SAAAjoC,EAAAuL,GACA,GAAAjH,KAEAA,GAAAtE,GAAAuL,EAEAuvC,EAAA7S,QAAA3jC,IAGA22C,SAAA,SAAAp3C,EAAAwwB,GACA,GAAA/vB,KAEAT,GAAApE,QAAA,SAAAO,GACAsE,EAAAtE,GAAA26C,EAAAtmB,EAAAr0B,GAAAq0B,KAGAymB,EAAA7S,QAAA3jC,MAKAsM,EAAAqqC,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACA3/B,GAGA1K,EAAAqqC,UACA,YACA,aACA7uB,GAIAxb,EAAAqqC,UACA,MACA,KACA,MACA,YACA,WACA71B,GAGAxU,EAAAqqC,UACA,SACA,YACA5jB,GAGAzmB,EAAAqqC,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAthC,GAEA/I,EAAAoB,KAAA,SAAA7D,GACA,MAAA,SAAAA,EACA1K,KAAAwN,KAEAxN,KAAAwN,KAAAa,WAAA3D,IAKAyC,EAAAqqC,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACA7hB,GAIAxoB,EAAAqqC,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACA/5B,GAGAtQ,EAAAqqC,UACA,WACA7uB,GAIAxb,EAAAqqC,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAlvC,GAGA6E,EAAAqqC,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OAC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","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body : function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow : langx.isWindow,\r\n\r\n        offsetParent : offsetParent,\r\n        \r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38        \r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys : keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    var Uploader =  langx.Evented.inherit({\r\n        init :function(options) {\r\n        }\r\n    });\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,geom,styler,datax,transforms,$) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n   /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new PreloadImage( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger(langx.createEvent(eventName,{\r\n        images : this.images\r\n      }));\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n // ----- events ----- //\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- PreloadImage -------------------------- //\r\n  var PreloadImage = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n  function loaded(el,options, callback ) {\r\n      var inst = new ImagesLoaded( el, options, callback );\r\n\r\n      var d = new langx.Deferred();\r\n      \r\n      inst.on(\"progress\",function(e){\r\n        d.progress(e);\r\n      });\r\n\r\n      inst.on(\"done\",function(e){\r\n        d.resolve(e.images);\r\n      });\r\n\r\n      inst.on(\"fail\",function(e){\r\n        d.reject(e);\r\n      });\r\n\r\n      return d.promise;\r\n  }\r\n\r\n  function preload(urls,options) {\r\n\r\n  }\r\n\r\n  $.fn.imagesLoaded = function( options, callback ) {\r\n      return loaded(this,options,callback);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    loaded : loaded,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/resizer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return skylark.resizer = resizer;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/selector',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return skylark.selector = selector;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widget() {\r\n\t    return widget;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(options,el) {\r\n\t    \t//for supporting init(el,options)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (el) {\r\n\t        \tthis.el = el;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widget, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widget = widget;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./resizer\",\r\n    \"./scripter\",\r\n    \"./selector\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widgets\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}