{"version":3,"sources":["skylarkjs-core.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","xhrGet","url","callback","xhr","XMLHttpRequest","onreadystatechange","this","readyState","response","responseText","open","send","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","cb","requireOne","hasOwnProperty","Error","module","args","forEach","apply","window","onedep","modules","config","baseUrl","skylarkjs","skylark","http","res","console","error","cfg","JSON","parse","runtime","initApp","spa","_cfg","contextPath","app","go","path","force","prepare","then","run","spaModule","_start","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","each","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","location","href","segs","params","queryParam","nv","grep","out","has","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","get","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","ArrayStore","klassName-","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","async","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","eval","responseXML","Blob","xhrObj","reponse","statusText","evt","hdr","setRequestHeader","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","router","useHistoryApi","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","noCache","finded","_cache","_routes","routeName","hub","homePath","_homePath","setting","settings","routes","Route","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","content","forceRefresh","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","plugins","_plugins","_config","pluginName","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","main"],"mappings":"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","file":"../skylarkjs-core.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylarkjs/skylark',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get || prop.value !== undefined)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName-\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            document = window.document,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && url.startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.6-beta\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylarkjs/router',[\r\n    \"skylark-router/router\"\r\n], function(router) {\r\n    return router;\r\n});\r\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        baseUrl : function() {\r\n            return router.baseUrl();\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylarkjs/spa',[\r\n    \"skylark-spa/spa\"\r\n], function(spa) {\r\n    return spa;\r\n});\r\n\ndefine('skylarkjs/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylarkjs/core',[\r\n    \"./skylark\",\r\n    \"./router\",\r\n    \"./spa\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylarkjs', ['skylarkjs/core'], function (main) { return main; });\n\n"]}