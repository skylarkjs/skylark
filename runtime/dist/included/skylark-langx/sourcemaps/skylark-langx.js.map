{"version":3,"sources":["skylark-langx.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","skylark","skylarkjs","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","window","location","href","segs","params","queryParam","nv","has","path","inArray","indexOf","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","prototype","isDefined","Node","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","deepEq","PGLISTENERS","Symbol","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","createClass","extendClass","ctor","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","parent","init","klassName","Function","create","__proto__","partial","inherit","delegate","TMP","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","then","onResolved","onRejected","onProgress","progress","done","handler","fail","bind","listener","error","reason","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","get","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","main"],"mappings":";;;;;;;CAAA,SAAUA,EAAQC,GAQd,QAASC,GAASC,EAAUC,GACxB,GAAkB,MAAdD,EAAS,GACX,MAAOA,EAET,IAAIE,GAAQD,EAAKE,MAAM,KACnBC,EAAQJ,EAASG,MAAM,IAC3BD,GAAMG,KACN,KAAK,GAAIC,GAAE,EAAGA,EAAEF,EAAMG,OAAQD,IACV,KAAZF,EAAME,KAEM,MAAZF,EAAME,GACNJ,EAAMG,MAENH,EAAMM,KAAKJ,EAAME,IAEzB,OAAOJ,GAAMO,KAAK,KAtBxB,GAAIC,GAASZ,EAAQY,OACjBC,EAAUb,EAAQa,QAClBC,EAA2B,kBAAXF,IAAyBA,EAAOG,IAChDC,GAAUF,GAA4B,mBAAZG,QAE9B,KAAKH,IAAUF,EAAQ,CACrB,GAAIM,KAkBJN,GAASZ,EAAQY,OAAS,SAASO,EAAIC,EAAMrB,GACnB,kBAAXA,IACPmB,EAAIC,IACApB,QAASA,EACTqB,KAAMA,EAAKF,IAAI,SAASG,GACtB,MAAOpB,GAASoB,EAAIF,KAEtBF,QAAS,MAEbJ,EAAQM,IAERG,SAASH,GAAMpB,GAGvBc,EAAUb,EAAQa,QAAU,SAASM,GACjC,IAAKD,EAAIK,eAAeJ,GACpB,KAAM,IAAIK,OAAM,UAAYL,EAAK,wBAErC,IAAIM,GAASP,EAAIC,EACjB,KAAKM,EAAOR,QAAS,CACjB,GAAIS,KAEJD,GAAOL,KAAKO,QAAQ,SAASN,GACzBK,EAAKhB,KAAKG,EAAQQ,MAGtBI,EAAOR,QAAUQ,EAAO1B,QAAQ6B,MAAM5B,EAAS0B,GAEnD,MAAOD,GAAOR,SAMpB,GAFAlB,EAAQa,EAAOC,GAEXC,EACFF,GACE,sBACA,SAASiB,GACT,MAAOA,SAEJ,CACL,GAAIC,GAAYjB,EAAQ,qBAElBG,GACHS,OAAOR,QAAUa,EAEjB9B,EAAQ8B,UAAYA,IAIxB,SAASlB,EAAOC,GA3EnBD,EAAA,2BAAA,WACA,GAAAiB,KAGA,OAAAA,KAGAjB,EAAA,uBAAA,aAAA,SAAAiB,GAYA,QAAAE,GAAAC,EAAAC,GACA,MAAA,UAAAC,GACA,GAAAzB,GAAA0B,UAAA1B,MAEA,IADAwB,IAAAC,EAAAE,OAAAF,IACAzB,EAAA,GAAA,MAAAyB,EAAA,MAAAA,EACA,KAAA,GAAAG,GAAA,EAAAA,EAAA5B,EAAA4B,IAIA,IAAA,GAHAC,GAAAH,UAAAE,GACAE,EAAAP,EAAAM,GACAE,EAAAD,EAAA9B,OACAD,EAAA,EAAAA,EAAAgC,EAAAhC,IAAA,CACA,GAAAiC,GAAAF,EAAA/B,EACAyB,IAAA,SAAAC,EAAAO,KAAAP,EAAAO,GAAAH,EAAAG,IAGA,MAAAP,IAgHA,QAAAQ,GAAAC,EAAAC,EAAAC,EAAAC,GACA,GAEAC,GAFAC,EAAAL,EAAAC,GACAK,EAAA,UAAAL,CAEA,IAAAK,EAAA,CACA,GAAAC,GAAAL,EAAA,WACA,MAAAG,GAAAH,OAAAM,KAAAhB,YAEAY,IACAK,OAAA,WACAF,IACAA,EAAAP,EAAAE,EAAA,OAGAA,OAAA,SAAAQ,EAAA3B,GACA,MAAAwB,GACAA,EAAAtB,MAAAyB,EAAA3B,GACAsB,EAAAH,OAAAQ,EAAA3B,SAKAqB,IACAK,OAAA,WACA,GAAAL,EAAAF,OAAA,CACA,GAAAG,GAAAD,EAAAC,SACAM,EAAAP,EAAAO,IACAA,IAAAN,GAGAA,EACAA,EAAAM,KAAAA,EAEAX,EAAAC,GAAAU,EAEAA,IACAA,EAAAN,SAAAA,UARAL,GAAAC,GAaAD,EAAAE,EAAAE,EAAAF,OAAA,OAGA1B,GAAAoC,KACAV,OAAAA,EACAC,iBAAAA,EAGA,IAAAE,IAAAC,EACA,GAAA,SAAAL,EAAA,CAGA,KAAAI,EAAAM,OAAAN,EAAAA,EAAAM,QACAN,EAAAM,KAAAP,EACAA,EAAAC,SAAAA,MACA,UAAAJ,IAEAD,EAAAC,GAAAG,EACAA,EAAAO,KAAAN,EACAA,EAAAA,SAAAD,OAIAJ,GAAAC,GAAAG,CAEA,OAAAA,GAEA,QAAAS,GAAAZ,GACA,MAAA,UAAAS,EAAAI,EAAAZ,EAAAC,GACA,GAAAH,GAAAe,EAAAL,EAAAI,EACAC,IAAAA,EAAAL,QAAAA,IAEAA,EAAAI,GAAAd,EAAA,WAKA,IAJA,GAAAgB,GAAAJ,GAEA7B,EAAAS,UACAyB,EAAAjB,EAAAiB,OACAA,GACAlC,EAAAkC,EAAAf,OAAAjB,MAAAuB,KAAAzB,IAAAA,EACAkC,EAAAA,EAAAN,IAGA,IAAAX,EAAAM,OACA,GAAAY,GAAAlB,EAAAM,OAAAJ,OAAAM,KAAAzB,EAIA,KADA,GAAAoC,GAAAnB,EAAAmB,MACAA,GAAAA,EAAA3C,GAAAwC,GAAA,CACA,GAAAG,EAAAhB,iBAAA,CACA,GAAAiB,GAAAD,EAAAjB,OAAAjB,MAAAuB,KAAAzB,EAEAmC,GAAAE,IAAAC,GAAAH,EAAAE,MAEAF,GAAAC,EAAAjB,OAAAoB,KAAAd,KAAAU,EAAAnC,EAEAoC,GAAAA,EAAAR,KAEA,MAAAO,IAEAH,IACAf,EAAAM,QAAAJ,OAAA,SAAAQ,EAAA3B,GACA,MAAAgC,GAAA9B,MAAAyB,EAAA3B,MAGAiB,EAAAU,OAAAA,EAEA,IAAAQ,GAAAnB,EAAAC,GAAAe,EAAAd,EAAAC,EAAAC,EAEA,OADAD,GAAA,KACAgB,GA+FA,QAAAK,GAAAhC,GACA,IAAAiC,EAAAjC,GAAA,QACA,IAAAK,KACA,KAAA,GAAAE,KAAAP,GAAAK,EAAA7B,KAAA+B,EACA,OAAAF,GAGA,QAAA6B,GAAAxB,EAAAyB,GACA,GAAAC,GAAA,GAAAC,aAAA3B,EAAAyB,EACA,OAAAG,GAAAF,EAAAD,GAGA,QAAAI,GAAAC,EAAAC,GACA,GAAAC,GACAlD,EACAmD,EAAA,WACAH,EAAA9C,MAAA,KAAAF,GAGA,OAAA,YACAA,EAAAS,UACA2C,aAAAF,GACAA,EAAAG,WAAAF,EAAAF,IAoBA,QAAAK,GAAA9C,GAIA,IAAA,GAHAK,GAAA0C,EAAA1C,KAAAL,GACAzB,EAAA8B,EAAA9B,OACAuE,EAAAE,MAAAzE,GACAD,EAAA,EAAAA,EAAAC,EAAAD,IACAwE,EAAAxE,GAAA0B,EAAAK,EAAA/B,GAEA,OAAAwE,GAGA,QAAAG,GAAAC,EAAAC,GACA,GAAAC,EACA,IAAAF,IAAApB,IAAA,OAAAoB,EACAE,EAAAF,MACA,IAAAC,GAAAD,EAAAD,MACAG,EAAAF,EAAAD,YACA,IAAAI,EAAAH,GAAA,CACAE,IACA,KAAA,GAAA9E,GAAA,EAAAA,EAAA4E,EAAA3E,OAAAD,IACA8E,EAAA5E,KAAAyE,EAAAC,EAAA5E,SAEA,IAAAgF,EAAAJ,GAAA,CACAE,IACA,KAAA,GAAA7C,KAAA2C,GACAE,EAAA7C,GAAA0C,EAAAC,EAAA3C,QAGA6C,GAAAF,CAGA,OAAAE,GAIA,QAAAG,GAAAC,GACA,MAAAC,IAAA1B,KAAAyB,EAAA,SAAAE,GACA,MAAA,OAAAA,IAIA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,QAAA,MAAA,KACAA,QAAA,wBAAA,SACAA,QAAA,oBAAA,SACAA,QAAA,KAAA,KACAC,cAGA,QAAAC,GAAAC,GACA,IACA,MAAAA,GACA,QAAAA,GACA,SAAAA,IACA,QAAAA,EAAA,MACAA,EAAA,IAAAA,GAAAA,EACA,UAAAC,KAAAD,GAAAE,KAAAC,MAAAH,GACAA,GAAAA,EACA,MAAA5B,GACA,MAAA4B,IAIA,QAAAI,GAAApE,EAAAqE,GACA,GAAA9F,GAAAgC,EAAAjC,EAAAgG,EAAAN,CAEA,IAAAhE,EAGA,GAFAzB,EAAAyB,EAAAzB,OAEAA,IAAA+F,GAEA,IAAA/D,IAAAP,GACA,GAAAA,EAAAX,eAAAkB,KACAyD,EAAAhE,EAAAO,GACA8D,EAAAtC,KAAAiC,EAAAzD,EAAAyD,MAAA,GACA,UAMA,KAAA1F,EAAA,EAAAA,EAAAC,IACAyF,EAAAhE,EAAA1B,GACA+F,EAAAtC,KAAAiC,EAAA1F,EAAA0F,MAAA,GAFA1F,KASA,MAAA2C,MAGA,QAAAsD,GAAAf,GACA,GAAAgB,EAAAhB,GAAA,CAEA,IAAA,GADAiB,MACAnG,EAAA,EAAAA,EAAAkF,EAAAjF,OAAAD,IAAA,CACA,GAAAoF,GAAAF,EAAAlF,EACA,IAAAkG,EAAAd,GACA,IAAA,GAAAgB,GAAA,EAAAA,EAAAhB,EAAAnF,OAAAmG,IACAD,EAAAjG,KAAAkF,EAAAgB,QAGAD,GAAAjG,KAAAkF,GAGA,MAAAe,GAEA,MAAAjB,GAKA,QAAAmB,GAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAC,GAAAH,GAAAA,EAAA9C,KAAA6C,EAAAE,EAAAC,GAAAF,EAcA,QAAAI,GAAAC,GACA,GAAAA,GAAAA,GAAAC,OAAAC,SAAAC,KACAC,EAAAJ,EAAA/G,MAAA,KACAoH,IAQA,OANAD,GAAA/G,OAAA,GACA+G,EAAA,GAAAnH,MAAA,KAAAsB,QAAA,SAAA+F,GACA,GAAAC,GAAAD,EAAArH,MAAA,IACAoH,GAAAE,EAAA,IAAAA,EAAA,KAGAF,EAgBA,QAAAG,GAAA1F,EAAA2F,GACA,IAAAtC,EAAAsC,GACA,MAAA,OAAA3F,GAAAX,GAAA0C,KAAA/B,EAAA2F,EAGA,KAAA,GADApH,GAAAoH,EAAApH,OACAD,EAAA,EAAAA,EAAAC,EAAAD,IAAA,CACA,GAAAiC,GAAAoF,EAAArH,EACA,IAAA,MAAA0B,IAAAX,GAAA0C,KAAA/B,EAAAO,GACA,OAAA,CAEAP,GAAAA,EAAAO,GAEA,QAAAhC,EAGA,QAAAqH,GAAAlC,EAAAF,GACA,IAAAA,EACA,QAEA,IAAAlF,EAEA,IAAAkF,EAAAqC,QACA,MAAArC,GAAAqC,QAAAnC,EAIA,KADApF,EAAAkF,EAAAjF,OACAD,KACA,GAAAkF,EAAAlF,KAAAoF,EACA,MAAApF,EAIA,UAUA,QAAA+E,GAAAyC,GACA,MAAAA,IAAAA,EAAAC,cAAA/C,MAGA,QAAAwB,GAAAxE,GACA,OAAAgG,EAAAhG,KAAAiG,EAAAjG,IAAA,gBAAAA,GAAAzB,OAGA,QAAA2H,GAAAlG,GACA,MAAA,iBAAA,GAGA,QAAAmG,GAAAnG,GACA,MAAA,OAAAA,GAAAA,EAAAoG,UAAApG,EAAAqG,cAMA,QAAAC,GAAAC,EAAAC,GACA,MAAAC,GAAAF,EAAAC,GAGA,QAAAxB,GAAAhB,GACA,MAAA,YAAAtD,GAAAsD,GAGA,QAAA/B,GAAAjC,GACA,MAAA,UAAAU,GAAAV,GAGA,QAAAsD,GAAAtD,GACA,MAAAiC,GAAAjC,KAAA0G,EAAA1G,IAAAE,OAAAyG,eAAA3G,IAAAE,OAAA0G,UAGA,QAAAZ,GAAAhG,GACA,MAAA,gBAAAA,GAGA,QAAA0G,GAAA1G,GACA,MAAAA,IAAAA,GAAAA,EAAAmF,OAGA,QAAA0B,GAAA7G,GACA,MAAA,mBAAAA,GAGA,QAAAiG,GAAAjG,GACA,MAAAA,IAAAA,YAAA8G,MAGA,QAAAC,GAAA/G,GACA,MAAA,gBAAAA,GAGA,QAAAgH,GAAA3B,GACA,GAAAA,EAAA,CACA,GAAA4B,GAAA7B,SAAA8B,SAAA,KAAA9B,SAAA+B,QAIA,OAHA/B,UAAAgC,OACAH,GAAA,IAAA7B,SAAAgC,MAEA/B,EAAAgC,WAAAJ,IAKA,QAAAK,GAAAtH,GACA,GAAAuH,EACA,KAAAA,IAAAvH,GACA,GAAA,OAAAA,EAAAuH,GACA,OAAA,CAGA,QAAA,EAIA,QAAAC,GAAA1B,EAAA2B,GACA,GAAApH,GAAAA,EAAAoH,GAAAlJ,EAAA8B,EAAA9B,MACA,IAAA,MAAAuH,EAAA,OAAAvH,CAEA,KAAA,GADAyB,GAAAE,OAAA4F,GACAxH,EAAA,EAAAA,EAAAC,EAAAD,IAAA,CACA,GAAAiC,GAAAF,EAAA/B,EACA,IAAAmJ,EAAAlH,KAAAP,EAAAO,MAAAA,IAAAP,IAAA,OAAA,EAEA,OAAA,EAKA,QAAAK,GAAAL,GACA,GAAAiC,EAAAjC,GAAA,QACA,IAAAK,KACA,KAAA,GAAAE,KAAAP,GAAA0F,EAAA1F,EAAAO,IAAAF,EAAA7B,KAAA+B,EACA,OAAAF,GAGA,QAAAqH,GAAA1H,EAAA2H,EAAAC,GACA,MAAApD,GAAAxE,IACA4H,OAAAC,OAAA7E,MAAA4D,UAAAkB,MAAA/F,KAAA/B,EAAA2H,GAAA,KAIA3H,GAGA,QAAAhB,GAAA+I,EAAA1D,GACA,GAAAL,GACA1F,EAAAiC,EADAuC,IAEA,IAAA0B,EAAAuD,GACA,IAAAzJ,EAAA,EAAAA,EAAAyJ,EAAAxJ,OAAAD,IACA0F,EAAAK,EAAAtC,KAAAgG,EAAAzJ,GAAAyJ,EAAAzJ,GAAAA,GACA,MAAA0F,GAAAlB,EAAAtE,KAAAwF,OAGA,KAAAzD,IAAAwH,GACA/D,EAAAK,EAAAtC,KAAAgG,EAAAxH,GAAAwH,EAAAxH,GAAAA,GACA,MAAAyD,GAAAlB,EAAAtE,KAAAwF,EAEA,OAAAO,GAAAzB,GAGA,QAAAkF,GAAAxF,GAMA,MALAyF,uBACAA,sBAAAzF,GAEA0F,cAAA1F,GAEAvB,KAGA,QAAAkH,GAAA3F,EAAAoC,GACA,GAAApF,GAAA,IAAAS,YAAA6H,GAAA/F,KAAA9B,UAAA,EACA,IAAA+E,EAAAxC,GAAA,CACA,GAAA4F,GAAA,WACA,MAAA5F,GAAA9C,MAAAkF,EAAApF,EAAAA,EAAAqI,OAAAC,GAAA/F,KAAA9B,YAAAA,WAEA,OAAAmI,GACA,GAAApC,EAAApB,GACA,MAAApF,IACAA,EAAA6I,QAAA7F,EAAAoC,GAAApC,GACA2F,EAAAzI,MAAA,KAAAF,IAEA2I,EAAA3F,EAAAoC,GAAApC,EAGA,MAAA,IAAA8F,WAAA,qBAKA,QAAAC,GAAAvE,GAGA,MAAAwE,YAAAxE,IAAA,EAiBA,QAAAyE,GAAA7E,GACA,MAAA,OAAAA,EAAA,GAAA8E,OAAA9B,UAAA6B,KAAA1G,KAAA6B,GAGA,QAAA+E,GAAAC,EAAAlF,GACA,GAAAL,EAAAuF,GAAA,CACA,GAAA9D,GAAA8D,EAAA/C,QAAAnC,EACAoB,QACA8D,EAAAC,OAAA/D,EAAA,OAEA,IAAAxB,EAAAsF,GACA,IAAA,GAAArI,KAAAqI,GACA,GAAAA,EAAArI,IAAAmD,EAAA,OACAkF,GAAArI,EACA,OAKA,MAAAU,MAGA,QAAA6H,GAAA3H,EAAAf,EAAA2I,EAAAC,GACA,IAAA,GAAAzI,KAAAH,GACAA,EAAAf,eAAAkB,KAGAyI,GAAA7H,EAAAZ,KAAAuB,KAGAiH,IAAAzF,EAAAlD,EAAAG,KAAA8C,EAAAjD,EAAAG,MACA+C,EAAAlD,EAAAG,MAAA+C,EAAAnC,EAAAZ,MACAY,EAAAZ,OAEA8C,EAAAjD,EAAAG,MAAA8C,EAAAlC,EAAAZ,MACAY,EAAAZ,OAEAuI,EAAA3H,EAAAZ,GAAAH,EAAAG,GAAAwI,EAAAC,IACA5I,EAAAG,KAAAuB,KACAX,EAAAZ,GAAAH,EAAAG,KAGA,OAAAY,GAGA,QAAA8H,GAAAzJ,GACA,GAAA+F,GAAAuC,GAAA/F,KAAA9B,UAAA,EAOA,OANAkB,QAAAoE,EAAA2D,QACAH,MAAA,EACA7C,EAAAX,EAAAA,EAAAhH,OAAA,MACAwK,KAAAxD,EAAAlH,QAIA8C,OAAAA,OACAgI,QAAA5D,EACAwD,KAAAA,MAIA,QAAAK,KACA,GAAA5J,GAAAyJ,EAAAvJ,MAAAuB,KAAAhB,UAKA,OAHAT,GAAA2J,QAAA1J,QAAA,SAAAW,GACA0I,EAAAtJ,EAAA2B,OAAAf,EAAAZ,EAAAuJ,MAAA,KAEAvJ,EAAA2B,OAGA,QAAAsD,GAAAzE,EAAA2F,EAAA0D,GACAhG,EAAAsC,KACAA,GAAAA,GAEA,IAAApH,GAAAoH,EAAApH,MACA,KAAAA,EACA,MAAAyG,GAAAqE,GAAAA,EAAAtH,KAAA/B,GAAAqJ,CAEA,KAAA,GAAA/K,GAAA,EAAAA,EAAAC,EAAAD,IAAA,CACA,GAAAgL,GAAA,MAAAtJ,EAAA,OAAAA,EAAA2F,EAAArH,GACA,UAAAgL,IACAA,EAAAD,EACA/K,EAAAC,GAEAyB,EAAAgF,EAAAsE,GAAAA,EAAAvH,KAAA/B,GAAAsJ,EAGA,MAAAtJ,GAGA,QAAAsC,KACA,GAAA9C,GAAAyJ,EAAAvJ,MAAAuB,KAAAhB,UAKA,OAHAT,GAAA2J,QAAA1J,QAAA,SAAAW,GACA0I,EAAAtJ,EAAA2B,OAAAf,EAAAZ,EAAAuJ,MAAA,KAEAvJ,EAAA2B,OAGA,QAAAoI,GAAAC,EAEAxK,EAEAyK,EAEAC,GAmBA,QAAAC,GAAApJ,EAAAvB,GACA,GAAAuB,EAAAqJ,MAAA,MAAA,CACA,GAAAC,GACAC,EAAA,SAAAzJ,EAAAL,GACA,GAAA+J,GAAA1J,EAAAhC,KACA,OAAA0L,GACA/J,EAAA+J,GACAD,EAAAzJ,EAAAwJ,EAAA7J,EAAA+J,IADA,KAGAF,EAGA,OAAAC,GAAAvJ,EAAApC,MAAA,KAAA6L,UAAAhL,GAEA,MAAAA,GAAAuB,GAIA,MAxBAmJ,GAAAA,GAAAvE,OACAsE,EAAAA,EACAtB,EAAAuB,EAAAD,GAAA,SAAAQ,GACA,MAAAA,IAqBAT,EAAA3F,QAAA,yCACA,SAAA+F,EAAArJ,EAAA2J,GACA,GAAAlG,GAAA2F,EAAApJ,EAAAvB,EAIA,OAHAkL,KACAlG,EAAA2F,EAAAO,EAAAR,GAAA3H,KAAA2H,EAAA1F,EAAAzD,IAEAkJ,EAAAzF,EAAAzD,GAAA4J,aAOA,QAAAC,GAAApK,GACA,MAAAA,GAAAqK,OAAArK,EAAAqK,KAAAA,MAGA,QAAAC,GAAA9G,GACA,MAAAC,IAAA1B,KAAAyB,EAAA,SAAAE,EAAAoB,GACA,MAAAtB,GAAAqC,QAAAnC,IAAAoB,IAKA,QAAAyF,GAAAC,GACA,GAAAvL,KAAAwL,GAAA,EACA,OAAAD,GAAAA,EAAAvL,EAAAA,EAwhBA,QAAAyL,KACA,MAAAA,GA96CA,GA8BAjE,GAAAkE,GA9BAR,MAAAA,SAGArC,IAFA9E,MAAA4D,UAAAiB,OACA7E,MAAA4D,UAAAf,QACA7C,MAAA4D,UAAAkB,OACArE,GAAAT,MAAA4D,UAAAnD,OACApE,GAAAa,OAAA0G,UAAAvH,eAGAuL,GAAAC,OAAAA,SAAA,gBAuBAC,GAAA,mBAAAD,QAAAA,OAAAjE,UAAA,IAEAH,GAAA,SAAAF,EAAAC,EAAAuE,EAAAC,GAGA,GAAAzE,IAAAC,EAAA,MAAA,KAAAD,GAAA,EAAAA,IAAA,EAAAC,CAEA,IAAA,MAAAD,GAAA,MAAAC,EAAA,OAAA,CAEA,IAAAD,IAAAA,EAAA,MAAAC,KAAAA,CAEA,IAAA9F,SAAA6F,EACA,QAAA,aAAA7F,GAAA,WAAAA,GAAA,gBAAA8F,KACAmE,GAAApE,EAAAC,EAAAuE,EAAAC,IAIAL,GAAA,SAAApE,EAAAC,EAAAuE,EAAAC,GAKA,GAAAC,GAAAd,GAAApI,KAAAwE,EACA,IAAA0E,IAAAd,GAAApI,KAAAyE,GAAA,OAAA,CACA,QAAAyE,GAEA,IAAA,kBAEA,IAAA,kBAGA,MAAA,GAAA1E,GAAA,GAAAC,CACA,KAAA,kBAGA,OAAAD,KAAAA,GAAAC,KAAAA,EAEA,KAAAD,EAAA,GAAAA,IAAA,EAAAC,GAAAD,KAAAC,CACA,KAAA,gBACA,IAAA,mBAIA,OAAAD,KAAAC,CACA,KAAA,kBACA,MAAAsE,IAAAI,QAAAnJ,KAAAwE,KAAAuE,GAAAI,QAAAnJ,KAAAyE,GAGA,GAAA2E,GAAA,mBAAAF,CACA,KAAAE,EAAA,CACA,GAAA,gBAAA5E,IAAA,gBAAAC,GAAA,OAAA,CAGA,IAAA4E,GAAA7E,EAAAR,YAAAsF,EAAA7E,EAAAT,WACA,IAAAqF,IAAAC,KAAArG,EAAAoG,IAAAA,YAAAA,IACApG,EAAAqG,IAAAA,YAAAA,KACA,eAAA9E,IAAA,eAAAC,GACA,OAAA,EAQAuE,EAAAA,MACAC,EAAAA,KAEA,KADA,GAAAzM,GAAAwM,EAAAxM,OACAA,KAGA,GAAAwM,EAAAxM,KAAAgI,EAAA,MAAAyE,GAAAzM,KAAAiI,CAQA,IAJAuE,EAAAvM,KAAA+H,GACAyE,EAAAxM,KAAAgI,GAGA2E,EAAA,CAGA,GADA5M,EAAAgI,EAAAhI,OACAA,IAAAiI,EAAAjI,OAAA,OAAA,CAEA,MAAAA,KACA,IAAAkI,EAAAF,EAAAhI,GAAAiI,EAAAjI,GAAAwM,EAAAC,GAAA,OAAA,MAEA,CAEA,GAAAzK,GAAAF,EAAAH,OAAAG,KAAAkG,EAGA,IAFAhI,EAAA8B,EAAA9B,OAEA2B,OAAAG,KAAAmG,GAAAjI,SAAAA,EAAA,OAAA,CACA,MAAAA,KAGA,GADAgC,EAAAF,EAAA9B,GACAiI,EAAAjG,KAAAuB,KAAA2E,EAAAF,EAAAhG,GAAAiG,EAAAjG,GAAAwK,EAAAC,GAAA,OAAA,EAMA,MAFAD,GAAA1M,MACA2M,EAAA3M,OACA,EAGA,IAAAyD,IAAAT,GAAA,EAmHAiK,GAAA,WACA,QAAAC,GAAAC,EAAArJ,EAAAsJ,GAEA,GAAAC,GAAAF,EAAA5E,UACA+E,EAAAH,EAAAI,WAAAhF,UACAiF,EAAAJ,GAAAA,EAAAI,WAEA,KAAA,GAAAtE,KAAApF,GACA,gBAAAoF,IAKAmE,EAAAnE,GAAA,kBAAApF,GAAAoF,IAAApF,EAAAoF,GAAAuE,cAAAD,GAAA,kBAAAF,GAAApE,GAkBApF,EAAAoF,GAjBA,SAAAA,EAAA/E,EAAAuJ,GACA,MAAA,YACA,GAAAC,GAAA/K,KAAAgL,SAIAhL,MAAAgL,UAAAF,CAIA,IAAAG,GAAA1J,EAAA9C,MAAAuB,KAAAhB,UAIA,OAFAgB,MAAAgL,UAAAD,EAEAE,IAEA3E,EAAApF,EAAAoF,GAAAoE,EAAApE,IAIA,OAAAiE,GAGA,MAAA,SAAAF,GAAAnJ,EAAAgK,EAAAV,GAEA,GAAAK,GAAA3J,EAAA4D,WACA+F,KAAA5L,SACA4L,EAAA,WACA,GAAA7K,KAAAmL,KACA,MAAAnL,MAAAmL,KAAA1M,MAAAuB,KAAAhB,YAKA,IAAAoM,GAAAlK,EAAAkK,WAAA,GACAb,EAAA,GAAAc,UACA,mBAAAD,EAAA,+KAkCA,OAzBAb,GAAAM,aAAAA,EACAK,EAAAA,GAAAjM,OAEAsL,EAAA5E,UAAA1G,OAAAqM,OAAAJ,EAAAvF,WAGA4E,EAAA5E,UAAAb,YAAAyF,EACAA,EAAAI,WAAAO,EAGAX,EAAAgB,UAAAL,EAEAX,EAAAiB,UACAjB,EAAAiB,QAAA,SAAAtK,EAAAsJ,GACA,MAAAF,GAAAtK,KAAAkB,EAAAsJ,KAGAD,EAAAkB,UACAlB,EAAAkB,QAAA,SAAAvK,EAAAsJ,GACA,MAAAH,GAAAnJ,EAAAlB,KAAAwK,KAIAD,EAAAiB,QAAAtK,EAAAsJ,GAEAD,MAgCAmB,GAAA,WAEA,QAAAC,MACA,MAAA,UAAA5M,EAAAmC,GACAyK,EAAAhG,UAAA5G,CACA,IAAAgM,GAAA,GAAAY,EAKA,OAJAA,GAAAhG,UAAA,KACAzE,GACAiH,EAAA4C,EAAA7J,GAEA6J,MAuWAtL,IA7OA,WACA,GAAA6F,EAEA,OAAA,UAAArB,GAIA,MAHAqB,KAAAA,EAAAsG,SAAAC,cAAA,MACAvG,EAAAlB,KAAAH,EAEAqB,EAAAlB,SAsOA,WACA,GAAA0H,KAOA,OAJA3I,GAAA,gEAAAjG,MAAA,KAAA,SAAAG,EAAAiJ,GACAwF,EAAA,WAAAxF,EAAA,KAAAA,EAAAzD,gBAGA,SAAA9D,GACA,MAAA,OAAAA,EAAA0I,OAAA1I,GACA+M,EAAA5C,GAAApI,KAAA/B,KAAA,cA4JAqK,GAAA,EAYAI,GAAA,EAQAuC,GAAA,WACA,GAAAC,GAAAhM,KACAiM,EAAAjM,KAAAkM,QAAA,GAAAC,SAAA,SAAAC,EAAAC,GACAL,EAAAM,SAAAF,EACAJ,EAAAO,QAAAF,GAGAlE,GAAA8D,GACAO,KAAA,SAAAC,EAAAC,EAAAC,GAIA,MAHAA,IACA3M,KAAA4M,SAAAD,GAEAR,QAAAxG,UAAA6G,KAAA1L,KAAAd,KAAAyM,EAAAC,IAEAG,KAAA,SAAAC,GACA,MAAAX,SAAAxG,UAAA6G,KAAA1L,KAAAd,KAAA8M,IAEAC,KAAA,SAAAD,GACA,MAAAX,SAAAxG,UAAAwG,SAAArL,KAAAd,KAAA8M,IAEAF,SAAA,SAAAE,GAEA,MADAd,GAAArC,IAAApM,KAAAuP,GACA9M,QAKAA,KAAA2J,OAEA3J,KAAAoM,QAAAL,GAAApG,UAAAyG,QAAAY,KAAAhN,MACAA,KAAAqM,OAAAN,GAAApG,UAAA0G,OAAAW,KAAAhN,MACAA,KAAA4M,SAAAb,GAAApG,UAAAiH,SAAAI,KAAAhN,MAIA+L,IAAApG,UAAAyG,QAAA,SAAArJ,GAEA,MADA/C,MAAAsM,SAAAxL,KAAAd,KAAAkM,QAAAnJ,GACA/C,MAGA+L,GAAApG,UAAAiH,SAAA,SAAA7J,GACA,IACA,MAAA/C,MAAA2J,IAAAnL,QAAA,SAAAyO,GACA,MAAAA,GAAAlK,KAEA,MAAAmK,GACAlN,KAAAqM,OAAAa,GAEA,MAAAlN,OAGA+L,GAAApG,UAAA0G,OAAA,SAAAc,GAEA,MADAnN,MAAAuM,QAAAzL,KAAAd,KAAAkM,QAAAiB,GACAnN,MAIA+L,GAAApG,UAAA6G,KAAA,SAAApJ,EAAAgK,EAAAC,GACA,MAAArN,MAAAkM,QAAAM,KAAApJ,EAAAgK,EAAAC,IAGAtB,GAAAuB,IAAA,SAAA/K,GACA,MAAA4J,SAAAmB,IAAA/K,IAGAwJ,GAAAwB,MAAA,SAAAhL,GACA,MAAA4J,SAAAqB,KAAAjL,IAGAwJ,GAAA0B,KAAA,SAAAC,EAAAtK,EAAAgK,EAAAC,GACA,GAAAM,GAAAD,GAAA,kBAAAA,GAAAlB,KACAoB,EAAAD,GAAAD,YAAAvB,QAEA,KAAAwB,EACA,MAAA3O,WAAA1B,OAAA,EACA8F,EAAAA,EAAAsK,GAAAA,GAEA,GAAA3B,KAAAK,QAAAsB,EAEA,KAAAE,EAAA,CACA,GAAAC,GAAA,GAAA9B,IAAA2B,EAAAI,OACAJ,GAAAlB,KAAAqB,EAAAzB,QAAAyB,EAAAxB,OAAAwB,EAAAjB,UACAc,EAAAG,EAAA3B,QAGA,MAAA9I,IAAAgK,GAAAC,EACAK,EAAAlB,KAAApJ,EAAAgK,EAAAC,GAEAK,GAGA3B,GAAAM,OAAA,SAAA0B,GACA,GAAAC,GAAA,GAAAjC,GAEA,OADAiC,GAAA3B,OAAA0B,GACAC,EAAA9B,SAGAH,GAAAK,QAAA,SAAA6B,GACA,GAAAD,GAAA,GAAAjC,GAEA,OADAiC,GAAA5B,QAAA6B,GACAD,EAAA9B,SAGAH,GAAAmC,UAAAnC,GAAAK,OAEA,IAAA+B,IAAA9D,IACA+D,GAAA,SAAAC,EAAAC,EAAAL,EAAA7K,EAAAmL,EAAAC,GACA,GAAAxC,GAAAhM,KACAyO,EAAAzO,KAAAyO,OAAAzO,KAAAyO,QAEA,OAAApM,GAAAgM,IACAE,EAAAnL,EACAD,EAAAkL,EAAA,SAAA5O,EAAA8B,GACAyK,EAAAoC,GAAA3O,EAAA6O,EAAAL,EAAA1M,EAAAgN,EAAAC,KAEAxO,OAGA+E,EAAAuJ,IAAAvK,EAAAX,KACAmL,EAAAnL,EACAA,EAAA6K,EACAA,EAAAK,EACAA,EAAAzN,IAGAkD,EAAAkK,KACAM,EAAAnL,EACAA,EAAA6K,EACAA,EAAA,MAGAlJ,EAAAsJ,KACAA,EAAAA,EAAAnR,MAAA,OAGAmR,EAAA7P,QAAA,SAAA8H,IACAmI,EAAAnI,KAAAmI,EAAAnI,QAAA/I,MACAgE,GAAA6B,EACAkL,SAAAA,EACAL,KAAAA,EACAM,IAAAA,EACAC,IAAAA,MAIAxO,OAGAwO,IAAA,SAAAH,EAAAC,EAAAL,EAAA7K,EAAAmL,GACA,MAAAvO,MAAAoO,GAAAC,EAAAC,EAAAL,EAAA7K,EAAAmL,EAAA,IAGAG,QAAA,SAAAvN,GACA,IAAAnB,KAAAyO,KACA,MAAAzO,KAGA,IAAAgM,GAAAhM,IAEA+E,GAAA5D,KACAA,EAAA,GAAAC,aAAAD,IAGAA,EAAAjB,OAAAF,IAEA,IAAAzB,GAAAsI,GAAA/F,KAAA9B,UAAA,EAoCA,OAlCAT,GADAqH,EAAArH,IACA4C,GAAAyF,OAAArI,IAEA4C,IAEAA,EAAA1B,MAAA0B,EAAAmF,KAAA,OAAA9H,QAAA,SAAAmQ,GACA,GAAAC,GAAA5C,EAAAyC,KAAAE,EACA,IAAAC,EAAA,CAOA,IAAA,GAHAC,GAAAD,EAAAtR,OACAwR,GAAA,EAEAzR,EAAA,EAAAA,EAAAwR,EAAAxR,IAAA,CACA,GAAA4P,GAAA2B,EAAAvR,EACA8D,GAAA8M,KACAhB,EAAAgB,OACA9M,EAAA8M,KAAA9F,KAAA8E,EAAAgB,KAAA9M,EAAA8M,OAGA9M,EAAA8M,KAAAhB,EAAAgB,MAAA,KAEAhB,EAAA1L,GAAA9C,MAAAwO,EAAAsB,IAAAhQ,GACA0O,EAAAuB,MACAI,EAAAvR,GAAA,KACAyR,GAAA,GAIAA,IACA9C,EAAAyC,KAAAE,GAAArM,EAAAsM,OAIA5O,MAGA+O,SAAA,SAAAC,GACA,GAAAC,IAAAjP,KAAAyO,OAAAzO,KAAAkP,aAAAF,MACA,OAAAC,GAAA3R,OAAA,GAGA6R,SAAA,SAAApQ,EAAAiQ,EAAA5L,EAAAoL,GACA,IAAAzP,EACA,MAAAiB,KAIA+E,GAAA3B,KACAA,EAAApD,KAAAoD,IAGAoL,EACAzP,EAAAyP,IAAAQ,EAAA5L,EAAApD,MAEAjB,EAAAqP,GAAAY,EAAA5L,EAAApD,KAOA,KAAA,GAFAoP,GADAC,EAAArP,KAAAsP,eAAAtP,KAAAsP,iBAGAjS,EAAA,EAAAA,EAAAgS,EAAA/R,OAAAD,IACA,GAAAgS,EAAAhS,GAAA0B,KAAAA,EAAA,CACAqQ,EAAAC,EAAAhS,EACA,OAGA+R,GACAC,EAAA9R,KACA6R,GACArQ,IAAAA,EACAsP,WAIA,IAAAkB,GAAAH,EAAAf,OACAmB,EAAAD,EAAAP,GAAAO,EAAAP,MAKA,OAJAQ,GAAA5K,QAAAxB,QACAoM,EAAAjS,KAAA6F,GAGApD,MAGAyP,aAAA,SAAA1Q,EAAAiQ,EAAA5L,GACA,MAAApD,MAAAmP,SAAApQ,EAAAiQ,EAAA5L,EAAA,IAGAsM,IAAA,SAAArB,EAAAjL,GACA,GAAAqL,GAAAzO,KAAAyO,OAAAzO,KAAAyO,QAuBA,OAtBA1J,GAAAsJ,KACAA,EAAAA,EAAAnR,MAAA,OAGAmR,EAAA7P,QAAA,SAAA8H,GACA,GAAAqJ,GAAAlB,EAAAnI,GACAsJ,IAEA,IAAAD,GAAAvM,EACA,IAAA,GAAA/F,GAAA,EAAAwR,EAAAc,EAAArS,OAAAD,EAAAwR,EAAAxR,IACAsS,EAAAtS,GAAAkE,KAAA6B,GAAAuM,EAAAtS,GAAAkE,GAAAO,IAAAsB,GACAwM,EAAArS,KAAAoS,EAAAtS,GAIAuS,GAAAtS,OACAmR,EAAAnI,GAAAsJ,QAEAnB,GAAAnI,KAIAtG,MAEA6P,WAAA,SAAA9Q,EAAAiQ,EAAA5L,GACA,GAAAiM,GAAArP,KAAAsP,YACA,KAAAD,EACA,MAAArP,KAEA,KAAA,GAAA3C,GAAA,EAAAA,EAAAgS,EAAA/R,OAAAD,IAAA,CACA,GAAA+R,GAAAC,EAAAhS,EAEA,KAAA0B,GAAAA,GAAAqQ,EAAArQ,IAAA,CAIA,GAAAwQ,GAAAH,EAAAf,MACA,KAAA,GAAAM,KAAAY,GACA,IAAAP,GAAAA,GAAAL,EAAA,CAIAa,eAAAD,EAAAZ,EAEA,KAAA,GAAAlL,GAAA,EAAAA,EAAA+L,eAAAlS,OAAAmG,IACAL,GAAAA,GAAAoM,eAAAnS,KACA+R,EAAArQ,IAAA2Q,IAAAf,EAAAa,eAAAnS,GAAA2C,MACAwP,eAAAnS,GAAA,KAIAmS,gBAAAD,EAAAZ,GAAArM,EAAAkN,gBAEAnJ,EAAAmJ,kBACAD,EAAAZ,GAAA,MAKAtI,EAAAkJ,KACAF,EAAAhS,GAAA,OASA,MALAgS,GAAArP,KAAAsP,aAAAhN,EAAA+M,GACAhJ,EAAAgJ,KACArP,KAAAsP,aAAA,MAGAtP,QAMA8P,GAAA3B,GAAA1C,SACAN,KAAA,SAAA4E,EAAAvF,GACA,GAAAhE,GAAAuJ,KACAvF,KAAAA,MACAxK,KAAAgQ,IAAA1G,EAAAtJ,KAAAiQ,WACAjQ,KAAA+P,cACAvF,EAAA0F,aAAAlQ,KAAAkQ,WAAA1F,EAAA0F,YACA1F,EAAAtH,QAAAsD,EAAAxG,KAAAkD,MAAAsD,EAAAgE,OACA,IAAA1L,GAAA0E,EAAAxD,KAAA,WACAwG,GAAA2B,KAAArJ,EAAA0H,GACAxG,KAAAmQ,IAAA3J,EAAAgE,GACAxK,KAAAoQ,YAIAA,QAAA,KAGAC,gBAAA,KAIAC,YAAA,KAIAL,UAAA,IAIAM,OAAA,SAAA/F,GACA,MAAAxI,GAAAhC,KAAA+P,aAKAS,IAAA,SAAAC,GACA,MAAAzQ,MAAA+P,WAAAU,IAKAhM,IAAA,SAAAgM,GACA,MAAA,OAAAzQ,KAAAwQ,IAAAC,IAMAN,IAAA,SAAA7Q,EAAAoR,EAAAlG,GACA,GAAA,MAAAlL,EAAA,MAAAU,KAGA,IAAAwG,EAWA,IAVA,gBAAAlH,IACAkH,EAAAlH,EACAkL,EAAAkG,IAEAlK,MAAAlH,GAAAoR,EAGAlG,IAAAA,OAGAxK,KAAA2Q,UAAAnK,EAAAgE,GAAA,OAAA,CAGA,IAAAoG,GAAApG,EAAAoG,MACAC,EAAArG,EAAAqG,OACAC,KACAC,EAAA/Q,KAAAgR,SACAhR,MAAAgR,WAAA,EAEAD,IACA/Q,KAAAiR,oBAAAjP,EAAAhC,KAAA+P,YACA/P,KAAAoQ,WAGA,IAAAc,GAAAlR,KAAA+P,WACAK,EAAApQ,KAAAoQ,QACAe,EAAAnR,KAAAiR,mBAGA,KAAA,GAAAR,KAAAjK,GACAkK,EAAAlK,EAAAiK,GACApL,EAAA6L,EAAAT,GAAAC,IAAAI,EAAAvT,KAAAkT,GACApL,EAAA8L,EAAAV,GAAAC,SAGAN,GAAAK,GAFAL,EAAAK,GAAAC,EAIAE,QAAAM,GAAAT,GAAAS,EAAAT,GAAAC,CAOA,IAHA1Q,KAAAsQ,cAAA9J,KAAAxG,KAAAhC,GAAAgC,KAAAwQ,IAAAxQ,KAAAsQ,eAGAO,EAAA,CACAC,EAAAxT,SAAA0C,KAAAoR,SAAA5G,EACA,KAAA,GAAAnN,GAAA,EAAAA,EAAAyT,EAAAxT,OAAAD,IACA2C,KAAA0O,QAAA,UAAAoC,EAAAzT,GAAA2C,KAAAkR,EAAAJ,EAAAzT,IAAAmN,GAMA,GAAAuG,EAAA,MAAA/Q,KACA,KAAA6Q,EACA,KAAA7Q,KAAAoR,UACA5G,EAAAxK,KAAAoR,SACApR,KAAAoR,UAAA,EACApR,KAAA0O,QAAA,SAAA1O,KAAAwK,EAKA,OAFAxK,MAAAoR,UAAA,EACApR,KAAAgR,WAAA,EACAhR,MAKA4Q,MAAA,SAAAH,EAAAjG,GACA,MAAAxK,MAAAmQ,IAAAM,EAAA,OAAAtI,KAAAqC,GAAAoG,OAAA,MAIAS,MAAA,SAAA7G,GACA,GAAAhE,KACA,KAAA,GAAAlH,KAAAU,MAAA+P,WAAAvJ,EAAAlH,GAAA,MACA,OAAAU,MAAAmQ,IAAA3J,EAAA2B,KAAAqC,GAAAoG,OAAA,MAKAU,WAAA,SAAAb,GACA,MAAA,OAAAA,GAAApK,EAAArG,KAAAoQ,SACApQ,KAAAoQ,QAAAK,KAAA5P,IASA0Q,kBAAA,SAAAC,GACA,IAAAA,EAAA,QAAAxR,KAAAsR,cAAAtP,EAAAhC,KAAAoQ,QACA,IAAAqB,GAAAzR,KAAAgR,UAAAhR,KAAAiR,oBAAAjR,KAAA+P,WACAK,IACA,KAAA,GAAAK,KAAAe,GAAA,CACA,GAAAd,GAAAc,EAAAf,EACApL,GAAAoM,EAAAhB,GAAAC,KACAN,EAAAK,GAAAC,GAEA,OAAArK,EAAA+J,IAAAA,GAKAvQ,SAAA,SAAA4Q,GACA,MAAA,OAAAA,GAAAzQ,KAAAiR,oBACAjR,KAAAiR,oBAAAR,GADA,MAMAiB,mBAAA,WACA,MAAA1P,GAAAhC,KAAAiR,sBAIAjP,MAAA,WACA,MAAA,IAAAhC,MAAA8E,YAAA9E,KAAA+P,aAIA4B,MAAA,WACA,OAAA3R,KAAAyE,IAAAzE,KAAAsQ,cAIAsB,QAAA,SAAApH,GACA,MAAAxK,MAAA2Q,aAAAxI,KAAAqC,GAAAqH,UAAA,MAKAlB,UAAA,SAAAnK,EAAAgE,GACA,IAAAA,EAAAqH,WAAA7R,KAAA6R,SAAA,OAAA,CACArL,GAAA2B,KAAAnI,KAAA+P,WAAAvJ,EACA,IAAA0G,GAAAlN,KAAAqQ,gBAAArQ,KAAA6R,SAAArL,EAAAgE,IAAA,IACA,QAAA0C,IACAlN,KAAA0O,QAAA,UAAA1O,KAAAkN,EAAA/E,EAAAqC,GAAA6F,gBAAAnD,MACA,KA0JA,OAlJA/E,GAAAsB,GACA9I,MAAAN,EAAA,SAEAU,QAAAA,EAEAjB,OAAAO,EAAA,UAEAI,OAAAJ,EAAA,UAEAyR,UAAA,SAAAnP,GACA,MAAAA,GAAAC,QAAA,cAAA,SAAA0C,GACA,MAAAA,GAAAyM,cAAAnP,QAAA,IAAA,OAIAZ,MAAAA,EAEAM,QAAAA,EAEArB,YAAAA,EAEAyB,UAAAA,EAEApB,SAAAA,EAEAxC,SAAAF,EAAAmC,GAAA,GAEA2K,SAAAA,GAEAK,SAAAA,GAEAoC,QAAAA,GAEApH,MAAAA,EAEAjE,iBAAAA,EAEAK,KAAAA,EAEAG,QAAAA,EAEAI,QAAAA,EAEAM,eAAAA,EAEAS,IAAAA,EAEAE,QAAAA,EAEAvC,QAAAA,EAEAmB,YAAAA,EAEA0B,UAAAA,EAEAW,UAAA,SAAAoD,GACA,MAAAA,KAAAnI,IAGAqE,WAAAA,EAEAmB,cAAAA,EAEAhB,QAAAA,EAEAtB,WAAAA,EAEAiB,WAAAA,EAEAuB,QAAAA,EAEAT,SAAAA,EAEA9E,SAAAA,EAEAqB,cAAAA,EAEA0C,SAAAA,EAEAgB,aAAAA,EAEAN,SAAAA,EAEArG,KAAAA,EAEA4S,MAAA,SAAA9Q,EAAAgK,EAAAV,GACA,MAAAH,IAAAnJ,EAAAgK,EAAAV,IAGAyH,WAAA,SAAAtP,GACA,MAAAA,GAAAuP,OAAA,GAAArP,cAAAF,EAAAkE,MAAA,IAGAJ,UAAAA,EAEA1I,IAAAA,EAEAoK,MAAAA,EAGAjB,MAAAA,EAEAQ,WAAAA,EAEAlE,OAAAA,EAEA2O,WAAA,WACA,OAAA,GAGAC,YAAA,WACA,OAAA,GAGA/Q,UAAAA,EAEAgR,eAAA,SAAAtP,GACA,MAAAE,MAAAqP,UAAAvP,IAGA+M,SAAAA,GAEAxH,WAAAA,EAEAhB,QAAAA,EAEAE,KAAAA,EAEA/H,KAAAA,GAEA0J,IAAAA,EAEAE,KAAAA,EAEAC,SAAAA,EAEAiJ,WAAA,SAAA5P,GACA,MAAAA,GAAAuP,OAAA,GAAAH,cAAApP,EAAAkE,MAAA,IAGA2L,IAAA,mBAAAtO,QAAAA,OAAAsO,KAAAtO,OAAAuO,UAAA,KAEA5Q,OAAAA,IAIAnD,EAAA+K,MAAAA,IAEAhM,EAAA,sBACA,YACA,WACA,SAAAiB,GACA,MAAAA,KAGAjB,EAAA,iBAAA,sBAAA,SAAAiV,GAAA,MAAAA,MA8EoB,mBAAXxO,QAAyBA","file":"../skylark-langx.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n              proto[name] = typeof props[name] == \"function\" && !props[name]._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                      (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, options) {\r\n                    return createClass(props, this, options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        mixin(p,{\r\n            then : function(onResolved,onRejected,onProgress) {\r\n                if (onProgress) {\r\n                    this.progress(onProgress);\r\n                }\r\n                return Promise.prototype.then.call(this,onResolved,onRejected);\r\n            },\r\n            done : function(handler) {\r\n                return Promise.prototype.then.call(this,handler);\r\n            },\r\n            fail : function(handler) { \r\n                return Promise.prototype.catch.call(this,handler);\r\n            }, \r\n            progress : function(handler) {\r\n                self[PGLISTENERS].push(handler);\r\n                return this;\r\n            }\r\n\r\n        });\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n        this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            e.target = this;\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-langx/main',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx', ['skylark-langx/main'], function (main) { return main; });\n\n"]}