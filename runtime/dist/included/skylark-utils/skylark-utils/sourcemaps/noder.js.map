{"version":3,"sources":["noder.js"],"names":["define","skylark","langx","styler","ensureNodes","nodes","copyByClone","isArrayLike","map","call","node","cloneNode","flatten","nodeName","elm","chkName","name","toLowerCase","undefined","contents","contentDocument","childNodes","html","innerHTML","this","empty","isString","isNumber","i","length","appendChild","clone","deep","self","isIE","nodeType","document","createElement","each","getAttribs","attr","setAttrib","getAttrib","tag","props","parent","mixin","append","createFragment","trim","singleTagRE","test","RegExp","$1","fragmentRE","containers","container","dom","slice","forEach","removeChild","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","directly","parentNode","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","after","placing","refNode","nextSibling","insertBefore","before","prepend","overlay","params","overlayDiv","css","position","top","left","width","height","zIndex","opacity","remove","replace","oldNode","replaceChild","throb","timer","style","time","callback","throbber","className","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","match","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","Array","prototype"],"mappings":";;;;;;;AAAAA,QACI,YACA,UACA,YACD,SAASC,EAASC,EAAOC,GAqBxB,QAASC,GAAYC,EAAOC,GASxB,MARKJ,GAAMK,YAAYF,KACnBA,GAASA,IAETC,IACAD,EAAQG,EAAIC,KAAKJ,EAAO,SAASK,GAC7B,MAAOA,GAAKC,WAAU,MAGvBT,EAAMU,QAAQP,GAGzB,QAASQ,GAASC,EAAKC,GACnB,GAAIC,GAAOF,EAAID,UAAYC,EAAID,SAASI,aACxC,OAAgBC,UAAZH,EACOC,IAASD,EAAQE,cAErBD,EAGX,QAASG,GAASL,GACd,MAAID,GAASC,EAAK,UACPA,EAAIM,gBAERN,EAAIO,WAGf,QAASC,GAAKZ,EAAMY,GAChB,GAAaJ,SAATI,EACA,MAAOZ,GAAKa,SAIZ,IAFAC,KAAKC,MAAMf,GACXY,EAAOA,GAAQ,GACXpB,EAAMwB,SAASJ,IAASpB,EAAMyB,SAASL,GACvCZ,EAAKa,UAAYD,MACd,IAAIpB,EAAMK,YAAYe,GACzB,IAAK,GAAIM,GAAI,EAAGA,EAAIN,EAAKO,OAAQD,IAC7BlB,EAAKoB,YAAYR,EAAKM,QAG1BlB,GAAKoB,YAAYR,GAK7B,QAASS,GAAMrB,EAAMsB,GACjB,GACID,GADAE,EAAOT,IAIX,QAAKU,GAA0B,IAAlBxB,EAAKyB,UAAkBH,EACzBtB,EAAKC,UAAUqB,GAIrBA,EAAL,QACID,EAAQK,SAASC,cAAc3B,EAAKG,UAGpCyB,KAAKL,EAAKM,WAAW7B,GAAO,SAAS8B,GACjCP,EAAKQ,UAAUV,EAAOS,EAAK3B,SAAUoB,EAAKS,UAAUhC,EAAM8B,EAAK3B,aAG5DkB,GAIf,QAASM,GAAcM,EAAKC,EAAMC,GAC9B,GAAInC,GAAO0B,SAASC,cAAcM,EAOlC,OANIC,IACA1C,EAAM4C,MAAMpC,EAAMkC,GAElBC,GACAE,EAAOF,EAAOnC,GAEXA,EAGX,QAASsC,GAAe1B,GAGpB,GADAA,EAAOpB,EAAM+C,KAAK3B,GACd4B,EAAYC,KAAK7B,GACjB,OAAQe,EAAce,OAAOC,IAGjC,IAAIrC,GAAOsC,EAAWH,KAAK7B,IAAS8B,OAAOC,EACrCrC,KAAQuC,KACVvC,EAAO,IAEX,IAAIwC,GAAYD,EAAWvC,EAQ3B,OAPAwC,GAAUjC,UAAY,GAAKD,EAC3BmC,IAAMC,EAAMjD,KAAK+C,EAAUnC,YAE3BoC,IAAIE,QAAQ,SAASjD,GACjB8C,EAAUI,YAAYlD,KAGnB+C,IAGX,QAASI,GAASnD,EAAMoD,GACpB,MAAOC,GAAUD,EAAOpD,GAG5B,QAASsD,GAAeC,GACpB,MAAO7B,UAAS4B,eAAeC,GAGnC,QAASC,KACL,MAAO9B,UAGX,QAASX,GAAMf,GACX,KAAOA,EAAKyD,iBAAiB,CACzB,GAAIL,GAAQpD,EAAK0D,UACjB1D,GAAKkD,YAAYE,GAErB,MAAOtC,MAGX,QAASuC,GAAUrD,EAAMmC,EAAOwB,GAC5B,GAAIA,EACA,MAAO3D,GAAK4D,aAAezB,CAE/B,IAAIT,SAASmC,gBAAgBV,SACzB,MAAOhB,GAAOgB,SAASnD,EAE3B,MAAOA,GAAM,CACT,GAAImC,IAAWnC,EACX,OAAO,CAGXA,GAAOA,EAAK4D,WAGhB,OAAO,EAGX,QAASE,GAAM9D,GACX,MAAe,OAARA,GAAgBA,EAAKyB,UAAYzB,EAAK+D,cAGjD,QAASC,GAAS5D,GACd,MAAKA,GAIe,GAAhBA,EAAIqB,SACGrB,EAGJA,EAAI6D,cAPAvC,SAUf,QAASwC,GAAY9D,GACjB,GAAIoD,GAAMQ,EAAS5D,EACnB,OAAQoD,GAAIW,aAAeX,EAAIY,aAGnC,QAASC,GAAMrE,EAAMsE,EAAS1E,GAC1B,GAAI2E,GAAUvE,EACVmC,EAASoC,EAAQX,UACrB,IAAIzB,EAIA,IAAK,GAHDxC,GAAQD,EAAY4E,EAAS1E,GAC7B2E,EAAUA,EAAQC,YAEbtD,EAAI,EAAGA,EAAIvB,EAAMwB,OAAQD,IAC1BqD,EACApC,EAAOsC,aAAa9E,EAAMuB,GAAIqD,GAE9BpC,EAAOf,YAAYzB,EAAMuB,GAIrC,OAAOJ,MAGX,QAAS4D,GAAO1E,EAAMsE,EAAS1E,GAC3B,GAAI2E,GAAUvE,EACVmC,EAASoC,EAAQX,UACrB,IAAIzB,EAEA,IAAK,GADDxC,GAAQD,EAAY4E,EAAS1E,GACxBsB,EAAI,EAAGA,EAAIvB,EAAMwB,OAAQD,IAC9BiB,EAAOsC,aAAa9E,EAAMuB,GAAIqD,EAGtC,OAAOzD,MAGX,QAAS6D,GAAQ3E,EAAMsE,EAAS1E,GAI5B,IAAK,GAHDgE,GAAa5D,EACbuE,EAAUX,EAAWF,WACrB/D,EAAQD,EAAY4E,EAAS1E,GACxBsB,EAAI,EAAGA,EAAIvB,EAAMwB,OAAQD,IAC1BqD,EACAX,EAAWa,aAAa9E,EAAMuB,GAAIqD,GAElCX,EAAWxC,YAAYzB,EAAMuB,GAGrC,OAAOJ,MAGX,QAASuB,GAAOrC,EAAMsE,EAAS1E,GAG3B,IAAK,GAFDgE,GAAa5D,EACbL,EAAQD,EAAY4E,EAAS1E,GACxBsB,EAAI,EAAGA,EAAIvB,EAAMwB,OAAQD,IAC9B0C,EAAWxC,YAAYzB,EAAMuB,GAEjC,OAAOJ,MAGX,QAAS8D,GAAQxE,EAAKyE,GAClB,GAAIC,GAAanD,EAAc,MAAOkD,EAWtC,OAVApF,GAAOsF,IAAID,GACPE,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,WACRC,QAAS,KAEblF,EAAIgB,YAAY0D,GACTA,EAMX,QAASS,GAAOvF,GAIZ,MAHIA,IAAQA,EAAK4D,YACb5D,EAAK4D,WAAWV,YAAYlD,GAEzBc,KAGX,QAAS0E,GAAQxF,EAAMyF,GAEnB,MADAA,GAAQ7B,WAAW8B,aAAa1F,EAAMyF,GAC/B3E,KAGX,QAAS6E,GAAMvF,EAAKyE,GAChBA,EAASA,KACT,IAKIe,GALArE,EAAOT,KACPyC,EAAOsB,EAAOtB,KACdsC,EAAQhB,EAAOgB,MACfC,EAAOjB,EAAOiB,KACdC,EAAWlB,EAAOkB,SAElBC,EAAWlF,KAAKa,cAAc,OAC1BsE,UAAWpB,EAAOoB,WAAa,WAC/BJ,MAAOA,IAKXF,GAHWf,EAAQoB,GACfC,UAAW,iBAEPnF,KAAKa,cAAc,OACvBsE,UAAW,WAEfC,EAAWpF,KAAKwC,eAAeC,GAAQ,IACvCgC,EAAS,WACDK,IACAO,aAAaP,GACbA,EAAQ,MAERI,IACAzE,EAAKgE,OAAOS,GACZA,EAAW,OAGnBI,EAAS,SAASvB,GACVA,GAAUA,EAAOtB,MAAQyC,IACzBE,EAASG,UAAYxB,EAAOtB,MAGxCoC,GAAMvE,YAAY8E,GAClBF,EAAS5E,YAAYuE,GACrBvF,EAAIgB,YAAY4E,EAChB,IAAIM,GAAM,WACNf,IACIQ,GAAUA,IAMlB,OAJID,KACAF,EAAQW,WAAWD,EAAKR,KAIxBP,OAAQA,EACRa,OAAQA,GAIhB,QAASI,GAASxG,EAAMyG,GACpBA,EAAGzG,EACH,KAAK,GAAIkB,GAAI,EAAGwF,EAAM1G,EAAKW,WAAWQ,OAAQD,EAAIwF,EAAKxF,IACnDsF,EAASxG,EAAKW,WAAWO,GAAIuF,EAEjC,OAAO3F,MAGX,QAAS6F,GAAQ3G,GAEb,IAAK,GADD0D,GAAa1D,EAAK0D,WACbxC,EAAIlB,EAAK4G,SAASzF,OAAS,EAAGD,EAAI,EAAGA,IAC1C,GAAIA,EAAI,EAAG,CACP,GAAIkC,GAAQpD,EAAK4G,SAAS1F,EAC1BlB,GAAKyE,aAAarB,EAAOM,IAKrC,QAASmD,GAAQ7G,EAAM8G,GACftH,EAAMwB,SAAS8F,KACfA,EAAchG,KAAKwB,eAAewE,GAAapD,YAEnD1D,EAAK4D,WAAWa,aAAaqC,EAAa9G,GAC1C8G,EAAY1F,YAAYpB,GAG5B,QAAS+G,GAAa/G,EAAM8G,GACxB,GAAInG,GAAaqC,EAAMjD,KAAKC,EAAKW,WACjCX,GAAKoB,YAAY0F,EACjB,KAAK,GAAI5F,GAAI,EAAGA,EAAIP,EAAWQ,OAAQD,IACnC4F,EAAY1F,YAAYT,EAAWO,GAEvC,OAAOJ,MAGX,QAASkG,GAAOhH,GACZ,GAAWmC,GAASnC,EAAK4D,UACzB,IAAIzB,EAAQ,CACR,GAAIrB,KAAKgD,MAAM3B,EAAOyB,YAAa,MACnCzB,GAAOyB,WAAWa,aAAazE,EAAMmC,IAI7C,QAAS8E,KACL,MAAOA,GArWX,GAAIzF,KAAS0F,UAAUC,UAAUC,MAAM,eAAiBF,UAAUC,UAAUC,MAAM,SAC9ExE,EAAa,qBACbJ,EAAc,6BACd6E,EAAM3F,SAASC,cAAc,OAC7B2F,EAAQ5F,SAASC,cAAc,SAC/B4F,EAAY7F,SAASC,cAAc,SACnC6F,EAAW9F,SAASC,cAAc,MAClCkB,GACI4E,GAAMF,EACNG,MAASJ,EACTK,MAASL,EACTM,MAASN,EACTO,GAAML,EACNM,GAAMN,EACNO,IAAKV,GAGTvH,EAAMkI,MAAMC,UAAUnI,IACtBkD,EAAQgF,MAAMC,UAAUjF,KAyY5B,OAnDAxD,GAAM4C,MAAM6E,GACR5F,MAAOA,EACPZ,SAAUA,EAEVkB,cAAeA,EAEfW,eAAgBA,EAEhBa,SAAUA,EAEVG,eAAgBA,EAEhBE,IAAKA,EAELzC,MAAOA,EAEPH,KAAMA,EAENyC,UAAWA,EAEXS,MAAOA,EAEPE,SAAUA,EAEVE,YAAcA,EAEdG,MAAOA,EAEPK,OAAQA,EAERC,QAASA,EAETtC,OAAQA,EAERkD,OAAQA,EAERC,QAASA,EAETG,MAAOA,EAEPa,SAAUA,EAEVG,QAASA,EAETE,QAASA,EAETE,aAAcA,EAEdC,OAAQA,IAGLzH,EAAQ0H,MAAQA","file":"../noder.js","sourcesContent":["define([\n    \"./skylark\",\n    \"./langx\",\n    \"./styler\"\n], function(skylark, langx, styler) {\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n        div = document.createElement(\"div\"),\n        table = document.createElement('table'),\n        tableBody = document.createElement('tbody'),\n        tableRow = document.createElement('tr'),\n        containers = {\n            'tr': tableBody,\n            'tbody': table,\n            'thead': table,\n            'tfoot': table,\n            'td': tableRow,\n            'th': tableRow,\n            '*': div\n        },\n        rootNodeRE = /^(?:body|html)$/i,\n        map = Array.prototype.map,\n        slice = Array.prototype.slice;\n\n    function ensureNodes(nodes, copyByClone) {\n        if (!langx.isArrayLike(nodes)) {\n            nodes = [nodes];\n        }\n        if (copyByClone) {\n            nodes = map.call(nodes, function(node) {\n                return node.cloneNode(true);\n            });\n        }\n        return langx.flatten(nodes);\n    }\n\n    function nodeName(elm, chkName) {\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\n        if (chkName !== undefined) {\n            return name === chkName.toLowerCase();\n        }\n        return name;\n    };\n\n    function contents(elm) {\n        if (nodeName(elm, \"iframe\")) {\n            return elm.contentDocument;\n        }\n        return elm.childNodes;\n    }\n\n    function html(node, html) {\n        if (html === undefined) {\n            return node.innerHTML;\n        } else {\n            this.empty(node);\n            html = html || \"\";\n            if (langx.isString(html) || langx.isNumber(html)) {\n                node.innerHTML = html;\n            } else if (langx.isArrayLike(html)) {\n                for (var i = 0; i < html.length; i++) {\n                    node.appendChild(html[i]);\n                }\n            } else {\n                node.appendChild(html);\n            }\n        }\n    }\n\n    function clone(node, deep) {\n        var self = this,\n            clone;\n\n        // TODO: Add feature detection here in the future\n        if (!isIE || node.nodeType !== 1 || deep) {\n            return node.cloneNode(deep);\n        }\n\n        // Make a HTML5 safe shallow copy\n        if (!deep) {\n            clone = document.createElement(node.nodeName);\n\n            // Copy attribs\n            each(self.getAttribs(node), function(attr) {\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\n            });\n\n            return clone;\n        }\n    }\n\n    function createElement(tag, props,parent) {\n        var node = document.createElement(tag);\n        if (props) {\n            langx.mixin(node, props);\n        }\n        if (parent) {\n            append(parent,node);\n        }\n        return node;\n    }\n\n    function createFragment(html) {\n        // A special case optimization for a single tag\n        html = langx.trim(html);\n        if (singleTagRE.test(html)) {\n            return [createElement(RegExp.$1)];\n        }\n\n        var name = fragmentRE.test(html) && RegExp.$1\n        if (!(name in containers)) {\n            name = \"*\"\n        }\n        var container = containers[name];\n        container.innerHTML = \"\" + html;\n        dom = slice.call(container.childNodes);\n\n        dom.forEach(function(node) {\n            container.removeChild(node);\n        })\n\n        return dom;\n    }\n\n    function contains(node, child) {\n        return isChildOf(child, node);\n    }\n\n    function createTextNode(text) {\n        return document.createTextNode(text);\n    }\n\n    function doc() {\n        return document;\n    }\n\n    function empty(node) {\n        while (node.hasChildNodes()) {\n            var child = node.firstChild;\n            node.removeChild(child);\n        }\n        return this;\n    }\n\n    function isChildOf(node, parent,directly) {\n        if (directly) {\n            return node.parentNode === parent;\n        }\n        if (document.documentElement.contains) {\n            return parent.contains(node);\n        }\n        while (node) {\n            if (parent === node) {\n                return true;\n            }\n\n            node = node.parentNode;\n        }\n\n        return false;\n    }\n\n    function isDoc(node) {\n        return node != null && node.nodeType == node.DOCUMENT_NODE\n    }\n\n    function ownerDoc(elm) {\n        if (!elm) {\n            return document;\n        }\n\n        if (elm.nodeType == 9) {\n            return elm;\n        }\n\n        return elm.ownerDocument;\n    }\n\n    function ownerWindow(elm) {\n        var doc = ownerDoc(elm);\n        return  doc.defaultView || doc.parentWindow;\n    } \n\n    function after(node, placing, copyByClone) {\n        var refNode = node,\n            parent = refNode.parentNode;\n        if (parent) {\n            var nodes = ensureNodes(placing, copyByClone),\n                refNode = refNode.nextSibling;\n\n            for (var i = 0; i < nodes.length; i++) {\n                if (refNode) {\n                    parent.insertBefore(nodes[i], refNode);\n                } else {\n                    parent.appendChild(nodes[i]);\n                }\n            }\n        }\n        return this;\n    }\n\n    function before(node, placing, copyByClone) {\n        var refNode = node,\n            parent = refNode.parentNode;\n        if (parent) {\n            var nodes = ensureNodes(placing, copyByClone);\n            for (var i = 0; i < nodes.length; i++) {\n                parent.insertBefore(nodes[i], refNode);\n            }\n        }\n        return this;\n    }\n\n    function prepend(node, placing, copyByClone) {\n        var parentNode = node,\n            refNode = parentNode.firstChild,\n            nodes = ensureNodes(placing, copyByClone);\n        for (var i = 0; i < nodes.length; i++) {\n            if (refNode) {\n                parentNode.insertBefore(nodes[i], refNode);\n            } else {\n                parentNode.appendChild(nodes[i]);\n            }\n        }\n        return this;\n    }\n\n    function append(node, placing, copyByClone) {\n        var parentNode = node,\n            nodes = ensureNodes(placing, copyByClone);\n        for (var i = 0; i < nodes.length; i++) {\n            parentNode.appendChild(nodes[i]);\n        }\n        return this;\n    }\n\n    function overlay(elm, params) {\n        var overlayDiv = createElement(\"div\", params);\n        styler.css(overlayDiv, {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            zIndex: 0x7FFFFFFF,\n            opacity: 0.7\n        });\n        elm.appendChild(overlayDiv);\n        return overlayDiv;\n\n    }\n\n\n\n    function remove(node) {\n        if (node && node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n        return this;\n    }\n\n    function replace(node, oldNode) {\n        oldNode.parentNode.replaceChild(node, oldNode);\n        return this;\n    }\n\n    function throb(elm, params) {\n        params = params || {};\n        var self = this,\n            text = params.text,\n            style = params.style,\n            time = params.time,\n            callback = params.callback,\n            timer,\n            throbber = this.createElement(\"div\", {\n                className: params.className || \"throbber\",\n                style: style\n            }),\n            _overlay = overlay(throbber, {\n                className: 'overlay fade'\n            }),\n            throb = this.createElement(\"div\", {\n                className: \"throb\"\n            }),\n            textNode = this.createTextNode(text || \"\"),\n            remove = function() {\n                if (timer) {\n                    clearTimeout(timer);\n                    timer = null;\n                }\n                if (throbber) {\n                    self.remove(throbber);\n                    throbber = null;\n                }\n            },\n            update = function(params) {\n                if (params && params.text && throbber) {\n                    textNode.nodeValue = params.text;\n                }\n            };\n        throb.appendChild(textNode);\n        throbber.appendChild(throb);\n        elm.appendChild(throbber);\n        var end = function() {\n            remove();\n            if (callback) callback();\n        };\n        if (time) {\n            timer = setTimeout(end, time);\n        }\n\n        return {\n            remove: remove,\n            update: update\n        };\n    }\n\n    function traverse(node, fn) {\n        fn(node)\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\n            traverse(node.childNodes[i], fn);\n        }\n        return this;\n    }\n\n    function reverse(node) {\n        var firstChild = node.firstChild;\n        for (var i = node.children.length - 1; i > 0; i--) {\n            if (i > 0) {\n                var child = node.children[i];\n                node.insertBefore(child, firstChild);\n            }\n        }\n    }\n\n    function wrapper(node, wrapperNode) {\n        if (langx.isString(wrapperNode)) {\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\n        }\n        node.parentNode.insertBefore(wrapperNode, node);\n        wrapperNode.appendChild(node);\n    }\n\n    function wrapperInner(node, wrapperNode) {\n        var childNodes = slice.call(node.childNodes);\n        node.appendChild(wrapperNode);\n        for (var i = 0; i < childNodes.length; i++) {\n            wrapperNode.appendChild(childNodes[i]);\n        }\n        return this;\n    }\n\n    function unwrap(node) {\n        var child, parent = node.parentNode;\n        if (parent) {\n            if (this.isDoc(parent.parentNode)) return;\n            parent.parentNode.insertBefore(node, parent);\n        }\n    }\n\n    function noder() {\n        return noder;\n    }\n\n    langx.mixin(noder, {\n        clone: clone,\n        contents: contents,\n\n        createElement: createElement,\n\n        createFragment: createFragment,\n\n        contains: contains,\n\n        createTextNode: createTextNode,\n\n        doc: doc,\n\n        empty: empty,\n\n        html: html,\n\n        isChildOf: isChildOf,\n\n        isDoc: isDoc,\n\n        ownerDoc: ownerDoc,\n\n        ownerWindow : ownerWindow,\n\n        after: after,\n\n        before: before,\n\n        prepend: prepend,\n\n        append: append,\n\n        remove: remove,\n\n        replace: replace,\n\n        throb: throb,\n\n        traverse: traverse,\n\n        reverse: reverse,\n\n        wrapper: wrapper,\n\n        wrapperInner: wrapperInner,\n\n        unwrap: unwrap\n    });\n\n    return skylark.noder = noder;\n});\n"]}