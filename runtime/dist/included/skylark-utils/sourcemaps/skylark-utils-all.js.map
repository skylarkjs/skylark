{"version":3,"sources":["skylark-utils-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","arguments","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","clone","src","checkCloneMethod","copy","isArray","isPlainObject","key","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","obj","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","inArray","indexOf","object","constructor","Array","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isObject","isWindow","Object","getPrototypeOf","prototype","isDefined","Node","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","makeArray","offset","startWith","concat","slice","elements","values","nextTick","requestAnimationFrame","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","source","deep","safe","_parseMixinArgs","shift","sources","mixin","path","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","keys","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","createClass","extendClass","ctor","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","parent","init","klassName","Function","create","__proto__","partial","inherit","delegate","TMP","Deferred","promise","Promise","resolve","reject","_resolve","_reject","bind","reason","then","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","progress","err","d","data","immediate","deepEq","Evented","on","events","selector","ctx","one","self","_hub","trigger","eventName","listeners","len","reCompact","listener","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","SymbolProto","document","createElement","Symbol","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","class2type","Stateful","attributes","attrs","cid","cidPrefix","collection","defaults","set","changed","validationError","idAttribute","toJSON","get","attr","has","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","error","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","RegExp","cssPropName","support","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","names","cls","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","contents","contentDocument","childNodes","html","innerHTML","empty","isIE","getAttribs","setAttrib","getAttrib","tag","setAttribute","append","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","placing","refNode","nextSibling","insertBefore","prepend","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","update","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","index","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","rootIsSelector","matches","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","cache","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","checkbox","checked","disabled","enabled","focus","activeElement","tabindex","gt","sel","hidden","lt","not","radio","selected","visible","offsetWidth","isArrayFilter","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","sort","createProxy","originalEvent","ignoreProperties","$this","handler","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","l","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","delete","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","handleElm","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","_params","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","localStream","isSupported","video","audio","stream","createObjectURL","localMediaStream","onloadedmetadata","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","Blob","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","mimeToDataType","mime","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","ajaxSuccess","xhr","settings","status","success","ajaxComplete","ajaxError","ajax","ajaxSettings","crossDomain","abortTimeout","dataType","accepts","headers","setHeader","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseText","eval","responseXML","blankRE","statusText","open","username","password","send","parseArguments","post","getJSON","http","beforeSend","global","XMLHttpRequest","script","json","xml","gtJSON","images","elementNodeTypes","1","9","11","ImagesLoaded","elem","onAlways","getImages","addElementImages","addImage","background","addElementBackgroundImages","childImgs","img","reURL","exec","backgroundImage","addBackground","loadingImage","LoadingImage","Background","onProgress","_this","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","Image","handleEvent","method","unbindEvents","loaded","_place","choices","layoutNode","aroundNodeCoords","win","view","best","some","choice","corner","spaceAvailable","w","L","R","M","h","T","B","res","aroundCorner","bb","startXpos","min","startYpos","startX","startY","endX","endY","at","corners","padding","c","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","wrapper_map","func","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","el","toArray","is","excludes","parents","parentsUntil","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","Dimension","m","margin","cb","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","cookies","sKey","unescape","cookie","escape","list","expires","domain","secure","sExpires","Number","vEnd","Infinity","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","f","exportToHost","request","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","defaultVal","getItem","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","defineProperty","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","_shouldHandle","now","_DBLCLICK","_dispatchEvent","_reset","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","widget","delegateEventSplitter","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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CA,OACA,OACA,OACA,aACA,aACA,OACA,OACA6c,GAGAnI,EAAA1U,UACA,YACA,aACA4qB,GAIAlW,EAAA1U,UACA,MACA,KACA,MACA,YACA,WACAilB,GAGAvQ,EAAA1U,UACA,SACA,YACAyuB,GAGA/Z,EAAA1U,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAub,GAEA7G,EAAAgB,KAAA,SAAA1T,GACA,MAAA,SAAAA,EACA9M,KAAA0f,KAEA1f,KAAA0f,KAAAY,WAAAxT,IAKA0S,EAAA1U,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACA+wB,GAIArc,EAAA1U,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAiiB,GAGAvN,EAAA1U,UACA,WACA4qB,GAIAlW,EAAA1U,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAmQ,GAGAuE,EAAA1U,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAkK,GAEA1V,EAAAkgB,KAAAA,IAGArhB,EAAA,wBACA,YACA,UACA,UACA,WACA,SACA,YACA,WACA,SAAAmB,EAAAkK,EAAAyR,EAAAjG,EAAA+X,EAAAgD,EAAA1P,GAIA,QAAA+2B,KACA,MAAAA,GAHA,GAAAC,GAAA,iBAMAC,EAAA9tC,EAAAmD,QAAA9B,SACAN,KAAA,SAAAy/B,EAAApgC,GACAJ,EAAA5E,WAAAolC,KACApgC,EAAAogC,EACAA,EAAA,MAEAhqC,KAAAgqC,GAAAA,EACApgC,GACAJ,EAAAxB,MAAAhI,KAAA4J,GAEA5J,KAAAwP,MACAxP,KAAAwP,IAAAhG,EAAAH,SAAA,MAEArJ,KAAAu3C,kBAIA/1B,QAAA,MAIA5C,EAAA,SAAA9R,GACA,MAAA9M,MAAAw3C,IAAAh3B,KAAA1T,IAMA2qC,OAAA,WACA,MAAAz3C,OAKAE,OAAA,WAGA,MAFAF,MAAA03C,iBACA13C,KAAAwO,aACAxO,MAMA03C,eAAA,WACA13C,KAAAw3C,IAAAt3C,UAKAy3C,WAAA,SAAAtjC,GAIA,MAHArU,MAAA43C,mBACA53C,KAAA63C,YAAAxjC,GACArU,KAAA83C,iBACA93C,MAQA63C,YAAA,SAAA7N,GACAhqC,KAAAw3C,IAAAJ,EAAAx4B,EAAAorB,GACAhqC,KAAAgqC,GAAAhqC,KAAAw3C,IAAA,IAgBAM,eAAA,SAAAjrC,GAEA,GADAA,IAAAA,EAAArD,EAAAlG,OAAAtD,KAAA,YACA6M,EAAA,MAAA7M,KACAA,MAAA43C,kBACA,KAAA,GAAAt2C,KAAAuL,GAAA,CACA,GAAA+2B,GAAA/2B,EAAAvL,EAEA,IADAkI,EAAA3F,WAAA+/B,KAAAA,EAAA5jC,KAAA4jC,IACAA,EAAA,CACA,GAAAn7B,GAAAnH,EAAAmH,MAAA4uC,EACAr3C,MAAA8K,SAAArC,EAAA,GAAAA,EAAA,GAAAe,EAAA1C,MAAA88B,EAAA5jC,QAEA,MAAAA,OAMA8K,SAAA,SAAAsC,EAAAN,EAAAU,GAEA,MADAxN,MAAAw3C,IAAA5qC,GAAAQ,EAAA,kBAAApN,KAAAkJ,IAAA4D,EAAAU,GACAxN,MAMA43C,iBAAA,WAEA,MADA53C,MAAAw3C,KAAAx3C,KAAAw3C,IAAAppC,IAAA,kBAAApO,KAAAkJ,KACAlJ,MAKA+3C,WAAA,SAAA3qC,EAAAN,EAAAU,GAEA,MADAxN,MAAAw3C,IAAAppC,IAAAhB,EAAA,kBAAApN,KAAAkJ,IAAA4D,EAAAU,GACAxN,MAKAg4C,eAAA,SAAAx2B,EAAAjS,GACA,MAAA0L,GAAAtM,cAAA6S,EAAAjS,IAOAgoC,eAAA,WACA,GAAAv3C,KAAAgqC,GAOAhqC,KAAA23C,WAAAnuC,EAAAlG,OAAAtD,KAAA,WAPA,CACA,GAAAuP,GAAA/F,EAAAxB,SAAAwB,EAAAlG,OAAAtD,KAAA,cACAA,MAAAtB,KAAA6Q,EAAA7Q,GAAA8K,EAAAlG,OAAAtD,KAAA,OACAA,KAAA+O,YAAAQ,EAAA,SAAA/F,EAAAlG,OAAAtD,KAAA,cACAA,KAAA23C,WAAA33C,KAAAg4C,eAAAxuC,EAAAlG,OAAAtD,KAAA,WAAAuP,IACAvP,KAAAi4C,eAAA1oC,KAQA0oC,eAAA,SAAA3oC,GACAtP,KAAAw3C,IAAAtnC,KAAAZ,KAYA,OAPA9F,GAAAxB,MAAAovC,GACAx4B,EAAAyB,EAEAi3B,OAAAA,IAIAh4C,EAAA83C,OAAAA,IAGAj5C,EAAA,sBACA,YACA,YACA,QACA,UACA,QACA,YACA,YACA,UACA,WACA,OACA,SACA,SACA,WACA,UACA,UACA,UACA,aACA,aACA,WACA,WACA,UACA,SACA,YACA,SAAAmB,GACA,MAAAA,KAGAnB,EAAA,iBAAA,sBAAA,SAAA+5C,GAAA,MAAAA,MA8EEl4C","file":"../skylark-utils-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter;\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n              proto[name] = typeof props[name] == \"function\" && !props[name]._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                      (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"ctor._constructor.apply(inst, arguments);\" +\r\n                    \"return inst;\" +\r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, options) {\r\n                    return createClass(props, this, options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    var Deferred = function() {\r\n        this.promise = new Promise(function(resolve, reject) {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        }.bind(this));\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            e.target = this;\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    \r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  var eq, deepEq;\r\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n  eq = function(a, b, aStack, bStack) {\r\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n    // `null` or `undefined` only equal to itself (strict comparison).\r\n    if (a == null || b == null) return false;\r\n    // `NaN`s are equivalent, but non-reflexive.\r\n    if (a !== a) return b !== b;\r\n    // Exhaust primitive checks\r\n    var type = typeof a;\r\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n    return deepEq(a, b, aStack, bStack);\r\n  };\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  deepEq = function(a, b, aStack, bStack) {\r\n    // Unwrap any wrapped objects.\r\n    //if (a instanceof _) a = a._wrapped;\r\n    //if (b instanceof _) b = b._wrapped;\r\n    // Compare `[[Class]]` names.\r\n    var className = toString.call(a);\r\n    if (className !== toString.call(b)) return false;\r\n    switch (className) {\r\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n      case '[object RegExp]':\r\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n      case '[object String]':\r\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n        // equivalent to `new String(\"5\")`.\r\n        return '' + a === '' + b;\r\n      case '[object Number]':\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        // Object(NaN) is equivalent to NaN.\r\n        if (+a !== +a) return +b !== +b;\r\n        // An `egal` comparison is performed for other numeric values.\r\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n      case '[object Date]':\r\n      case '[object Boolean]':\r\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n        // millisecond representations. Note that invalid dates with millisecond representations\r\n        // of `NaN` are not equivalent.\r\n        return +a === +b;\r\n      case '[object Symbol]':\r\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n    }\r\n\r\n    var areArrays = className === '[object Array]';\r\n    if (!areArrays) {\r\n      if (typeof a != 'object' || typeof b != 'object') return false;\r\n\r\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n      // from different frames are.\r\n      var aCtor = a.constructor, bCtor = b.constructor;\r\n      if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n        return false;\r\n      }\r\n    }\r\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n    // Initializing stack of traversed objects.\r\n    // It's done here since we only need them for objects and arrays comparison.\r\n    aStack = aStack || [];\r\n    bStack = bStack || [];\r\n    var length = aStack.length;\r\n    while (length--) {\r\n      // Linear search. Performance is inversely proportional to the number of\r\n      // unique nested structures.\r\n      if (aStack[length] === a) return bStack[length] === b;\r\n    }\r\n\r\n    // Add the first object to the stack of traversed objects.\r\n    aStack.push(a);\r\n    bStack.push(b);\r\n\r\n    // Recursively compare objects and arrays.\r\n    if (areArrays) {\r\n      // Compare array lengths to determine if a deep comparison is necessary.\r\n      length = a.length;\r\n      if (length !== b.length) return false;\r\n      // Deep compare the contents, ignoring non-numeric properties.\r\n      while (length--) {\r\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n      }\r\n    } else {\r\n      // Deep compare objects.\r\n      var keys = Object.keys(a), key;\r\n      length = keys.length;\r\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n      if (Object.keys(b).length !== length) return false;\r\n      while (length--) {\r\n        // Deep compare each member\r\n        key = keys[length];\r\n        if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n      }\r\n    }\r\n    // Remove the first object from the stack of traversed objects.\r\n    aStack.pop();\r\n    bStack.pop();\r\n    return true;\r\n  };\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function nextTick(fn) {\r\n        requestAnimationFrame(fn);\r\n        return this;\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        nextTick: nextTick,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: window.URL || window.webkitURL\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        'checkbox': function(elm){\r\n            return elm.type === \"checkbox\";\r\n        },\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return matches(elm, sel);\r\n        },\r\n\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'radio': function(elm){\r\n            return elm.type === \"radio\";\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        local.pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n                ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                var listener = events[event];\r\n\r\n                if (listener) {\r\n                    listener.remove(fn, langx.mixin({\r\n                        ns: parsed.ns\r\n                    }, options));\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/http',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n],function(skylark, langx){\r\n    var Deferred = langx.Deferred,\r\n        blankRE = /^\\s*$/,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i;\r\n\r\n\r\n    function empty() {}\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest();\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: 'application/json',\r\n            xml: 'application/xml, text/xml',\r\n            html: 'text/html',\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    }\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) {\r\n            mime = mime.split(';', 2)[0];\r\n        }\r\n        return mime && (mime == 'text/html' ? 'html' :\r\n            mime == 'application/json' ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text';\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') {\r\n            return url;\r\n        }\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?');\r\n    }\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value);\r\n            if (scope) {\r\n                key = traditional ? scope :\r\n                        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']' ;\r\n            }\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) {\r\n                params.add(value.name, value.value);\r\n            // recurse into nested objects\r\n            } else if (type == \"array\" || (!traditional && type == \"object\")) {\r\n                serialize(params, value, traditional, key);\r\n            } else {\r\n                params.add(key, value);\r\n            }\r\n        })\r\n    }    \r\n\r\n    function param(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) {\r\n                value = value();\r\n            }\r\n            if (value == null) {\r\n                value = \"\";\r\n            }\r\n            this.push(escape(key) + '=' + escape(value));\r\n        }\r\n        \r\n        serialize(params, obj, traditional);\r\n\r\n        return params.join('&').replace(/%20/g, '+')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && !langx.isString(options.data)) {\r\n            options.data = $.param(options.data, options.traditional)\r\n        }\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n            options.url = appendQuery(options.url, options.data);\r\n            options.data = undefined;\r\n        }\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        //if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        //triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        //if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        //triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        //triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        //ajaxStop(settings)\r\n    }    \r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options),\r\n            deferred = new Deferred();\r\n\r\n        langx.safeMixin(settings,ajaxSettings);\r\n\r\n        //ajaxStart(settings)\r\n        if (!settings.crossDomain) {\r\n        //    settings.crossDomain = !langx.isSameOrigin(settings.url);\r\n        }\r\n\r\n        serializeData(settings);\r\n        var dataType = settings.dataType;\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout;\r\n\r\n        //if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) {\r\n            setHeader('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET')) {\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n        }\r\n\r\n        if (settings.headers) {\r\n            for (name in settings.headers) {\r\n                setHeader(name, settings.headers[name]);\r\n            }    \r\n        }\r\n        xhr.setRequestHeader = setHeader;\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script') {\r\n                            (1, eval)(result);\r\n                        } else if (dataType == 'xml') {\r\n                            result = xhr.responseXML\r\n                        } else if (dataType == 'json') {\r\n                            result = blankRE.test(result) ? null : JSON.parse(result);\r\n                        }\r\n                    } catch (e) { \r\n                        error = e \r\n                    }\r\n\r\n                    if (error) {\r\n                        ajaxError(error, 'parsererror', xhr, settings, deferred);\r\n                    } else {\r\n                        ajaxSuccess(result, xhr, settings, deferred);\r\n                    }\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred);\r\n                }\r\n            }\r\n        }\r\n\r\n        /*\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n        */\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) {\r\n            nativeSetHeader.apply(xhr, headers[name]);\r\n        }\r\n\r\n        if (settings.timeout > 0) {\r\n            abortTimeout = setTimeout(function() {\r\n                xhr.onreadystatechange = empty;\r\n                xhr.abort();\r\n                ajaxError(null, 'timeout', xhr, settings, deferred);\r\n            }, settings.timeout);\r\n        }\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr;\r\n    }\r\n\r\n\r\n    function get( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    function post( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.type = 'POST';\r\n        return ajax(options);\r\n    }\r\n\r\n    function getJSON( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.dataType = 'json';\r\n        return ajax(options);\r\n    }    \r\n\r\n\r\n    function http(){\r\n      return http;\r\n    }\r\n\r\n    langx.mixin(http, {\r\n        ajax: ajax,\r\n\r\n        get: get,\r\n        \r\n        gtJSON: getJSON,\r\n\r\n        post: post\r\n\r\n    });\r\n\r\n    return skylark.http = http;\r\n});\r\n\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n  /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // coerce ImagesLoaded() without new, to be new ImagesLoaded()\r\n      if ( !( this instanceof ImagesLoaded ) ) {\r\n        return new ImagesLoaded( elem, options, onAlways );\r\n      }\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new Background( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger( eventName);\r\n      this.trigger( 'always');\r\n\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n\r\n    // ----- events ----- //\r\n\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- Background -------------------------- //\r\n  var Background = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n\r\n    function images() {\r\n        return images;\r\n    }\r\n\r\n    langx.mixin(images, {\r\n      loaded : ImagesLoaded\r\n    });\r\n\r\n    return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                var l = originalPos.left + e.deltaX,\r\n                    t = originalPos.top + e.deltaY;\r\n                if (constraints) {\r\n\r\n                    if (l < constraints.minX) {\r\n                        l = constraints.minX;\r\n                    }\r\n\r\n                    if (l > constraints.maxX) {\r\n                        l = constraints.maxX;\r\n                    }\r\n\r\n                    if (t < constraints.minY) {\r\n                        t = constraints.minY;\r\n                    }\r\n\r\n                    if (t > constraints.maxY) {\r\n                        t = constraints.maxY;\r\n                    }\r\n                }\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom),\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widget',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    function widget() {\r\n        return widget;\r\n    }\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n        init :function(el,options) {\r\n            if (!langx.isHtmlNode(el)) {\r\n                options = el;\r\n                el = null;\r\n            }\r\n            this.el = el;\r\n            if (options) {\r\n                langx.mixin(this,options);\r\n            }\r\n            if (!this.cid) {\r\n                this.cid = langx.uniqueId('w');\r\n            }\r\n            this._ensureElement();\r\n        },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    }\r\n  \t});\r\n\r\n\r\n    langx.mixin(widget, {\r\n    \t$ : query,\r\n\r\n    \tWidget : Widget\r\n    });\r\n\r\n\r\n    return skylark.widget = widget;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./http\",\r\n    \"./images\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widget\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}