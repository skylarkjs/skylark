{"version":3,"sources":["skylark-spa-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","clone","src","copy","undefined","isArray","isPlainObject","key","debounce","fn","wait","timeout","later","arguments","clearTimeout","setTimeout","compact","array","filter","call","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","e","each","obj","callback","undef","this","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","inArray","indexOf","object","constructor","Array","isString","nodeName","isBoolean","isDocument","nodeType","DOCUMENT_NODE","type","isObject","isWindow","Object","getPrototypeOf","prototype","isDefined","isHtmlNode","Node","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","makeArray","offset","startWith","concat","slice","elements","values","nextTick","requestAnimationFrame","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","target","source","deep","safe","_parseMixinArgs","shift","sources","mixin","safeMixin","substitute","template","transform","thisObject","getObject","match","retVal","getValue","keys","_k","reverse","v","format","toString","uid","_uid","uniq","langx","createClass","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","superFn","tmp","overrided","ret","parent","_constructor","init","klassName","Function","create","__proto__","partial","inherit","delegate","TMP","Deferred","promise","Promise","resolve","reject","_resolve","_reject","bind","reason","then","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","progress","err","d","data","immediate","Evented","on","events","selector","ctx","one","self","_hub","trigger","CustomEvent","eventName","listeners","len","reCompact","listener","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","a","document","createElement","class2type","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","createEvent","current","_curCtx","dispatch","route","exit","path","_prevCtx","m","r","enter","force","previous","go","router","useHistoryApi","state","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","hash","noCache","finded","_cache","_routes","routeName","baseUrl","hub","homePath","_homePath","setting","settings","routes","Route","start","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","query","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","val","main","app","content","forceRefresh","_prepared","prepare","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","config","plugins","_plugins","_config","pluginName","_page","spa","page","baseURI","getConfig","promises0","promises1","lazy","promises2","run"],"mappings":"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","file":"../skylark-spa-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter;\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                proto[name] = typeof props[name] == \"function\" && !noOverrided && typeof _super[name] == \"function\" ?\r\n                    (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"ctor._constructor.apply(inst, arguments);\" +\r\n                    \"return inst;\" +\r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, options) {\r\n                    return createClass(props, this, options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n\r\n    function clone( /*anything*/ src) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    var Deferred = function() {\r\n        this.promise = new Promise(function(resolve, reject) {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        }.bind(this));\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item) > -1;\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !(obj.nodeName && obj.nodeName == \"#text\") && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function nextTick(fn) {\r\n        requestAnimationFrame(fn);\r\n        return this;\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        nextTick: nextTick,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: window.URL || window.webkitURL\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.5\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylark-router', ['skylark-router/router'], function (main) { return main; });\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylark-spa/main',[\r\n    \"skylark-langx/skylark\",\r\n    \"./spa\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-spa', ['skylark-spa/main'], function (main) { return main; });\n\n"]}