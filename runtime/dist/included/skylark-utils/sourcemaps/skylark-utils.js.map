{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","property","arguments","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","after","placing","refNode","parent","nextSibling","insertBefore","append","before","contents","contentDocument","childNodes","tag","setAttribute","createFragment","html","singleTagRE","test","$1","fragmentRE","containers","container","innerHTML","dom","slice","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","isWindow","_createStyleSheet","external","options","type","count","media","create","rel","async","head","sheetsById","createStyleSheet","sheetId","addSheetRules","deleteSheetRule","rule","sheet","deleteRuleFunc","rulesPropName","_rule","deleteRule","defaultSheetId","removeStyleSheet","insertRule","selector","index","insertSheetRule","addRules","rules","insertRuleFunc","toString","isAtRule","str","startsWith","json","adjust","parentName","depth","strNode","values","atFlg","SPACE","repeat","isArray","n","adjusted","getElementsByTagName","defaultSheet","removeRule","_insertRule","addRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","idx","$","disabled","enabled","eq","even","focus","activeElement","href","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","defer","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","space","tab","up","keys","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","dragHandle","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","e1","over","dropped","manager","eventName","handle","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","dropzone","droppedCallback","enterdCount","types","items","webkitGetAsEntry","getAsEntry","webentry","then","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","headers","contentRange","FormData","blob","uploadName","encodeURI","contentType","getUploadedBytes","jqXHR","range","getResponseHeader","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","context","currentLoaded","_progress","chunkSize","ajax","done","textStatus","progress","lengthComputable","total","resolveWith","fail","errorThrown","rejectWith","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","processData","Blob","webkitSlice","mozSlice","Xhr","request","url","_bitrateTimer","jqXhr","entry","path","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","evt","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","makeArray","unshift","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","func","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isObject","NodeList","compact","charAt","exec","wrapper_node_operation","argType","arg","object","get","toArray","is","isHtmlNode","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","watch","imgs","totalCount","successed","successedCount","failered","faileredCount","img","isLoaded","progressedCount","progressed","isCompleted","naturalWidth","addBackgroundImage","elm1","reURL","Image","childImgs","background","preload","urls","images","viewer","loadedCallback","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","models","methodMap","patch","read","sync","method","entity","defaults","emulateHTTP","emulateJSON","dataType","urlError","attrs","toJSON","_method","beforeSend","xhr","setRequestHeader","Entity","Stateful","isMatch","fetch","success","resp","serverAttrs","set","wrapError","save","validate","wait","_validate","isNew","destroy","stopListening","collection","idAttribute","encodeURIComponent","Collection","entities","comparator","_reset","silent","setOptions","merge","addOptions","array","at","min","tail","partial","initialize","singular","removed","_removeEntitys","changes","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","existing","hasChanged","cid","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","constructor","validationError","_onEntityEvent","prevId","previousAttributes","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","errorCallback","script","state","loadedCallbacks","errorCallbacks","startTime","callbacks","deleteJavaScript","cookies","sKey","unescape","cookie","list","expires","domain","secure","sExpires","Number","vEnd","Infinity","String","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","write","rmfile","readdir","getDirectory","dirEntry","results","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","move","moveTo","chdir","onchdir","fullPath","importFromHost","deferred","f","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","t","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","widgets","defineWidgetClass","delegateEventSplitter","Widget","uniqueId","_ensureElement","$el","render","_removeElement","unlistenTo","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n          return (\r\n            document.fullscreenElement ||\r\n            document.webkitFullscreenElement ||\r\n            document.mozFullScreenElement ||\r\n            document.msFullscreenElement\r\n          )\r\n        }\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body : function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen : fullScreen,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow : langx.isWindow,\r\n\r\n        offsetParent : offsetParent,\r\n        \r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, noder) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        marginSize : marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38        \r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys : keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.dragSource,\r\n             dragHandle : draggable.dragHandle\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.dragSource);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          dragHandle : draggable.dragHandle,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n        \r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        var e1 = eventer.create(\"dndStarted\",{\r\n          elm : e.elm,\r\n          dragSource : e.dragSource,\r\n          dragHandle : e.dragHandle,\r\n          ghost : e.ghost,\r\n          transfer : e.transfer\r\n        });\r\n\r\n        this.trigger(e1);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"dndEnded\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self.params = langx.clone(params);\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            var params = self.params;\r\n            if (params.handle) {\r\n              self.dragHandle = finder.closest(e.target,params.handle);\r\n              if (!self.dragHandle) {\r\n                return;\r\n              }\r\n            }\r\n            if (params.source) {\r\n                self.dragSource = finder.closest(e.target,params.source);\r\n            } else {\r\n                self.dragSource = self.elm;\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.attr(self.dragSource, \"draggable\", 'true');\r\n            } \r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              //datax.attr(self.dragSource, \"draggable\", 'false');\r\n              self.dragSource = null;\r\n              self.dragHandle = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.attr(self.dragSource, \"draggable\", 'false');\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"dndStarted\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"dndEnded\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector);\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !langx.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(el,options) {\r\n\t    \t//for supporting init(options,el)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // query delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widgets\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}