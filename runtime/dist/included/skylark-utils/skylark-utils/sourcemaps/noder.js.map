{"version":3,"sources":["noder.js"],"names":["define","skylark","langx","browser","styler","ensureNodes","nodes","copyByClone","isArrayLike","map","call","node","cloneNode","flatten","nodeName","elm","chkName","name","toLowerCase","undefined","after","placing","refNode","parent","parentNode","nextSibling","i","length","insertBefore","appendChild","this","append","before","contents","contentDocument","childNodes","createElement","tag","props","document","setAttribute","createFragment","html","trim","singleTagRE","test","RegExp","$1","fragmentRE","containers","container","innerHTML","dom","slice","forEach","removeChild","clone","deep","self","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","apply","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","requestFullScreen","fulledEl","isString","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","body","rootNodeRE","css","overlay","params","overlayDiv","position","top","left","width","height","zIndex","opacity","remove","e","console","warn","children","replace","oldNode","replaceChild","throb","timer","style","time","callback","throbber","className","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","match","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","Array","prototype","mixin","isWindow"],"mappings":"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","file":"../noder.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});"]}