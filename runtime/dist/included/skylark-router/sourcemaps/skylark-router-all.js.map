{"version":3,"sources":["skylark-router-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","arguments","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","clone","src","checkCloneMethod","copy","isArray","isPlainObject","key","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","obj","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","inArray","indexOf","object","constructor","Array","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isObject","isWindow","Object","getPrototypeOf","prototype","isDefined","Node","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","makeArray","offset","startWith","concat","slice","elements","values","nextTick","requestAnimationFrame","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","source","deep","safe","_parseMixinArgs","shift","sources","mixin","path","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","keys","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","createClass","extendClass","ctor","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","parent","init","klassName","Function","create","__proto__","partial","inherit","delegate","TMP","Deferred","promise","Promise","resolve","reject","_resolve","_reject","bind","reason","then","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","progress","err","d","data","immediate","deepEq","Evented","on","events","selector","ctx","one","self","_hub","trigger","eventName","listeners","len","reCompact","listener","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","SymbolProto","document","createElement","Symbol","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","class2type","Stateful","attributes","attrs","cid","cidPrefix","collection","defaults","set","changed","validationError","idAttribute","toJSON","get","attr","has","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","error","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","force","go","router","useHistoryApi","state","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","hash","noCache","finded","_cache","_routes","routeName","baseUrl","hub","homePath","_homePath","setting","settings","routes","Route","start","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","query","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","main"],"mappings":"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","file":"../skylark-router-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter;\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n              proto[name] = typeof props[name] == \"function\" && !props[name]._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                      (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"ctor._constructor.apply(inst, arguments);\" +\r\n                    \"return inst;\" +\r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, options) {\r\n                    return createClass(props, this, options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    var Deferred = function() {\r\n        this.promise = new Promise(function(resolve, reject) {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        }.bind(this));\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            e.target = this;\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    \r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  var eq, deepEq;\r\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n  eq = function(a, b, aStack, bStack) {\r\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n    // `null` or `undefined` only equal to itself (strict comparison).\r\n    if (a == null || b == null) return false;\r\n    // `NaN`s are equivalent, but non-reflexive.\r\n    if (a !== a) return b !== b;\r\n    // Exhaust primitive checks\r\n    var type = typeof a;\r\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n    return deepEq(a, b, aStack, bStack);\r\n  };\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  deepEq = function(a, b, aStack, bStack) {\r\n    // Unwrap any wrapped objects.\r\n    //if (a instanceof _) a = a._wrapped;\r\n    //if (b instanceof _) b = b._wrapped;\r\n    // Compare `[[Class]]` names.\r\n    var className = toString.call(a);\r\n    if (className !== toString.call(b)) return false;\r\n    switch (className) {\r\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n      case '[object RegExp]':\r\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n      case '[object String]':\r\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n        // equivalent to `new String(\"5\")`.\r\n        return '' + a === '' + b;\r\n      case '[object Number]':\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        // Object(NaN) is equivalent to NaN.\r\n        if (+a !== +a) return +b !== +b;\r\n        // An `egal` comparison is performed for other numeric values.\r\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n      case '[object Date]':\r\n      case '[object Boolean]':\r\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n        // millisecond representations. Note that invalid dates with millisecond representations\r\n        // of `NaN` are not equivalent.\r\n        return +a === +b;\r\n      case '[object Symbol]':\r\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n    }\r\n\r\n    var areArrays = className === '[object Array]';\r\n    if (!areArrays) {\r\n      if (typeof a != 'object' || typeof b != 'object') return false;\r\n\r\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n      // from different frames are.\r\n      var aCtor = a.constructor, bCtor = b.constructor;\r\n      if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n        return false;\r\n      }\r\n    }\r\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n    // Initializing stack of traversed objects.\r\n    // It's done here since we only need them for objects and arrays comparison.\r\n    aStack = aStack || [];\r\n    bStack = bStack || [];\r\n    var length = aStack.length;\r\n    while (length--) {\r\n      // Linear search. Performance is inversely proportional to the number of\r\n      // unique nested structures.\r\n      if (aStack[length] === a) return bStack[length] === b;\r\n    }\r\n\r\n    // Add the first object to the stack of traversed objects.\r\n    aStack.push(a);\r\n    bStack.push(b);\r\n\r\n    // Recursively compare objects and arrays.\r\n    if (areArrays) {\r\n      // Compare array lengths to determine if a deep comparison is necessary.\r\n      length = a.length;\r\n      if (length !== b.length) return false;\r\n      // Deep compare the contents, ignoring non-numeric properties.\r\n      while (length--) {\r\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n      }\r\n    } else {\r\n      // Deep compare objects.\r\n      var keys = Object.keys(a), key;\r\n      length = keys.length;\r\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n      if (Object.keys(b).length !== length) return false;\r\n      while (length--) {\r\n        // Deep compare each member\r\n        key = keys[length];\r\n        if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n      }\r\n    }\r\n    // Remove the first object from the stack of traversed objects.\r\n    aStack.pop();\r\n    bStack.pop();\r\n    return true;\r\n  };\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function nextTick(fn) {\r\n        requestAnimationFrame(fn);\r\n        return this;\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        nextTick: nextTick,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: window.URL || window.webkitURL\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylark-router/main',[\r\n    \"skylark-langx/skylark\",\r\n    \"./router\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-router', ['skylark-router/main'], function (main) { return main; });\n\n"]}