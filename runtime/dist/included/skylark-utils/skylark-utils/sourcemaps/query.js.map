{"version":3,"sources":["query.js"],"names":["define","skylark","langx","noder","datax","eventer","finder","geom","styler","fx","wrapper_map","func","context","self","this","params","slice","call","arguments","result","$","map","elem","idx","apply","concat","uniq","wrapper_selector","last","selector","querySelector","filter","wrapper_selector_until","util","undefined","wrapper_every_act","each","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","forEach","funcArg","wrapper_some_chk","some","wrapper_name_value","name","value","isPlainObject","isDefined","newValue","wrapper_value","isQ","Array","prototype","push","every","rquickExpr","isArrayLike","isString","isFunction","type","isArray","isObject","isWindow","isDocument","NodeList","compact","flatten","camelCase","dasherize","children","klass","klassName","init","match","nodes","node","props","doc","charAt","length","exec","createFragment","byId","ownerDoc","descendants","attr","query","wrapper_node_operation","html","argType","arg","object","ready","find","fn","mixin","el","i","get","toArray","size","remove","callback","not","element","matches","add","is","excludes","item","indexOf","has","contains","eq","first","closest","parents","ancestors","parentsUntil","parent","contents","empty","pluck","property","show","replaceWith","newContent","before","wrap","structure","dom","clone","parentNode","index","wrapAll","cloneNode","wrappingElement","append","wrapInner","unwrap","document","createTextNode","childNodes","textContent","hide","toggle","setting","css","prev","prevAll","previousSibling","next","nextAll","nextSiblings","siblings","text","removeAttr","prop","removeProp","data","removeData","val","offset","pageRect","style","hasClass","addClass","className","removeClass","toggleClass","scrollTop","scrollLeft","position","relativePosition","offsetParent","detach","width","height","dimension","Dimension","replace","m","toUpperCase","margin","cb","me","marginExtents","left","right","top","bottom","mb","innerWidth","innerHeight","traverse","after","prepend","insertAfter","insertBefore","appendTo","prependTo","on","off","trigger","split","event","one","animate","toogle","fadeTo","fadeIn","fadeOut","fadeToggle","end","prevObject","andSelf","ret","place","refNode","descendant","addContent","content","template","substitute","replaceClass","newClass","oldClass"],"mappings":"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","file":"../query.js","sourcesContent":["define([\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\",\n    \"./datax\",\n    \"./eventer\",\n    \"./finder\",\n    \"./geom\",\n    \"./styler\",\n    \"./fx\"\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\n    var some = Array.prototype.some,\n        push = Array.prototype.push,\n        every = Array.prototype.every,\n        concat = Array.prototype.concat,\n        slice = Array.prototype.slice,\n        map = Array.prototype.map,\n        filter = Array.prototype.filter,\n        forEach = Array.prototype.forEach,\n        isQ;\n\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\n\n    var funcArg = langx.funcArg,\n        isArrayLike = langx.isArrayLike,\n        isString = langx.isString,\n        uniq = langx.uniq,\n        isFunction = langx.isFunction;\n\n    var type = langx.type,\n        isArray = langx.isArray,\n\n        isWindow = langx.isWindow,\n\n        isDocument = langx.isDocument,\n\n        isObject = langx.isObject,\n\n        isPlainObject = langx.isPlainObject,\n\n        compact = langx.compact,\n\n        flatten = langx.flatten,\n\n        camelCase = langx.camelCase,\n\n        dasherize = langx.dasherize,\n        children = finder.children;\n\n    function wrapper_map(func, context) {\n        return function() {\n            var self = this,\n                params = slice.call(arguments);\n            var result = $.map(self, function(elem, idx) {\n                return func.apply(context, [elem].concat(params));\n            });\n            return $(uniq(result));\n        }\n    }\n\n    function wrapper_selector(func, context, last) {\n        return function(selector) {\n            var self = this,\n                params = slice.call(arguments);\n            var result = this.map(function(idx, elem) {\n                // if (elem.nodeType == 1) {\n                if (elem.querySelector) {\n                    return func.apply(context, last ? [elem] : [elem, selector]);\n                }\n            });\n            if (last && selector) {\n                return result.filter(selector);\n            } else {\n                return result;\n            }\n        }\n    }\n\n    function wrapper_selector_until(func, context, last) {\n        return function(util, selector) {\n            var self = this,\n                params = slice.call(arguments);\n            if (selector === undefined) {\n                selector = util;\n                util = undefined;\n            }\n            var result = this.map(function(idx, elem) {\n                // if (elem.nodeType == 1) {\n                if (elem.querySelector) {\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\n                }\n            });\n            if (last && selector) {\n                return result.filter(selector);\n            } else {\n                return result;\n            }\n        }\n    }\n\n\n    function wrapper_every_act(func, context) {\n        return function() {\n            var self = this,\n                params = slice.call(arguments);\n            this.each(function(idx) {\n                func.apply(context, [this].concat(params));\n            });\n            return self;\n        }\n    }\n\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\n        return function(arg1) {\n            var self = this,\n                params = slice.call(arguments);\n            forEach.call(self, function(elem, idx) {\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\n            });\n            return self;\n        }\n    }\n\n    function wrapper_some_chk(func, context) {\n        return function() {\n            var self = this,\n                params = slice.call(arguments);\n            return some.call(self, function(elem) {\n                return func.apply(context, [elem].concat(params));\n            });\n        }\n    }\n\n    function wrapper_name_value(func, context, oldValueFunc) {\n        return function(name, value) {\n            var self = this,\n                params = slice.call(arguments);\n\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\n                forEach.call(self, function(elem, idx) {\n                    var newValue;\n                    if (oldValueFunc) {\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\n                    } else {\n                        newValue = value\n                    }\n                    func.apply(context, [elem].concat(params));\n                });\n                return self;\n            } else {\n                if (self[0]) {\n                    return func.apply(context, [self[0], name]);\n                }\n            }\n\n        }\n    }\n\n    function wrapper_value(func, context, oldValueFunc) {\n        return function(value) {\n            var self = this;\n\n            if (langx.isDefined(value)) {\n                forEach.call(self, function(elem, idx) {\n                    var newValue;\n                    if (oldValueFunc) {\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\n                    } else {\n                        newValue = value\n                    }\n                    func.apply(context, [elem, newValue]);\n                });\n                return self;\n            } else {\n                if (self[0]) {\n                    return func.apply(context, [self[0]]);\n                }\n            }\n\n        }\n    }\n\n    var NodeList = langx.klass({\n        klassName: \"SkNodeList\",\n        init: function(selector, context) {\n            var self = this,\n                match, nodes, node, props;\n\n            if (selector) {\n                self.context = context = context || noder.doc();\n\n                if (isString(selector)) {\n                    // a html string or a css selector is expected\n                    self.selector = selector;\n\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\n                        match = [null, selector, null];\n                    } else {\n                        match = rquickExpr.exec(selector);\n                    }\n\n                    if (match) {\n                        if (match[1]) {\n                            // if selector is html\n                            nodes = noder.createFragment(selector);\n\n                            if (langx.isPlainObject(context)) {\n                                props = context;\n                            }\n\n                        } else {\n                            node = finder.byId(match[2], noder.ownerDoc(context));\n\n                            if (node) {\n                                // if selector is id\n                                nodes = [node];\n                            }\n\n                        }\n                    } else {\n                        // if selector is css selector\n                        nodes = finder.descendants(context, selector);\n                    }\n                } else {\n                    if (isArray(selector)) {\n                        // a dom node array is expected\n                        nodes = selector;\n                    } else {\n                        // a dom node is expected\n                        nodes = [selector];\n                    }\n                    //self.add(selector, false);\n                }\n            }\n\n\n            if (nodes) {\n\n                push.apply(self, nodes);\n\n                if (props) {\n                    self.attr(props);\n                }\n            }\n\n            return self;\n        }\n    }, Array);\n\n    var query = (function() {\n        isQ = function(object) {\n            return object instanceof NodeList;\n        }\n        init = function(selector, context) {\n            return new NodeList(selector, context);\n        }\n\n        var $ = function(selector, context) {\n            if (isFunction(selector)) {\n                eventer.ready(function() {\n                    selector($);\n                });\n            } else if (isQ(selector)) {\n                return selector;\n            } else {\n                if (context && isQ(context) && isString(selector)) {\n                    return context.find(selector);\n                }\n                return init(selector, context);\n            }\n        };\n\n        $.fn = NodeList.prototype;\n        langx.mixin($.fn, {\n            // `map` and `slice` in the jQuery API work differently\n            // from their array counterparts\n\n            map: function(fn) {\n                return $(uniq(langx.map(this, function(el, i) {\n                    return fn.call(el, i, el)\n                })));\n            },\n\n            slice: function() {\n                return $(slice.apply(this, arguments))\n            },\n\n            get: function(idx) {\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\n            },\n\n            toArray: function() {\n                return slice.call(this);\n            },\n\n            size: function() {\n                return this.length\n            },\n\n            remove: wrapper_every_act(noder.remove, noder),\n\n            each: function(callback) {\n                langx.each(this, callback);\n                return this;\n            },\n\n            filter: function(selector) {\n                if (isFunction(selector)) return this.not(this.not(selector))\n                return $(filter.call(this, function(element) {\n                    return finder.matches(element, selector)\n                }))\n            },\n\n            add: function(selector, context) {\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\n            },\n\n            is: function(selector) {\n                return this.length > 0 && finder.matches(this[0], selector)\n            },\n\n            not: function(selector) {\n                var nodes = []\n                if (isFunction(selector) && selector.call !== undefined)\n                    this.each(function(idx) {\n                        if (!selector.call(this, idx)) nodes.push(this)\n                    })\n                else {\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\n                    this.forEach(function(el) {\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\n                    })\n                }\n                return $(nodes)\n            },\n\n            has: function(selector) {\n                return this.filter(function() {\n                    return isObject(selector) ?\n                        noder.contains(this, selector) :\n                        $(this).find(selector).size()\n                })\n            },\n\n            eq: function(idx) {\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\n            },\n\n            first: function() {\n                return this.eq(0);\n            },\n\n            last: function() {\n                return this.eq(-1);\n            },\n\n            find: wrapper_selector(finder.descendants, finder),\n\n            closest: wrapper_selector(finder.closest, finder),\n            /*\n                        closest: function(selector, context) {\n                            var node = this[0],\n                                collection = false\n                            if (typeof selector == 'object') collection = $(selector)\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\n                                node = node !== context && !isDocument(node) && node.parentNode\n                            return $(node)\n                        },\n            */\n\n\n            parents: wrapper_selector(finder.ancestors, finder),\n\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\n\n\n            parent: wrapper_selector(finder.parent, finder),\n\n            children: wrapper_selector(finder.children, finder),\n\n            contents: wrapper_map(noder.contents, noder),\n\n            empty: wrapper_every_act(noder.empty, noder),\n\n            // `pluck` is borrowed from Prototype.js\n            pluck: function(property) {\n                return langx.map(this, function(el) {\n                    return el[property]\n                })\n            },\n\n            show: wrapper_every_act(fx.show, fx),\n\n            replaceWith: function(newContent) {\n                return this.before(newContent).remove();\n            },\n\n            wrap: function(structure) {\n                var func = isFunction(structure)\n                if (this[0] && !func)\n                    var dom = $(structure).get(0),\n                        clone = dom.parentNode || this.length > 1\n\n                return this.each(function(index) {\n                    $(this).wrapAll(\n                        func ? structure.call(this, index) :\n                        clone ? dom.cloneNode(true) : dom\n                    )\n                })\n            },\n\n            wrapAll: function(wrappingElement) {\n                if (this[0]) {\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\n                    var children;\n                    // drill down to the inmost element\n                    while ((children = wrappingElement.children()).length) {\n                        wrappingElement = children.first();\n                    }\n                    $(wrappingElement).append(this);\n                }\n                return this\n            },\n\n            wrapInner: function(wrappingElement) {\n                var func = isFunction(wrappingElement)\n                return this.each(function(index) {\n                    var self = $(this),\n                        contents = self.contents(),\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\n                })\n            },\n\n            unwrap: function(selector) {\n                if (this.parent().children().length === 0) {\n                    // remove dom without text\n                    this.parent(selector).not(\"body\").each(function() {\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\n                    });\n                } else {\n                    this.parent().each(function() {\n                        $(this).replaceWith($(this).children())\n                    });\n                }\n                return this\n            },\n\n            clone: function() {\n                return this.map(function() {\n                    return this.cloneNode(true)\n                })\n            },\n\n            hide: wrapper_every_act(fx.hide, fx),\n\n            toggle: function(setting) {\n                return this.each(function() {\n                    var el = $(this);\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\n                })\n            },\n\n            prev: function(selector) {\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\n            },\n\n            prevAll: wrapper_selector(finder.previousSibling, finder),\n\n            next: function(selector) {\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\n            },\n\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\n\n            siblings: wrapper_selector(finder.siblings, finder),\n\n            html: wrapper_value(noder.html, noder, noder.html),\n\n            text: wrapper_value(datax.text, datax, datax.text),\n\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\n\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\n\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\n\n            removeProp: wrapper_every_act(datax.removeProp, datax),\n\n            data: wrapper_name_value(datax.data, datax, datax.data),\n\n            removeData: wrapper_every_act(datax.removeData, datax),\n\n            val: wrapper_value(datax.val, datax, datax.val),\n\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\n\n            style: wrapper_name_value(styler.css, styler),\n\n            css: wrapper_name_value(styler.css, styler),\n\n            index: function(elem) {\n                if (elem) {\n                    return this.indexOf($(elem)[0]);\n                } else {\n                    return this.parent().children().indexOf(this[0]);\n                }\n            },\n\n            //hasClass(name)\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\n\n            //addClass(name)\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\n\n            //removeClass(name)\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\n\n            //toogleClass(name,when)\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\n\n            scrollTop: wrapper_value(geom.scrollTop, geom),\n\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\n\n            position: function() {\n                if (!this.length) return\n\n                var elem = this[0];\n\n                return geom.relativePosition(elem);\n            },\n\n            offsetParent: wrapper_map(geom.offsetParent, geom),\n        });\n\n        // for now\n        $.fn.detach = $.fn.remove;\n\n\n        $.fn.size = wrapper_value(geom.size, geom);\n\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\n\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\n\n        ['width', 'height'].forEach(function(dimension) {\n            var offset, Dimension = dimension.replace(/./, function(m) {\n                return m[0].toUpperCase()\n            });\n\n            $.fn['outer' + Dimension] = function(margin, value) {\n                if (arguments.length) {\n                    if (typeof margin !== 'boolean') {\n                        value = margin;\n                        margin = false;\n                    }\n                } else {\n                    margin = false;\n                    value = undefined;\n                }\n\n                if (value === undefined) {\n                    var el = this[0];\n                    if (!el) {\n                        return undefined;\n                    }\n                    var cb = geom.size(el);\n                    if (margin) {\n                        var me = geom.marginExtents(el);\n                        cb.width = cb.width + me.left + me.right;\n                        cb.height = cb.height + me.top + me.bottom;\n                    }\n                    return dimension === \"width\" ? cb.width : cb.height;\n                } else {\n                    return this.each(function(idx, el) {\n                        var mb = {};\n                        var me = geom.marginExtents(el);\n                        if (dimension === \"width\") {\n                            mb.width = value;\n                            if (margin) {\n                                mb.width = mb.width - me.left - me.right\n                            }\n                        } else {\n                            mb.height = value;\n                            if (margin) {\n                                mb.height = mb.height - me.top - me.bottom;\n                            }\n                        }\n                        geom.size(el, mb);\n                    })\n\n                }\n            };\n        })\n\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\n\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\n\n\n        var traverseNode = noder.traverse;\n\n        function wrapper_node_operation(func, context, oldValueFunc) {\n            return function(html) {\n                var argType, nodes = langx.map(arguments, function(arg) {\n                    argType = type(arg)\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\n                        arg : noder.createFragment(arg)\n                });\n                if (nodes.length < 1) {\n                    return this\n                }\n                this.each(function(idx) {\n                    func.apply(context, [this, nodes, idx > 0]);\n                });\n                return this;\n            }\n        }\n\n\n        $.fn.after = wrapper_node_operation(noder.after, noder);\n\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\n\n        $.fn.before = wrapper_node_operation(noder.before, noder);\n\n        $.fn.append = wrapper_node_operation(noder.append, noder);\n\n        $.fn.insertAfter = function(html) {\n            $(html).after(this);\n            return this;\n        };\n\n        $.fn.insertBefore = function(html) {\n            $(html).before(this);\n            return this;\n        };\n\n        $.fn.appendTo = function(html) {\n            $(html).append(this);\n            return this;\n        };\n\n        $.fn.prependTo = function(html) {\n            $(html).prepend(this);\n            return this;\n        };\n\n        return $\n    })();\n\n    (function($) {\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\n\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\n\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\n\n\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\n            $.fn[event] = function(data, callback) {\n                return (0 in arguments) ?\n                    this.on(event, data, callback) :\n                    this.trigger(event)\n            }\n        });\n\n\n        $.fn.one = function(event, selector, data, callback) {\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\n                callback = data;\n                data = selector;\n                selector = null;\n            }\n\n            if (langx.isFunction(data)) {\n                callback = data;\n                data = null;\n            }\n\n            return this.on(event, selector, data, callback, 1)\n        };\n\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\n\n        $.fn.show = wrapper_every_act(fx.show, fx);\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\n    })(query);\n\n\n    (function($) {\n        $.fn.end = function() {\n            return this.prevObject || $()\n        }\n\n        $.fn.andSelf = function() {\n            return this.add(this.prevObject || $())\n        }\n\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\n            var fn = $.fn[property]\n            $.fn[property] = function() {\n                var ret = fn.apply(this, arguments)\n                ret.prevObject = this\n                return ret\n            }\n        })\n    })(query);\n\n\n    (function($) {\n        $.fn.query = $.fn.find;\n\n        $.fn.place = function(refNode, position) {\n            // summary:\n            //      places elements of this node list relative to the first element matched\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\n            // queryOrNode:\n            //      may be a string representing any valid CSS3 selector or a DOM node.\n            //      In the selector case, only the first matching element will be used\n            //      for relative positioning.\n            // position:\n            //      can be one of:\n            //\n            //      -   \"last\" (default)\n            //      -   \"first\"\n            //      -   \"before\"\n            //      -   \"after\"\n            //      -   \"only\"\n            //      -   \"replace\"\n            //\n            //      or an offset in the childNodes\n            if (langx.isString(refNode)) {\n                refNode = finder.descendant(refNode);\n            } else if (isQ(refNode)) {\n                refNode = refNode[0];\n            }\n            return this.each(function(i, node) {\n                switch (position) {\n                    case \"before\":\n                        noder.before(refNode, node);\n                        break;\n                    case \"after\":\n                        noder.after(refNode, node);\n                        break;\n                    case \"replace\":\n                        noder.replace(refNode, node);\n                        break;\n                    case \"only\":\n                        noder.empty(refNode);\n                        noder.append(refNode, node);\n                        break;\n                    case \"first\":\n                        noder.prepend(refNode, node);\n                        break;\n                        // else fallthrough...\n                    default: // aka: last\n                        noder.append(refNode, node);\n                }\n            });\n        };\n\n        $.fn.addContent = function(content, position) {\n            if (content.template) {\n                content = langx.substitute(content.template, content);\n            }\n            return this.append(content);\n        };\n\n        $.fn.replaceClass = function(newClass, oldClass) {\n            this.removeClass(oldClass);\n            this.addClass(newClass);\n            return this;\n        };\n\n    })(query);\n\n\n    return skylark.query = query;\n});"]}