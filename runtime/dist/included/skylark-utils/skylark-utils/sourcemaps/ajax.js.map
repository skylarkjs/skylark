{"version":3,"sources":["ajax.js"],"names":["define","skylark","langx","noder","styler","geom","eventer","query","Deferred","func","tuples","Callbacks","once","memory","state","promise","always","deferred","done","arguments","fail","this","then","fns","defer","each","i","tuple","fn","$","isFunction","returned","apply","resolve","reject","progress","notify","context","values","obj","mixin","list","stateString","add","disable","lock","fireWith","call","triggerAndReturn","eventName","data","event","create","trigger","isDefaultPrevented","triggerGlobal","settings","global","document","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","status","success","resolveWith","ajaxComplete","ajaxError","error","type","rejectWith","complete","empty","mimeToDataType","mime","split","htmlType","jsonType","scriptTypeRE","test","xmlTypeRE","appendQuery","url","replace","serializeData","options","processData","param","traditional","toUpperCase","undefined","ajax","urlAnchor","key","ajaxSettings","crossDomain","createElement","href","originAnchor","protocol","host","window","location","toString","dataType","hasPlaceholder","cache","Date","now","jsonp","ajaxJSONP","abortTimeout","accepts","headers","setHeader","name","value","toLowerCase","RegExp","$1","nativeSetHeader","setRequestHeader","mimeType","indexOf","overrideMimeType","contentType","onreadystatechange","readyState","clearTimeout","result","getResponseHeader","responseText","eval","responseXML","blankRE","JSON","parse","e","statusText","abort","xhrFields","async","open","username","password","timeout","setTimeout","send","parseArguments","serialize","params","scope","array","isArray","hash","isPlainObject","addToPrefiltersOrTransports","structure","dataTypeExpression","dataTypes","match","rnotwhite","jQuery","slice","unshift","push","ajaxExtend","target","src","deep","flatOptions","extend","fired","firing","firingStart","firingLength","firingIndex","stack","fire","length","stopOnFalse","shift","start","args","_","arg","unique","has","remove","index","inArray","splice","disabled","locked","Array","prototype","when","sub","progressValues","progressContexts","resolveContexts","resolveValues","len","remain","updateFn","ctx","val","notifyWith","jsonpID","rscript","responseData","_callbackName","jsonpCallback","callbackName","script","originalCallback","errorType","triggerHandler","on","off","head","appendChild","XMLHttpRequest","json","xml","html","text","get","post","getJSON","load","selector","self","parts","callback","response","find","escape","encodeURIComponent","join","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup"],"mappings":"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","file":"../ajax.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    var Callbacks = function(options) {\r\n        options = langx.mixin({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                langx.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        langx.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = langx.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? langx.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    //     This module is borrow from zepto.deferred.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    //\r\n    //     Some code (c) 2005, 2013 jQuery Foundation, Inc. and other contributors\r\n\r\n    var slice = Array.prototype.slice\r\n\r\n    function Deferred(func) {\r\n        var tuples = [\r\n                // action, add listener, listener list, final state\r\n                [\"resolve\", \"done\", Callbacks({ once: 1, memory: 1 }), \"resolved\"],\r\n                [\"reject\", \"fail\", Callbacks({ once: 1, memory: 1 }), \"rejected\"],\r\n                [\"notify\", \"progress\", Callbacks({ memory: 1 })]\r\n            ],\r\n            state = \"pending\",\r\n            promise = {\r\n                state: function() {\r\n                    return state\r\n                },\r\n                always: function() {\r\n                    deferred.done(arguments).fail(arguments)\r\n                    return this\r\n                },\r\n                then: function( /* fnDone [, fnFailed [, fnProgress]] */ ) {\r\n                    var fns = arguments\r\n                    return Deferred(function(defer) {\r\n                        langx.each(tuples, function(i, tuple) {\r\n                            var fn = $.isFunction(fns[i]) && fns[i]\r\n                            deferred[tuple[1]](function() {\r\n                                var returned = fn && fn.apply(this, arguments)\r\n                                if (returned && langx.isFunction(returned.promise)) {\r\n                                    returned.promise()\r\n                                        .done(defer.resolve)\r\n                                        .fail(defer.reject)\r\n                                        .progress(defer.notify)\r\n                                } else {\r\n                                    var context = this === promise ? defer.promise() : this,\r\n                                        values = fn ? [returned] : arguments\r\n                                    defer[tuple[0] + \"With\"](context, values)\r\n                                }\r\n                            })\r\n                        })\r\n                        fns = null\r\n                    }).promise()\r\n                },\r\n\r\n                promise: function(obj) {\r\n                    return obj != null ? langx.mixin(obj, promise) : promise\r\n                }\r\n            },\r\n            deferred = {}\r\n\r\n        langx.each(tuples, function(i, tuple) {\r\n            var list = tuple[2],\r\n                stateString = tuple[3]\r\n\r\n            promise[tuple[1]] = list.add\r\n\r\n            if (stateString) {\r\n                list.add(function() {\r\n                    state = stateString\r\n                }, tuples[i ^ 1][2].disable, tuples[2][2].lock)\r\n            }\r\n\r\n            deferred[tuple[0]] = function() {\r\n                deferred[tuple[0] + \"With\"](this === deferred ? promise : this, arguments)\r\n                return this\r\n            }\r\n            deferred[tuple[0] + \"With\"] = list.fireWith\r\n        })\r\n\r\n        promise.promise(deferred)\r\n        if (func) func.call(deferred, deferred)\r\n        return deferred\r\n    }\r\n\r\n    var when = function(sub) {\r\n        var resolveValues = slice.call(arguments),\r\n            len = resolveValues.length,\r\n            i = 0,\r\n            remain = len !== 1 || (sub && langx.isFunction(sub.promise)) ? len : 0,\r\n            deferred = remain === 1 ? sub : Deferred(),\r\n            progressValues, progressContexts, resolveContexts,\r\n            updateFn = function(i, ctx, val) {\r\n                return function(value) {\r\n                    ctx[i] = this\r\n                    val[i] = arguments.length > 1 ? slice.call(arguments) : value\r\n                    if (val === progressValues) {\r\n                        deferred.notifyWith(ctx, val)\r\n                    } else if (!(--remain)) {\r\n                        deferred.resolveWith(ctx, val)\r\n                    }\r\n                }\r\n            }\r\n\r\n        if (len > 1) {\r\n            progressValues = new Array(len)\r\n            progressContexts = new Array(len)\r\n            resolveContexts = new Array(len)\r\n            for (; i < len; ++i) {\r\n                if (resolveValues[i] && langx.isFunction(resolveValues[i].promise)) {\r\n                    resolveValues[i].promise()\r\n                        .done(updateFn(i, resolveContexts, resolveValues))\r\n                        .fail(deferred.reject)\r\n                        .progress(updateFn(i, progressContexts, progressValues))\r\n                } else {\r\n                    --remain\r\n                }\r\n            }\r\n        }\r\n        if (!remain) deferred.resolveWith(resolveContexts, resolveValues)\r\n        return deferred.promise()\r\n    };\r\n\r\n    //     zepto.ajax.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    var jsonpID = 0,\r\n        document = window.document,\r\n        key,\r\n        name,\r\n        rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n        jsonType = 'application/json',\r\n        htmlType = 'text/html',\r\n        blankRE = /^\\s*$/,\r\n        originAnchor = document.createElement('a');\r\n\r\n    originAnchor.href = window.location.href;\r\n\r\n    // trigger a custom event and return false if it was cancelled\r\n    function triggerAndReturn(context, eventName, data) {\r\n        var event = eventer.create(eventName);\r\n        $(context).trigger(event, data)\r\n        return !event.isDefaultPrevented()\r\n    }\r\n\r\n    // trigger an Ajax \"global\" event\r\n    function triggerGlobal(settings, context, eventName, data) {\r\n        if (settings.global) return triggerAndReturn(context || document, eventName, data)\r\n    }\r\n\r\n    // Number of active Ajax requests\r\n    var active = 0;\r\n\r\n    function ajaxStart(settings) {\r\n        if (settings.global && active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\r\n    }\r\n\r\n    function ajaxStop(settings) {\r\n        if (settings.global && !(--active)) triggerGlobal(settings, null, 'ajaxStop')\r\n    }\r\n\r\n    // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\r\n    function ajaxBeforeSend(xhr, settings) {\r\n        var context = settings.context\r\n        if (settings.beforeSend.call(context, xhr, settings) === false ||\r\n            triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\r\n            return false\r\n\r\n        triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        ajaxStop(settings)\r\n    }\r\n\r\n    // Empty function, used as default callback\r\n    function empty() {}\r\n\r\n    var ajaxJSONP = function(options, deferred) {\r\n        if (!('type' in options)) return ajax(options)\r\n\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = (langx.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                ajaxError(null, errorType || 'error', xhr, options, deferred)\r\n            } else {\r\n                ajaxSuccess(responseData[0], xhr, options, deferred)\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && langx.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        if (ajaxBeforeSend(xhr, options) === false) {\r\n            abort('abort')\r\n            return xhr\r\n        }\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return xhr;\r\n    };\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest()\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: jsonType,\r\n            xml: 'application/xml, text/xml',\r\n            html: htmlType,\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    };\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) mime = mime.split(';', 2)[0]\r\n        return mime && (mime == htmlType ? 'html' :\r\n            mime == jsonType ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text'\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && langx.type(options.data) != \"string\")\r\n            options.data = param(options.data, options.traditional)\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\r\n            options.url = appendQuery(options.url, options.data), options.data = undefined\r\n    }\r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options || {}),\r\n            deferred = Deferred(),\r\n            urlAnchor\r\n        for (key in ajaxSettings)\r\n            if (settings[key] === undefined) settings[key] = ajaxSettings[key]\r\n\r\n        ajaxStart(settings)\r\n\r\n        if (!settings.crossDomain) {\r\n            urlAnchor = document.createElement('a')\r\n            urlAnchor.href = settings.url\r\n            urlAnchor.href = urlAnchor.href\r\n            settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\r\n        }\r\n\r\n        if (!settings.url) settings.url = window.location.toString()\r\n        serializeData(settings)\r\n\r\n        var dataType = settings.dataType,\r\n            hasPlaceholder = /\\?.+=\\?/.test(settings.url)\r\n        if (hasPlaceholder) dataType = 'jsonp'\r\n\r\n        if (settings.cache === false || (\r\n                (!options || options.cache !== true) &&\r\n                ('script' == dataType || 'jsonp' == dataType)\r\n            ))\r\n            settings.url = appendQuery(settings.url, '_=' + Date.now())\r\n\r\n        if ('jsonp' == dataType) {\r\n            if (!hasPlaceholder)\r\n                settings.url = appendQuery(settings.url,\r\n                    settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\r\n            return ajaxJSONP(settings, deferred)\r\n        }\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n\r\n        if (settings.headers)\r\n            for (name in settings.headers) setHeader(name, settings.headers[name])\r\n        xhr.setRequestHeader = setHeader\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script')(1, eval)(result)\r\n                        else if (dataType == 'xml') result = xhr.responseXML\r\n                        else if (dataType == 'json') result = blankRE.test(result) ? null : JSON.parse(result)\r\n                    } catch (e) { error = e }\r\n\r\n                    if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\r\n                    else ajaxSuccess(result, xhr, settings, deferred)\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) nativeSetHeader.apply(xhr, headers[name])\r\n\r\n        if (settings.timeout > 0) abortTimeout = setTimeout(function() {\r\n            xhr.onreadystatechange = empty\r\n            xhr.abort()\r\n            ajaxError(null, 'timeout', xhr, settings, deferred)\r\n        }, settings.timeout)\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr\r\n    }\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if (langx.isFunction(data)) dataType = success, success = data, data = undefined\r\n        if (!langx.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    var get = function( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    };\r\n\r\n    var post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return ajax(options)\r\n    };\r\n\r\n    var getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return ajax(options)\r\n    }\r\n\r\n    query.fn.load = function(url, data, success) {\r\n        if (!this.length) return this\r\n        var self = this,\r\n            parts = url.split(/\\s/),\r\n            selector,\r\n            options = parseArguments(url, data, success),\r\n            callback = options.success\r\n        if (parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        ajax(options)\r\n        return this\r\n    }\r\n\r\n    var escape = encodeURIComponent\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value)\r\n            if (scope) key = traditional ? scope :\r\n                scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) params.add(value.name, value.value)\r\n            // recurse into nested objects\r\n            else if (type == \"array\" || (!traditional && type == \"object\"))\r\n                serialize(params, value, traditional, key)\r\n            else params.add(key, value)\r\n        })\r\n    }\r\n\r\n    var param = function(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) value = value()\r\n            if (value == null) value = \"\"\r\n            this.push(escape(key) + '=' + escape(value))\r\n        }\r\n        serialize(params, obj, traditional)\r\n        return params.join('&').replace(/%20/g, '+')\r\n    };\r\n\r\n    var\r\n        /* Prefilters\r\n         * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n         * 2) These are called:\r\n         *    - BEFORE asking for a transport\r\n         *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n         * 3) key is the dataType\r\n         * 4) the catchall symbol \"*\" can be used\r\n         * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n         */\r\n        prefilters = {},\r\n\r\n        /* Transports bindings\r\n         * 1) key is the dataType\r\n         * 2) the catchall symbol \"*\" can be used\r\n         * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n         */\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    var ajaxTransport = addToPrefiltersOrTransports(transports);\r\n\r\n    // A special extend for ajax options\r\n    // that takes \"flat\" options (not to be deep extended)\r\n    // Fixes #9887\r\n    function ajaxExtend(target, src) {\r\n        var key, deep,\r\n            flatOptions = ajaxSettings.flatOptions || {};\r\n\r\n        for (key in src) {\r\n            if (src[key] !== undefined) {\r\n                (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\r\n            }\r\n        }\r\n        if (deep) {\r\n            jQuery.extend(true, target, deep);\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    // Creates a full fledged settings object into target\r\n    // with both ajaxSettings and settings fields.\r\n    // If target is omitted, writes into ajaxSettings.\r\n    var ajaxSetup = function(target, settings) {\r\n        return settings ?\r\n\r\n            // Building a settings object\r\n            ajaxExtend(ajaxExtend(target, ajaxSettings), settings) :\r\n\r\n            // Extending ajaxSettings\r\n            ajaxExtend(ajaxSettings, target);\r\n    };\r\n\r\n    // Base inspection function for prefilters and transports\r\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\r\n\r\n        var inspected = {},\r\n            seekingTransport = (structure === transports);\r\n\r\n        function inspect(dataType) {\r\n            var selected;\r\n            inspected[dataType] = true;\r\n            jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\r\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\r\n                if (typeof dataTypeOrTransport === \"string\" &&\r\n                    !seekingTransport && !inspected[dataTypeOrTransport]) {\r\n\r\n                    options.dataTypes.unshift(dataTypeOrTransport);\r\n                    inspect(dataTypeOrTransport);\r\n                    return false;\r\n                } else if (seekingTransport) {\r\n                    return !(selected = dataTypeOrTransport);\r\n                }\r\n            });\r\n            return selected;\r\n        }\r\n\r\n        return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\r\n    }\r\n\r\n\r\n    langx.mixin(ajax, {\r\n    \tajaxJSONP : ajaxJSONP,\r\n    \tajaxPrefilter : ajaxPrefilter,\r\n    \tajaxTransport: ajaxTransport,\r\n    \tajaxSettings : ajaxSettings,\r\n    \tajaxSetup : ajaxSetup,\r\n\r\n    \tCallbacks:Callbacks,\r\n\r\n    \tDeferred: Deferred,\r\n\r\n    \tget : get,\r\n    \tgetJSON : getJSON,\r\n    \tparam: param,\r\n    \tpost: post,\r\n\r\n    \twhen: when\r\n\r\n    });\r\n\r\n\r\n    return skylark.ajax = ajax;\r\n});\r\n"]}