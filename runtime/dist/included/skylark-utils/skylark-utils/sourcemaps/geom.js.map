{"version":3,"sources":["geom.js"],"names":["define","skylark","langx","styler","offsetParent","elm","parent","document","body","rootNodeRE","test","nodeName","css","borderExtents","s","getComputedStyle","left","px","borderLeftWidth","top","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","undefined","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","this","boundingRect","size","clientHeight","value","clientSize","height","dimension","width","clientWidth","isBorderBox","props","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","doc","documentElement","max","Math","scrollWidth","offsetWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","obj","window","pageXOffset","pageYOffset","pageRect","round","offset","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","nodeType","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","parentNode","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","isWindow","innerWidth","innerHeight","isDocument","geom","toPixel","mixin"],"mappings":"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","file":"../geom.js","sourcesContent":["define([\n    \"./skylark\",\n    \"./langx\",\n    \"./styler\"\n], function(skylark, langx, styler) {\n    var rootNodeRE = /^(?:body|html)$/i,\n        px = langx.toPixel;\n\n    function offsetParent(elm) {\n        var parent = elm.offsetParent || document.body;\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\n            parent = parent.offsetParent;\n        }\n        return parent;\n    }\n\n\n    function borderExtents(elm) {\n        var s = getComputedStyle(elm);\n        return {\n            left: px(s.borderLeftWidth , elm),\n            top: px(s.borderTopWidth, elm),\n            right: px(s.borderRightWidth, elm),\n            bottom: px(s.borderBottomWidth, elm)\n        }\n    }\n\n    //viewport coordinate\n    function boundingPosition(elm, coords) {\n        if (coords === undefined) {\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\n        } else {\n            var // Get *real* offsetParent\n                parent = offsetParent(elm),\n                // Get correct offsets\n                parentOffset = boundingPosition(parent),\n                mex = marginExtents(elm),\n                pbex = borderExtents(parent);\n\n            relativePosition(elm, {\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\n                left: coords.left - parentOffset.left - mex.left - pbex.left\n            });\n            return this;\n        }\n    }\n\n    function boundingRect(elm, coords) {\n        if (coords === undefined) {\n            return elm.getBoundingClientRect()\n        } else {\n            boundingPosition(elm, coords);\n            size(elm, coords);\n            return this;\n        }\n    }\n\n    function clientHeight(elm, value) {\n        if (value == undefined) {\n            return clientSize(elm).height;\n        } else {\n            return clientSize(elm, {\n                height: value\n            });\n        }\n    }\n\n    function clientSize(elm, dimension) {\n        if (dimension == undefined) {\n            return {\n                width: elm.clientWidth,\n                height: elm.clientHeight\n            }\n        } else {\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\n                props = {\n                    width: dimension.width,\n                    height: dimension.height\n                };\n            if (!isBorderBox) {\n                var pex = paddingExtents(elm);\n\n                if (props.width !== undefined) {\n                    props.width = props.width - pex.left - pex.right;\n                }\n\n                if (props.height !== undefined) {\n                    props.height = props.height - pex.top - pex.bottom;\n                }\n            } else {\n                var bex = borderExtents(elm);\n\n                if (props.width !== undefined) {\n                    props.width = props.width + bex.left + bex.right;\n                }\n\n                if (props.height !== undefined) {\n                    props.height = props.height + bex.top + bex.bottom;\n                }\n\n            }\n            styler.css(elm, props);\n            return this;\n        }\n        return {\n            width: elm.clientWidth,\n            height: elm.clientHeight\n        };\n    }\n\n    function clientWidth(elm, value) {\n        if (value == undefined) {\n            return clientSize(elm).width;\n        } else {\n            clientSize(elm, {\n                width: value\n            });\n            return this;\n        }\n    }\n\n    function contentRect(elm) {\n        var cs = clientSize(elm),\n            pex = paddingExtents(elm);\n\n\n        //// On Opera, offsetLeft includes the parent's border\n        //if(has(\"opera\")){\n        //    pe.l += be.l;\n        //    pe.t += be.t;\n        //}\n        return {\n            left: pex.left,\n            top: pex.top,\n            width: cs.width - pex.left - pex.right,\n            height: cs.height - pex.top - pex.bottom\n        };\n    }\n\n    function getDocumentSize(doc) {\n        var documentElement = doc.documentElement,\n            body = doc.body,\n            max = Math.max,\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\n\n        return {\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\n        };\n    }\n\n    function height(elm, value) {\n        if (value == undefined) {\n            return size(elm).height;\n        } else {\n            size(elm, {\n                height: value\n            });\n            return this;\n        }\n    }\n\n    function marginExtents(elm) {\n        var s = getComputedStyle(elm);\n        return {\n            left: px(s.marginLeft),\n            top: px(s.marginTop),\n            right: px(s.marginRight),\n            bottom: px(s.marginBottom),\n        }\n    }\n\n\n    function paddingExtents(elm) {\n        var s = getComputedStyle(elm);\n        return {\n            left: px(s.paddingLeft),\n            top: px(s.paddingTop),\n            right: px(s.paddingRight),\n            bottom: px(s.paddingBottom),\n        }\n    }\n\n    //coordinate to the document\n    function pagePosition(elm, coords) {\n        if (coords === undefined) {\n            var obj = elm.getBoundingClientRect()\n            return {\n                left: obj.left + window.pageXOffset,\n                top: obj.top + window.pageYOffset\n            }\n        } else {\n            var // Get *real* offsetParent\n                parent = offsetParent(elm),\n                // Get correct offsets\n                parentOffset = pagePosition(parent),\n                mex = marginExtents(elm),\n                pbex = borderExtents(parent);\n\n            relativePosition(elm, {\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\n                left: coords.left - parentOffset.left - mex.left - pbex.left\n            });\n            return this;\n        }\n    }\n\n    function pageRect(elm, coords) {\n        if (coords === undefined) {\n            var obj = elm.getBoundingClientRect()\n            return {\n                left: obj.left + window.pageXOffset,\n                top: obj.top + window.pageYOffset,\n                width: Math.round(obj.width),\n                height: Math.round(obj.height)\n            }\n        } else {\n            pagePosition(elm, coords);\n            size(elm, coords);\n            return this;\n        }\n    }\n\n    // coordinate relative to it's parent\n    function relativePosition(elm, coords) {\n        if (coords == undefined) {\n            var // Get *real* offsetParent\n                parent = offsetParent(elm),\n                // Get correct offsets\n                offset = boundingPosition(elm),\n                parentOffset = boundingPosition(parent),\n                mex = marginExtents(elm),\n                pbex = borderExtents(parent);\n\n            // Subtract parent offsets and element margins\n            return {\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\n                left: offset.left - parentOffset.left - pbex.left - mex.left\n            }\n        } else {\n            var props = {\n                top: coords.top,\n                left: coords.left\n            }\n\n            if (styler.css(elm, \"position\") == \"static\") {\n                props['position'] = \"relative\";\n            }\n            styler.css(elm, props);\n            return this;\n        }\n    }\n\n    function relativeRect(elm, coords) {\n        if (coords === undefined) {\n            var // Get *real* offsetParent\n                parent = offsetParent(elm),\n                // Get correct offsets\n                offset = boundingRect(elm),\n                parentOffset = boundingPosition(parent),\n                mex = marginExtents(elm),\n                pbex = borderExtents(parent);\n\n            // Subtract parent offsets and element margins\n            return {\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\n                width: offset.width,\n                height: offset.height\n            }\n        } else {\n            relativePosition(elm, coords);\n            size(elm, coords);\n            return this;\n        }\n    }\n\n    function scrollIntoView(elm, align) {\n        function getOffset(elm, rootElm) {\n            var x, y, parent = elm;\n\n            x = y = 0;\n            while (parent && parent != rootElm && parent.nodeType) {\n                x += parent.offsetLeft || 0;\n                y += parent.offsetTop || 0;\n                parent = parent.offsetParent;\n            }\n\n            return { x: x, y: y };\n        }\n\n        var parentElm = elm.parentNode;\n        var x, y, width, height, parentWidth, parentHeight;\n        var pos = getOffset(elm, parentElm);\n\n        x = pos.x;\n        y = pos.y;\n        width = elm.offsetWidth;\n        height = elm.offsetHeight;\n        parentWidth = parentElm.clientWidth;\n        parentHeight = parentElm.clientHeight;\n\n        if (align == \"end\") {\n            x -= parentWidth - width;\n            y -= parentHeight - height;\n        } else if (align == \"center\") {\n            x -= (parentWidth / 2) - (width / 2);\n            y -= (parentHeight / 2) - (height / 2);\n        }\n\n        parentElm.scrollLeft = x;\n        parentElm.scrollTop = y;\n\n        return this;\n    }\n\n    function scrollLeft(elm, value) {\n        var hasScrollLeft = \"scrollLeft\" in elm;\n        if (value === undefined) {\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\n        } else {\n            if (hasScrollLeft) {\n                elm.scrollLeft = value;\n            } else {\n                elm.scrollTo(value, elm.scrollY);\n            }\n            return this;\n        }\n    }\n\n    function scrollTop(elm, value) {\n        var hasScrollTop = \"scrollTop\" in elm;\n\n        if (value === undefined) {\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\n        } else {\n            if (hasScrollTop) {\n                elm.scrollTop = value;\n            } else {\n                elm.scrollTo(elm.scrollX, value);\n            }\n            return this;\n        }\n    }\n\n    function size(elm, dimension) {\n        if (dimension == undefined) {\n            if (langx.isWindow(elm)) {\n                return {\n                    width: elm.innerWidth,\n                    height: elm.innerHeight\n                }\n\n            } else if (langx.isDocument(elm)) {\n                return getDocumentSize(document);\n            } else {\n                return {\n                    width: elm.offsetWidth,\n                    height: elm.offsetHeight\n                }\n            }\n        } else {\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\n                props = {\n                    width: dimension.width,\n                    height: dimension.height\n                };\n            if (!isBorderBox) {\n                var pex = paddingExtents(elm),\n                    bex = borderExtents(elm);\n\n                if (props.width !== undefined) {\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\n                }\n\n                if (props.height !== undefined) {\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\n                }\n            }\n            styler.css(elm, props);\n            return this;\n        }\n    }\n\n    function width(elm, value) {\n        if (value == undefined) {\n            return size(elm).width;\n        } else {\n            size(elm, {\n                width: value\n            });\n            return this;\n        }\n    }\n\n    function geom() {\n        return geom;\n    }\n\n    langx.mixin(geom, {\n        borderExtents: borderExtents,\n        //viewport coordinate\n        boundingPosition: boundingPosition,\n\n        boundingRect: boundingRect,\n\n        clientHeight: clientHeight,\n\n        clientSize: clientSize,\n\n        clientWidth: clientWidth,\n\n        contentRect: contentRect,\n\n        getDocumentSize: getDocumentSize,\n\n        height: height,\n\n        marginExtents: marginExtents,\n\n        offsetParent: offsetParent,\n\n        paddingExtents: paddingExtents,\n\n        //coordinate to the document\n        pagePosition: pagePosition,\n\n        pageRect: pageRect,\n\n        // coordinate relative to it's parent\n        relativePosition: relativePosition,\n\n        relativeRect: relativeRect,\n\n        scrollIntoView: scrollIntoView,\n\n        scrollLeft: scrollLeft,\n\n        scrollTop: scrollTop,\n\n        size: size,\n\n        width: width\n    });\n\n    return skylark.geom = geom;\n});\n"]}