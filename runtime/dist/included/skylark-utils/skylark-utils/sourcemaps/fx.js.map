{"version":3,"sources":["fx.js"],"names":["define","skylark","langx","browser","styler","eventer","animate","elm","properties","duration","ease","callback","delay","key","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","this","fired","hasScrollTop","isPlainObject","easing","complete","isString","fx","speeds","undefined","normal","off","isFunction","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","test","push","dasherize","transitionEnd","transform","transitionProperty","join","transitionDuration","transitionDelay","transitionTiming","event","target","currentTarget","css","cssReset","call","on","debounce","clientLeft","scrollToTop","show","speed","opacity","scale","hide","pos","scrollFrom","parseInt","scrollTop","i","runEvery","freq","scrollTo","interval","setInterval","clearInterval","toggle","isInvisible","fadeTo","fadeIn","fadeOut","options","fadeToggle","ceasing","allback","animationDelay","normalizeCssEvent","css3PropPrefix","normalizeCssProperty","mixin","fast","slow"],"mappings":"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","file":"../fx.js","sourcesContent":["define([\n    \"./skylark\",\n    \"./langx\",\n    \"./browser\",\n    \"./styler\",\n    \"./eventer\"\n], function(skylark, langx, browser, styler, eventer) {\n    var animationName,\n        animationDuration,\n        animationTiming,\n        animationDelay,\n        transitionProperty,\n        transitionDuration,\n        transitionTiming,\n        transitionDelay,\n\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\n\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\n        transform = browser.css3PropPrefix + \"transform\",\n        cssReset = {};\n\n\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\n\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\n\n\n\n    function animate(elm, properties, duration, ease, callback, delay) {\n        var key,\n            cssValues = {},\n            cssProperties = [],\n            transforms = \"\",\n            that = this,\n            endEvent,\n            wrappedCallback,\n            fired = false,\n            hasScrollTop = false;\n\n        if (langx.isPlainObject(duration)) {\n            ease = duration.easing;\n            callback = duration.complete;\n            delay = duration.delay;\n            duration = duration.duration;\n        }\n\n        if (langx.isString(duration)) {\n            duration = fx.speeds[duration];\n        }\n        if (duration === undefined) {\n            duration = fx.speeds.normal;\n        }\n        duration = duration / 1000;\n        if (fx.off) {\n            duration = 0;\n        }\n\n        if (langx.isFunction(ease)) {\n            callback = ease;\n            eace = \"swing\";\n        } else {\n            ease = ease || \"swing\";\n        }\n\n        if (delay) {\n            delay = delay / 1000;\n        } else {\n            delay = 0;\n        }\n\n        if (langx.isString(properties)) {\n            // keyframe animation\n            cssValues[animationName] = properties;\n            cssValues[animationDuration] = duration + \"s\";\n            cssValues[animationTiming] = ease;\n            endEvent = animationEnd;\n        } else {\n            // CSS transitions\n            for (key in properties) {\n                if (supportedTransforms.test(key)) {\n                    transforms += key + \"(\" + properties[key] + \") \";\n                } else {\n                    if (key === \"scrollTop\") {\n                        hasScrollTop = true;\n                    }\n                    cssValues[key] = properties[key];\n                    cssProperties.push(langx.dasherize(key));\n                }\n            }\n            endEvent = transitionEnd;\n        }\n\n        if (transforms) {\n            cssValues[transform] = transforms;\n            cssProperties.push(transform);\n        }\n\n        if (duration > 0 && langx.isPlainObject(properties)) {\n            cssValues[transitionProperty] = cssProperties.join(\", \");\n            cssValues[transitionDuration] = duration + \"s\";\n            cssValues[transitionDelay] = delay + \"s\";\n            cssValues[transitionTiming] = ease;\n        }\n\n        wrappedCallback = function(event) {\n            fired = true;\n            if (event) {\n                if (event.target !== event.currentTarget) {\n                    return // makes sure the event didn't bubble from \"below\"\n                }\n                eventer.off(event.target, endEvent, wrappedCallback)\n            } else {\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\n            }\n            styler.css(elm, cssReset);\n            callback && callback.call(this);\n        };\n\n        if (duration > 0) {\n            eventer.on(elm, endEvent, wrappedCallback);\n            // transitionEnd is not always firing on older Android phones\n            // so make sure it gets fired\n            langx.debounce(function() {\n                if (fired) {\n                    return;\n                }\n                wrappedCallback.call(that);\n            }, ((duration + delay) * 1000) + 25)();\n        }\n\n        // trigger page reflow so new elements can animate\n        elm.clientLeft;\n\n        styler.css(elm, cssValues);\n\n        if (duration <= 0) {\n            langx.debounce(function() {\n                if (fired) {\n                    return;\n                }\n                wrappedCallback.call(that);\n            }, 0)();\n        }\n\n        if (hasScrollTop) {\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\n        }\n\n        return this;\n    }\n\n    function show(elm, speed, callback) {\n        styler.show(elm);\n        if (speed) {\n            if (!callback && langx.isFunction(speed)) {\n                callback = speed;\n                speed = \"normal\";\n            }\n            styler.css(elm, \"opacity\", 0)\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\n        }\n        return this;\n    }\n\n\n    function hide(elm, speed, callback) {\n        if (speed) {\n            if (!callback && langx.isFunction(speed)) {\n                callback = speed;\n                speed = \"normal\";\n            }\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\n                styler.hide(elm);\n                if (callback) {\n                    callback.call(elm);\n                }\n            });\n        } else {\n            styler.hide(elm);\n        }\n        return this;\n    }\n\n    function scrollToTop(elm, pos, speed, callback) {\n        var scrollFrom = parseInt(elm.scrollTop),\n            i = 0,\n            runEvery = 5, // run every 5ms\n            freq = speed * 1000 / runEvery,\n            scrollTo = parseInt(pos);\n\n        var interval = setInterval(function() {\n            i++;\n\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\n\n            if (i >= freq + 1) {\n                clearInterval(interval);\n                if (callback) langx.debounce(callback, 1000)();\n            }\n        }, runEvery);\n    }\n\n    function toggle(elm, speed, callback) {\n        if (styler.isInvisible(elm)) {\n            show(elm, speed, callback);\n        } else {\n            hide(elm, speed, callback);\n        }\n        return this;\n    }\n\n    function fadeTo(elm, speed, opacity, easing, callback) {\n        animate(elm, { opacity: opacity }, speed, easing, callback);\n        return this;\n    }\n\n    function fadeIn(elm, speed, easing, callback) {\n        var target = styler.css(elm, \"opacity\");\n        if (target > 0) {\n            styler.css(elm, \"opacity\", 0);\n        } else {\n            target = 1;\n        }\n        styler.show(elm);\n\n        fadeTo(elm, speed, target, easing, callback);\n\n        return this;\n    }\n\n    function fadeOut(elm, speed, easing, callback) {\n        var _elm = elm,\n            complete,\n            options = {};\n\n        if (langx.isPlainObject(speed)) {\n            options.easing = speed.easing;\n            options.duration = speed.duration;\n            complete = speed.complete;\n        } else {\n            options.duration = speed;\n            if (callback) {\n                complete = callback;\n                options.easing = easing;\n            } else {\n                complete = easing;\n            }\n        }\n        options.complete = function() {\n            styler.hide(elm);\n            if (complete) {\n                complete.call(elm);\n            }\n        }\n\n        fadeTo(elm, options, 0);\n\n        return this;\n    }\n\n    function fadeToggle(elm, speed, ceasing, allback) {\n        if (styler.isInvisible(elm)) {\n            fadeIn(elm, speed, easing, callback);\n        } else {\n            fadeOut(elm, speed, easing, callback);\n        }\n        return this;\n    }\n\n    function fx() {\n        return fx;\n    }\n\n    langx.mixin(fx, {\n        off: false,\n\n        speeds: {\n            normal: 400,\n            fast: 200,\n            slow: 600\n        },\n\n        animate: animate,\n        fadeIn: fadeIn,\n        fadeOut: fadeOut,\n        fadeTo: fadeTo,\n        fadeToggle: fadeToggle,\n        hide: hide,\n        scrollToTop: scrollToTop,\n        show: show,\n        toggle: toggle\n    });\n\n    return skylark.fx = fx;\n});"]}