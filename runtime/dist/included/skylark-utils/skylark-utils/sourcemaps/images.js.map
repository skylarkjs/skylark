{"version":3,"sources":["images.js"],"names":["define","skylark","langx","$","images","elementNodeTypes","1","9","11","ImagesLoaded","Evented","inherit","init","elem","options","onAlways","this","document","querySelectorAll","elements","makeArray","mixin","on","getImages","setTimeout","check","bind","forEach","addElementImages","nodeName","addImage","background","addElementBackgroundImages","nodeType","childImgs","i","length","img","children","child","style","getComputedStyle","reURL","matches","exec","backgroundImage","url","addBackground","loadingImage","LoadingImage","push","Background","onProgress","e","_this","progress","progressedCount","hasAnyBroken","one","complete","isLoaded","trigger","createEvent","element","message","debug","console","log","target","eventName","isComplete","getIsImageComplete","confirm","naturalWidth","proxyImage","Image","addEventListener","src","undefined","handleEvent","event","method","type","onload","unbindEvents","onerror","removeEventListener","fn","imagesLoaded","callback","inst","d","Deferred","resolve","reject","promise","loaded"],"mappings":"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","file":"../images.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./query\"\r\n], function(skylark,langx,$) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n  /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // coerce ImagesLoaded() without new, to be new ImagesLoaded()\r\n      if ( !( this instanceof ImagesLoaded ) ) {\r\n        return new ImagesLoaded( elem, options, onAlways );\r\n      }\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new Background( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger( eventName);\r\n      this.trigger( 'always');\r\n\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n\r\n    // ----- events ----- //\r\n\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- Background -------------------------- //\r\n  var Background = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n\r\n   $.fn.imagesLoaded = function( options, callback ) {\r\n      var inst = new ImagesLoaded( this, options, callback );\r\n\r\n      var d = new langx.Deferred();\r\n      \r\n      inst.on(\"progress\",function(e){\r\n        d.progress(e);\r\n      });\r\n\r\n      inst.on(\"done\",function(e){\r\n        d.resolve(e);\r\n      });\r\n\r\n      inst.on(\"fail\",function(e){\r\n        d.reject(e);\r\n      });\r\n\r\n      return d.promise;\r\n   };\r\n\r\n    function images() {\r\n        return images;\r\n    }\r\n\r\n    langx.mixin(images, {\r\n      loaded : ImagesLoaded\r\n    });\r\n\r\n    return skylark.images = images;\r\n});\r\n"]}