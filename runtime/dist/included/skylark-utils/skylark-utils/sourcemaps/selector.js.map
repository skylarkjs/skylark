{"version":3,"sources":["selector.js"],"names":["define","skylark","langx","noder","datax","geom","eventer","mover","styler","$","init","options","classPrefix","appendTo","document","body","container","createElement","class","append","handlers","forEach","n","data-resize-handler","handler","movable","auto","started","moving","resizing","stopped","e","target","startSize","size","startedCallback","currentSize","direction","left","right","width","deltaX","top","bottom","height","deltaY","pageRect","resizingCallback","stoppedCallback","select","el","startDim","rectDim","startPos","show","unselect","hide","selector","on","off","attr","removeAttr","pagePosition","addClass","Array","prototype","some","map","mixin"],"mappings":";;;;;;;AAAAA,QACI,YACA,UACA,UACA,UACA,SACA,YACA,UACA,WACA,WACF,SAASC,EAASC,EAAMC,EAAMC,EAAMC,EAAKC,EAAQC,EAAMC,EAAOC,GA8F5D,QAASC,GAAMC,GACXA,EAAUA,MACVC,EAAcD,EAAQC,aAAe,EAErC,IAAIC,GAAWF,EAAQE,UAAYC,SAASC,IAC5CC,GAAYb,EAAMc,cAAc,OAC5BC,QAAUN,EAAc,cAE5BT,EAAMgB,OAAON,EAASG,GAItBI,MACC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMC,QAAQ,SAASC,GAC9D,MAAOF,GAASE,GAAKnB,EAAMc,cAAc,KACjCC,QAAUN,EAAc,aAAeA,EAAc,aAAeU,EACpEC,sBAAwBD,KAIpC,KAAK,GAAIA,KAAKF,GAAU,CACpB,GAAII,GAAUJ,EAASE,EACvBnB,GAAMgB,OAAOH,EAAUQ,GACvBjB,EAAMkB,QAAQD,GACVE,MAAO,EACPC,QAAUA,EACVC,OAASC,EACTC,QAAUA,KAKtB,QAASH,GAAQI,GACCA,EAAEC,MAChBC,GAAY5B,EAAK6B,KAAKF,GAClBG,GACAA,EAAgBJ,GAIxB,QAASF,GAASE,GACdK,KAEIC,EAAUC,MAAQD,EAAUE,MAC5BH,EAAYI,MAAQP,EAAUO,MAAQT,EAAEU,OAExCL,EAAYI,MAAQP,EAAUO,MAG9BH,EAAUK,KAAOL,EAAUM,OAC3BP,EAAYQ,OAASX,EAAUW,OAASb,EAAEc,OAE1CT,EAAYQ,OAASX,EAAUW,OAGnCvC,EAAK6B,KAAKF,EAAOI,GACjB/B,EAAKyC,SAAS9B,EAAUX,EAAKyC,SAASd,IAElCe,GACAA,EAAiBhB,GAKzB,QAASD,GAAQC,GACTiB,GACAA,EAAgBjB,GAKxB,QAASkB,GAAOC,EAAGvC,GAEXuC,GAAMA,IAAOlB,IAIjBA,EAASkB,EACTC,SAAWC,QAAUC,SAAW,KAEhChD,EAAKyC,SAAS9B,EAAUX,EAAKyC,SAASd,IACtCxB,EAAO8C,KAAKtC,IAKhB,QAASuC,GAASxB,GACVf,GACAR,EAAOgD,KAAKxC,GAEhBgB,EAAS,KAiBb,QAASyB,KACP,MAAOA,GAzMT,GA2EIzC,GACAI,EACAY,EAOAC,EACAG,EAEAD,EACAY,EACAC,EAfApC,GA1EKN,EAAQoD,GACPpD,EAAQqD,IACPvD,EAAMwD,KACAxD,EAAMyD,WACVxD,EAAKyD,aACHtD,EAAOuD,SACT1D,EAAKuC,OACPoB,MAAMC,UAAUC,KACjBF,MAAMC,UAAUE,IAkER,IAId9B,GACIC,MAAO,EACPC,OAAQ,EACRG,KAAM,EACNC,QAAS,EAmIjB,OATAzC,GAAMkE,MAAMX,GACR/C,KAAOA,EAEPuC,OAASA,EAETM,SAAWA,IAIRtD,EAAQwD,SAAWA","file":"../selector.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return skylark.selector = selector;\r\n});\r\n"]}