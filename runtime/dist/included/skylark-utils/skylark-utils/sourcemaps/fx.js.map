{"version":3,"sources":["fx.js"],"names":["define","skylark","langx","browser","geom","styler","eventer","animate","elm","properties","duration","ease","callback","delay","key","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","this","fired","hasScrollTop","isPlainObject","easing","complete","isString","fx","speeds","undefined","normal","off","isFunction","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","test","push","dasherize","transitionEnd","transform","transitionProperty","join","transitionDuration","transitionDelay","transitionTiming","event","target","currentTarget","css","cssReset","call","on","debounce","clientLeft","scrollToTop","show","speed","opacity","scale","hide","pos","scrollFrom","parseInt","scrollTop","i","runEvery","freq","scrollTo","interval","setInterval","clearInterval","toggle","isInvisible","fadeTo","fadeIn","fadeOut","options","fadeToggle","ceasing","allback","slideDown","position","visibility","marginTop","marginBottom","paddingTop","paddingBottom","height","overflow","apply","slideUp","queue","slideToggle","animationDelay","normalizeCssEvent","css3PropPrefix","normalizeCssProperty","mixin","fast","slow"],"mappings":";;;;;;;AAAAA,QACI,YACA,UACA,YACA,SACA,WACA,aACD,SAASC,EAASC,EAAOC,EAASC,EAAMC,EAAQC,GAuC/C,QAASC,GAAQC,EAAKC,EAAYC,EAAUC,EAAMC,EAAUC,GACxD,GAAIC,GAKAC,EACAC,EALAC,KACAC,KACAC,EAAa,GACbC,EAAOC,KAGPC,GAAQ,EACRC,GAAe,CAiCnB,IA/BIrB,EAAMsB,cAAcd,KACpBC,EAAOD,EAASe,OAChBb,EAAWF,EAASgB,SACpBb,EAAQH,EAASG,MACjBH,EAAWA,EAASA,UAGpBR,EAAMyB,SAASjB,KACfA,EAAWkB,EAAGC,OAAOnB,IAERoB,SAAbpB,IACAA,EAAWkB,EAAGC,OAAOE,QAEzBrB,GAAsB,IAClBkB,EAAGI,MACHtB,EAAW,GAGXR,EAAM+B,WAAWtB,IACjBC,EAAWD,EACXuB,KAAO,SAEPvB,EAAOA,GAAQ,QAGfE,EACAA,GAAgB,IAEhBA,EAAQ,EAGRX,EAAMyB,SAASlB,GAEfQ,EAAUkB,GAAiB1B,EAC3BQ,EAAUmB,GAAqB1B,EAAW,IAC1CO,EAAUoB,GAAmB1B,EAC7BI,EAAWuB,MACR,CAEH,IAAKxB,IAAOL,GACJ8B,EAAoBC,KAAK1B,GACzBK,GAAcL,EAAM,IAAML,EAAWK,GAAO,MAEhC,cAARA,IACAS,GAAe,GAEnBN,EAAUH,GAAOL,EAAWK,GAC5BI,EAAcuB,KAAKvC,EAAMwC,UAAU5B,IAG3CC,GAAW4B,EA2Df,MAxDIxB,KACAF,EAAU2B,GAAazB,EACvBD,EAAcuB,KAAKG,IAGnBlC,EAAW,GAAKR,EAAMsB,cAAcf,KACpCQ,EAAU4B,GAAsB3B,EAAc4B,KAAK,MACnD7B,EAAU8B,GAAsBrC,EAAW,IAC3CO,EAAU+B,GAAmBnC,EAAQ,IACrCI,EAAUgC,GAAoBtC,GAGlCK,EAAkB,SAASkC,GAEvB,GADA5B,GAAQ,EACJ4B,EAAO,CACP,GAAIA,EAAMC,SAAWD,EAAME,cACvB,MAEJ9C,GAAQ0B,IAAIkB,EAAMC,OAAQpC,EAAUC,OAEpCV,GAAQ0B,IAAIxB,EAAK8B,EAActB,EAEnCX,GAAOgD,IAAI7C,EAAK8C,GAChB1C,GAAYA,EAAS2C,KAAKlC,OAG1BX,EAAW,IACXJ,EAAQkD,GAAGhD,EAAKO,EAAUC,GAG1Bd,EAAMuD,SAAS,WACPnC,GAGJN,EAAgBuC,KAAKnC,IACA,KAApBV,EAAWG,GAAiB,OAIrCL,EAAIkD,WAEJrD,EAAOgD,IAAI7C,EAAKS,GAEZP,GAAY,GACZR,EAAMuD,SAAS,WACPnC,GAGJN,EAAgBuC,KAAKnC,IACtB,KAGHG,GACAoC,EAAYnD,EAAKC,EAAsB,UAAGC,EAAUE,GAGjDS,KASX,QAASuC,GAAKpD,EAAKqD,EAAOjD,GAUtB,MATAP,GAAOuD,KAAKpD,GACRqD,KACKjD,GAAYV,EAAM+B,WAAW4B,KAC9BjD,EAAWiD,EACXA,EAAQ,UAEZxD,EAAOgD,IAAI7C,EAAK,UAAW,GAC3BD,EAAQC,GAAOsD,QAAS,EAAGC,MAAO,OAASF,EAAOjD,IAE/CS,KAUX,QAAS2C,GAAKxD,EAAKqD,EAAOjD,GAetB,MAdIiD,KACKjD,GAAYV,EAAM+B,WAAW4B,KAC9BjD,EAAWiD,EACXA,EAAQ,UAEZtD,EAAQC,GAAOsD,QAAS,EAAGC,MAAO,OAASF,EAAO,WAC9CxD,EAAO2D,KAAKxD,GACRI,GACAA,EAAS2C,KAAK/C,MAItBH,EAAO2D,KAAKxD,GAETa,KAUX,QAASsC,GAAYnD,EAAKyD,EAAKJ,EAAOjD,GAClC,GAAIsD,GAAaC,SAAS3D,EAAI4D,WAC1BC,EAAI,EACJC,EAAW,EACXC,EAAe,IAARV,EAAeS,EACtBE,EAAWL,SAASF,GAEpBQ,EAAWC,YAAY,WACvBL,IAEIA,GAAKE,IAAM/D,EAAI4D,WAAaI,EAAWN,GAAcK,EAAOF,EAAIH,GAEhEG,GAAKE,EAAO,IACZI,cAAcF,GACV7D,GAAUV,EAAMuD,SAAS7C,EAAU,SAE5C0D,GASP,QAASM,GAAOpE,EAAKqD,EAAOjD,GAMxB,MALIP,GAAOwE,YAAYrE,GACnBoD,EAAKpD,EAAKqD,EAAOjD,GAEjBoD,EAAKxD,EAAKqD,EAAOjD,GAEdS,KAWX,QAASyD,GAAOtE,EAAKqD,EAAOC,EAASrC,EAAQb,GAEzC,MADAL,GAAQC,GAAOsD,QAASA,GAAWD,EAAOpC,EAAQb,GAC3CS,KAWX,QAAS0D,GAAOvE,EAAKqD,EAAOpC,EAAQb,GAChC,GAAIuC,GAAS9C,EAAOgD,IAAI7C,EAAK,UAU7B,OATI2C,GAAS,EACT9C,EAAOgD,IAAI7C,EAAK,UAAW,GAE3B2C,EAAS,EAEb9C,EAAOuD,KAAKpD,GAEZsE,EAAOtE,EAAKqD,EAAOV,EAAQ1B,EAAQb,GAE5BS,KAUX,QAAS2D,GAAQxE,EAAKqD,EAAOpC,EAAQb,GACjC,GACIc,GACAuD,IAwBJ,OAtBI/E,GAAMsB,cAAcqC,IACpBoB,EAAQxD,OAASoC,EAAMpC,OACvBwD,EAAQvE,SAAWmD,EAAMnD,SACzBgB,EAAWmC,EAAMnC,WAEjBuD,EAAQvE,SAAWmD,EACfjD,GACAc,EAAWd,EACXqE,EAAQxD,OAASA,GAEjBC,EAAWD,GAGnBwD,EAAQvD,SAAW,WACfrB,EAAO2D,KAAKxD,GACRkB,GACAA,EAAS6B,KAAK/C,IAItBsE,EAAOtE,EAAKyE,EAAS,GAEd5D,KAUX,QAAS6D,GAAW1E,EAAKqD,EAAOsB,EAASC,GAMrC,MALI/E,GAAOwE,YAAYrE,GACnBuE,EAAOvE,EAAKqD,EAAOpC,OAAQb,UAE3BoE,EAAQxE,EAAKqD,EAAOpC,OAAQb,UAEzBS,KASX,QAASgE,GAAU7E,EAAKE,EAAUE,GAG9B,GAAI0E,GAAWjF,EAAOgD,IAAI7C,EAAK,WAG/BoD,GAAKpD,GAGLH,EAAOgD,IAAI7C,GACP8E,SAAU,WACVC,WAAY,UAIhB,IAAIC,GAAYnF,EAAOgD,IAAI7C,EAAK,cAC5BiF,EAAepF,EAAOgD,IAAI7C,EAAK,iBAC/BkF,EAAarF,EAAOgD,IAAI7C,EAAK,eAC7BmF,EAAgBtF,EAAOgD,IAAI7C,EAAK,kBAChCoF,EAASvF,EAAOgD,IAAI7C,EAAK,SA8B7B,OA3BAH,GAAOgD,IAAI7C,GACP8E,SAAUA,EACVC,WAAY,UACZM,SAAU,SACVD,OAAQ,EACRJ,UAAW,EACXC,aAAc,EACdC,WAAY,EACZC,cAAe,IAInBpF,EAAQC,GACJoF,OAAQA,EACRJ,UAAWA,EACXC,aAAcA,EACdC,WAAYA,EACZC,cAAeA,IAEfjF,SAAUA,EACVgB,SAAU,WACFd,GACAA,EAASkF,MAAMtF,MAKpBa,KASX,QAAS0E,GAAQvF,EAAKE,EAAUE,GAE5B,GAAIR,EAAKwF,OAAOpF,GAAO,EAAG,CAGtB,GAGIoF,IAHWvF,EAAOgD,IAAI7C,EAAK,YAGlBH,EAAOgD,IAAI7C,EAAK,WACzBgF,EAAYnF,EAAOgD,IAAI7C,EAAK,cAC5BiF,EAAepF,EAAOgD,IAAI7C,EAAK,iBAC/BkF,EAAarF,EAAOgD,IAAI7C,EAAK,eAC7BmF,EAAgBtF,EAAOgD,IAAI7C,EAAK,iBAGpCH,GAAOgD,IAAI7C,GACP+E,WAAY,UACZM,SAAU,SACVD,OAAQA,EACRJ,UAAWA,EACXC,aAAcA,EACdC,WAAYA,EACZC,cAAeA,IAInBpF,EAAQC,GACJoF,OAAQ,EACRJ,UAAW,EACXC,aAAc,EACdC,WAAY,EACZC,cAAe,IAGfjF,SAAUA,EACVsF,OAAO,EACPtE,SAAU,WACNsC,EAAKxD,GACLH,EAAOgD,IAAI7C,GACP+E,WAAY,UACZM,SAAU,SACVD,OAAQA,EACRJ,UAAWA,EACXC,aAAcA,EACdC,WAAYA,EACZC,cAAeA,IAEf/E,GACAA,EAASkF,MAAMtF,MAK/B,MAAOa,MAUX,QAAS4E,GAAYzF,EAAKE,EAAUE,GAUhC,MAPwB,IAApBR,EAAKwF,OAAOpF,GACZ6E,EAAU7E,EAAKE,EAAUE,GAIzBmF,EAAQvF,EAAKE,EAAUE,GAEpBS,KAIX,QAASO,KACL,MAAOA,GA5dX,GAAIO,GACAC,EACAC,EACA6D,EACArD,EACAE,EACAE,EACAD,EAEAV,EAAenC,EAAQgG,kBAAkB,gBACzCxD,EAAgBxC,EAAQgG,kBAAkB,iBAE1C5D,EAAsB,8EACtBK,EAAYzC,EAAQiG,eAAiB,YACrC9C,IAyeJ,OAteAA,GAASnB,EAAgBhC,EAAQkG,qBAAqB,mBAClD/C,EAASlB,EAAoBjC,EAAQkG,qBAAqB,uBAC1D/C,EAAS4C,EAAiB/F,EAAQkG,qBAAqB,oBACvD/C,EAASjB,EAAkBlC,EAAQkG,qBAAqB,8BAAgC,GAE5F/C,EAAST,EAAqB1C,EAAQkG,qBAAqB,wBACvD/C,EAASP,EAAqB5C,EAAQkG,qBAAqB,wBAC3D/C,EAASN,EAAkB7C,EAAQkG,qBAAqB,qBACxD/C,EAASL,EAAmB9C,EAAQkG,qBAAqB,+BAAiC,GAsc9FnG,EAAMoG,MAAM1E,GACRI,KAAK,EAELH,QACIE,OAAQ,IACRwE,KAAM,IACNC,KAAM,KAGVjG,QAASA,EACTwE,OAAQA,EACRC,QAASA,EACTF,OAAQA,EACRI,WAAYA,EACZlB,KAAMA,EACNL,YAAaA,EAEb0B,UAAWA,EACXY,YAAaA,EACbF,QAASA,EACTnC,KAAMA,EACNgB,OAAQA,IAGL3E,EAAQ2B,GAAKA","file":"../fx.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display the matched elements.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide the matched elements.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the current vertical position of the scroll bar for the first element in the set of matched elements or set the vertical position of the scroll bar for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide the matched elements.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of the matched elements.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display the matched elements by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide the matched elements by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide the matched elements by animating their opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display the matched elements with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide the matched elements with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide the matched elements with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});"]}