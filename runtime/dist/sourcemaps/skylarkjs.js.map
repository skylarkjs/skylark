{"version":3,"sources":["skylarkjs.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","xhrGet","url","callback","xhr","XMLHttpRequest","onreadystatechange","this","readyState","response","responseText","open","send","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","cb","requireOne","hasOwnProperty","Error","module","args","forEach","apply","window","onedep","modules","config","baseUrl","skylarkjs","skylark","http","res","console","error","cfg","JSON","parse","runtime","contextPath","initApp","spa","app","go","path","force","prepare","then","run","spaModule","debounce","fn","wait","timeout","later","arguments","clearTimeout","setTimeout","compact","array","filter","call","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","e","each","obj","key","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","location","href","segs","params","queryParam","nv","inArray","indexOf","isArray","object","Array","isString","nodeName","isBoolean","isDocument","nodeType","DOCUMENT_NODE","type","isObject","isPlainObject","isWindow","Object","getPrototypeOf","prototype","isDefined","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","makeArray","offset","startWith","concat","slice","elements","values","nextTick","requestAnimationFrame","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","shift","sources","mixin","safeMixin","substitute","template","transform","thisObject","getObject","match","retVal","getValue","keys","_k","reverse","v","format","toString","uid","_uid","uniq","langx","createClass","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","superFn","tmp","overrided","ret","parent","_constructor","constructor","init","klassName","Function","create","__proto__","partial","inherit","Deferred","promise","Promise","resolve","reject","_resolve","_reject","bind","reason","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","progress","err","d","data","immediate","Evented","on","events","selector","ctx","one","self","_hub","trigger","CustomEvent","eventName","listeners","len","reCompact","listener","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","a","document","createElement","class2type","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","upperFirst","URL","webkitURL","createEvent","current","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","previous","router","useHistoryApi","state","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","hash","noCache","finded","_cache","_routes","routeName","hub","homePath","_homePath","setting","settings","routes","Route","start","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","query","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","val","content","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","plugins","_plugins","_config","pluginName","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","cssPropName","support","maybeAddPx","cssNumber","classRE","classReCache","className","node","svg","baseVal","defaultDisplay","element","display","elementDisplay","body","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","cls","re","property","computedStyle","prop","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","ensureNodes","nodes","copyByClone","cloneNode","chkName","contents","contentDocument","childNodes","html","empty","clone","isIE","getAttribs","attr","setAttrib","getAttrib","tag","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","after","placing","refNode","nextSibling","insertBefore","before","prepend","append","overlay","overlayDiv","position","top","left","width","height","zIndex","remove","oldNode","replaceChild","throb","timer","time","throbber","textNode","update","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","index","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","rootIsSelector","matches","ancestors","byId","getElementById","closest","descendants","querySelectorAll","matchError","local","descendant","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","attributes","operator","cache","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","checked","disabled","enabled","eq","focus","activeElement","tabindex","gt","has","sel","hidden","lt","not","selected","visible","offsetWidth","divide","cond","nativeSelector","customPseudos","stringify","part","getAttribute","pseudo","hasAttribute","simpleExpCounter","currentExpression","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","setAttribute","removeAttribute","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","relativeRect","scrollIntoView","align","getOffset","rootElm","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","sort","createProxy","originalEvent","ignoreProperties","$this","handler","findHandler","unregister","ready","register","stop","keyCode","stopPropagation","evented","Event","_args","readyRE","shortcuts","registry","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","add","shortcutKeys","shortcutKey","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","l","related","relatedTarget","warn","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","delete","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","dragSource","handleElm","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","Blob","createObjectURL","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","animationDelay","fast","slow","mimeToDataType","mime","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","ajaxSuccess","status","success","ajaxComplete","ajaxError","ajax","ajaxSettings","crossDomain","abortTimeout","dataType","accepts","headers","setHeader","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","getResponseHeader","eval","responseXML","blankRE","statusText","username","password","get","parseArguments","post","getJSON","beforeSend","global","script","json","xml","gtJSON","_place","choices","layoutNode","aroundNodeCoords","win","view","best","some","choice","corner","overflow","spaceAvailable","w","L","R","M","h","T","B","aroundCorner","bb","startXpos","min","startYpos","startX","startY","endX","endY","at","corners","padding","c","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","b","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","wrapper_map","func","elem","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","el","toArray","is","excludes","collection","parents","parentsUntil","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","detach","Dimension","margin","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","place","addContent","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","src","deleteJavaScript","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","main"],"mappings":"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KAGAumC,EAAAz/B,QAAAlB,MAKA0Y,EAAAooB,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAlgB,GAGAlI,EAAAooB,UACA,YACA,aACAzS,GAIA3V,EAAAooB,UACA,MACA,KACA,MACA,YACA,WACAtY,GAGA9P,EAAAooB,UACA,SACA,YACAlQ,GAGAlY,EAAAooB,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAzhB,GAEA3G,EAAAc,KAAA,SAAAxW,GACA,MAAA,SAAAA,EACA7N,KAAAyjB,KAEAzjB,KAAAyjB,KAAAW,WAAAvW,IAKA0V,EAAAooB,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACA1N,GAIA1a,EAAAooB,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACA/a,GAGArN,EAAAooB,UACA,WACAzS,GAIA3V,EAAAooB,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACA1sB,GAGAsE,EAAAooB,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACA1yB,GACAlX,EAAAwhB,KAAAA,IAGAjjB,EAAA,kBACA,sBACA,SAAAijB,GACA,MAAAA,KAGAjjB,EAAA,kBACA,SACA,YACA,QACA,UACA,QACA,YACA,UACA,WACA,OACA,SACA,SACA,UACA,UACA,UACA,aACA,WACA,UACA,SAAAyB,GACA,MAAAA,KAGAzB,EAAA,aAAA,kBAAA,SAAAsrC,GAAA,MAAAA,MAgJE5rC","file":"../skylarkjs.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylarkjs/skylark',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter;\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                proto[name] = typeof props[name] == \"function\" && !noOverrided && typeof _super[name] == \"function\" ?\r\n                    (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"ctor._constructor.apply(inst, arguments);\" +\r\n                    \"return inst;\" +\r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props,options) {\r\n                    return createClass(props, this,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props,options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var Deferred = function() {\r\n        this.promise = new Promise(function(resolve, reject) {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        }.bind(this));\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events,selector,data,callback,ctx,/*used internally*/one) {\r\n\t        var self = this,\r\n\t        \t_hub = this._hub || (this._hub = {});\r\n\r\n\t        if (isPlainObject(events)) {\r\n\t        \tctx = callback;\r\n\t            each(events, function(type, fn) {\r\n\t                self.on(type,selector, data, fn, ctx, one);\r\n\t            });\r\n\t            return this;\r\n\t        }\r\n\r\n\t        if (!isString(selector) && !isFunction(callback)) {\r\n\t        \tctx = callback;\r\n\t            callback = data;\r\n\t            data = selector;\r\n\t            selector = undefined;\r\n\t        }\r\n\r\n\t        if (isFunction(data)) {\r\n\t            ctx = callback;\r\n\t            callback = data;\r\n\t            data = null;\r\n\t        }\r\n\r\n\t        if (isString(events)) {\r\n\t            events = events.split(/\\s/)\r\n\t        }\r\n\r\n\t        events.forEach(function(name) {\r\n\t            (_hub[name] || (_hub[name] = [])).push({\r\n\t                fn: callback,\r\n\t                selector: selector,\r\n\t                data: data,\r\n\t                ctx: ctx,\r\n\t                one: one\r\n\t            });\r\n\t        });\r\n\r\n\t        return this;\r\n\t    },\r\n\r\n\t    one: function(events,selector,data,callback,ctx) {\r\n\t        return this.on(events,selector,data,callback,ctx,1);\r\n\t    },\r\n\r\n\t    trigger: function(e/*,argument list*/) {\r\n\t    \tif (!this._hub) {\r\n\t    \t\treturn this;\r\n\t    \t}\r\n\r\n\t    \tvar self = this;\r\n\r\n\t    \tif (isString(e)) {\r\n\t    \t\te = new CustomEvent(e);\r\n\t    \t}\r\n\r\n\t        var args = slice.call(arguments,1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n\t        [e.type || e.name ,\"all\"].forEach(function(eventName){\r\n\t\t        var listeners = self._hub[eventName];\r\n\t\t        if (!listeners){\r\n\t\t        \treturn;\r\n\t\t        }\r\n\r\n\t\t        var len = listeners.length,\r\n\t\t        \treCompact = false;\r\n\r\n\t\t        for (var i = 0; i < len; i++) {\r\n\t\t        \tvar listener = listeners[i];\r\n\t\t            if (e.data) {\r\n\t\t                if (listener.data) {\r\n\t\t                    e.data = mixin({}, listener.data, e.data);\r\n\t\t                }\r\n\t\t            } else {\r\n\t\t                e.data = listener.data || null;\r\n\t\t            }\r\n\t\t            listener.fn.apply(listener.ctx, args);\r\n\t\t            if (listener.one){\r\n\t\t            \tlisteners[i] = null;\r\n\t\t            \treCompact = true;\r\n\t\t            }\r\n\t\t        }\r\n\r\n\t\t        if (reCompact){\r\n\t\t        \tself._hub[eventName] = compact(listeners);\r\n\t\t        }\r\n\r\n\t        });\r\n\t        return this;\r\n\t    },\r\n\r\n\t    listened: function(event) {\r\n\t        var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n\t        return evtArr.length > 0;\r\n\t    },\r\n\r\n\t    listenTo: function(obj, event, callback,/*used internally*/one) {\r\n\t        if (!obj) {\r\n\t        \treturn this;\r\n\t        }\r\n\r\n\t        // Bind callbacks on obj,\r\n\t        if (isString(callback)) {\r\n\t        \tcallback = this[callback];\r\n\t        }\r\n\r\n\t        if (one){\r\n\t\t        obj.one(event,callback,this);\r\n\t        } else {\r\n\t\t        obj.on(event,callback,this);\r\n\t        }\r\n\r\n\t        //keep track of them on listening.\r\n\t        var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n\t        \tlistening;\r\n\r\n\t        for (var i=0;i<listeningTo.length;i++) {\r\n\t        \tif (listeningTo[i].obj == obj) {\r\n\t        \t\tlistening = listeningTo[i];\r\n\t        \t\tbreak;\r\n\t        \t}\r\n\t        }\r\n\t        if (!listening) {\r\n\t        \tlisteningTo.push(\r\n\t        \t\tlistening = {\r\n\t        \t\t\tobj : obj,\r\n\t        \t\t\tevents : {\r\n\t        \t\t\t}\r\n\t        \t    }\r\n\t        \t);\r\n\t        }\r\n\t        var listeningEvents = listening.events,\r\n\t        \tlisteningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n\t        if (listeningEvent.indexOf(callback)==-1) {\r\n\t        \tlisteningEvent.push(callback);\r\n\t        }\r\n\r\n\t        return this;\r\n\t    },\r\n\r\n\t    listenToOnce: function(obj, event, callback) {\r\n\t    \treturn this.listenTo(obj,event,callback,1);\r\n\t    },\r\n\r\n\t    off: function(events, callback) {\r\n\t        var _hub = this._hub || (this._hub = {});\r\n\t        if (isString(events)) {\r\n\t            events = events.split(/\\s/)\r\n\t        }\r\n\r\n\t        events.forEach(function(name) {\r\n\t            var evts = _hub[name];\r\n\t            var liveEvents = [];\r\n\r\n\t            if (evts && callback) {\r\n\t                for (var i = 0, len = evts.length; i < len; i++) {\r\n\t                    if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n\t                        liveEvents.push(evts[i]);\r\n\t                }\r\n\t            }\r\n\r\n\t            if (liveEvents.length) {\r\n\t            \t_hub[name] = liveEvents;\r\n\t            } else {\r\n\t            \tdelete _hub[name];\r\n\t            }\r\n\t        });\r\n\r\n\t        return this;\r\n\t    },\r\n\t    unlistenTo : function(obj, event, callback) {\r\n\t        var listeningTo = this._listeningTo;\r\n\t        if (!listeningTo) {\r\n\t        \treturn this;\r\n\t        }\r\n\t        for (var i = 0; i < listeningTo.length; i++) {\r\n\t          var listening = listeningTo[i];\r\n\r\n\t          if (obj && obj != listening.obj) {\r\n\t        \t  continue;\r\n\t          }\r\n\r\n\t          var listeningEvents = listening.events;\r\n\t          for (var eventName in listeningEvents) {\r\n\t        \t if (event && event != eventName) {\r\n\t        \t\t continue;\r\n\t        \t }\r\n\r\n\t        \t listeningEvent = listeningEvents[eventName];\r\n\r\n\t        \t for (var j=0;j<listeningEvent.length;j++) {\r\n\t        \t\t if (!callback || callback == listeningEvent[i]) {\r\n\t        \t\t\t listening.obj.off(eventName, listeningEvent[i], this);\r\n\t        \t\t\t listeningEvent[i] = null;\r\n\t        \t\t }\r\n\t        \t }\r\n\r\n\t        \t listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n\t        \t if (isEmptyObject(listeningEvent)) {\r\n\t        \t\t listeningEvents[eventName] = null;\r\n\t        \t }\r\n\r\n\t          }\r\n\r\n\t          if (isEmptyObject(listeningEvents)) {\r\n\t        \t  listeningTo[i] = null;\r\n\t          }\r\n\t        }\r\n\r\n\t        listeningTo = this._listeningTo = compact(listeningTo);\r\n\t        if (isEmptyObject(listeningTo)) {\r\n\t        \tthis._listeningTo = null;\r\n\t        }\r\n\r\n\t        return this;\r\n\t    }\r\n    });\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0;i<array.length;i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j<item.length;j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object instanceof Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !(obj.nodeName && obj.nodeName == \"#text\") && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n        \tif (obj[name] !== null) {\r\n        \t\treturn false;\r\n        \t}\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function nextTick(fn) {\r\n        requestAnimationFrame(fn);\r\n        return this;\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items,item) {\r\n    \tif (isArray(items)) {\r\n        \tvar idx = items.indexOf(item);\r\n        \tif (idx != -1) {\r\n        \t\titems.splice(idx, 1);\r\n        \t}\r\n    \t} else if (isPlainObject(items)) {\r\n    \t\tfor (var key in items) {\r\n    \t\t\tif (items[key] == item) {\r\n    \t\t\t\tdelete items[key];\r\n    \t\t\t\tbreak;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n\r\n    \treturn this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n    function uid(obj) {\r\n        return obj._uid || obj.id || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        compact: compact,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        nextTick : nextTick,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: window.URL || window.webkitURL\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\r\n\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.3-beta\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylarkjs/router',[\r\n    \"skylark-router/router\"\r\n], function(router) {\r\n    return router;\r\n});\r\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (!this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylarkjs/spa',[\r\n    \"skylark-spa/spa\"\r\n], function(spa) {\r\n    return spa;\r\n});\r\n\ndefine('skylarkjs/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylarkjs/core',[\r\n    \"./skylark\",\r\n    \"./router\",\r\n    \"./spa\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylarkjs/browser',[\r\n    \"skylark-utils/browser\"\r\n], function(browser) {\r\n    return browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            langx.mixin(node, props);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent) {\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylarkjs/css',[\r\n    \"skylark-utils/css\"\r\n], function(css) {\r\n    return css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        checked: function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        contains: function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        eq: function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        first: function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        gt: function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        has: function(elm, idx, nodes, sel) {\r\n            return local.querySelector(elm, sel).length > 0;\r\n        },\r\n\r\n\r\n        hidden: function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        last: function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        lt: function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        not: function(elm, idx, nodes, sel) {\r\n            return local.match(elm, sel);\r\n        },\r\n\r\n        parent: function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        selected: function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        visible: function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n        if (tag = cond.tag) {\r\n            var nodeName = node.nodeName.toUpperCase();\r\n            if (tag == '*') {\r\n                if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n            } else {\r\n                if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n            }\r\n        }\r\n\r\n        if (id = cond.id) {\r\n            if (node.getAttribute('id') != id) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        var i, part, cls, pseudo;\r\n\r\n        if (classes = cond.classes) {\r\n            for (i = classes.length; i--;) {\r\n                cls = node.getAttribute('class');\r\n                if (!(cls && classes[i].regexp.test(cls))) return false;\r\n            }\r\n        }\r\n\r\n        if (attributes)\r\n            for (i = attributes.length; i--;) {\r\n                part = attributes[i];\r\n                if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n            }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if (!pseudo(node, idx, nodes, part.value)) {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    if (!nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed = local.Slick.parse(selector);\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                ret.push(node);\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(selector) {\r\n        return descendant(document.body, selector);\r\n    }\r\n\r\n    function findAll(selector) {\r\n        return descendants(document.body, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector);\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylarkjs/datax',[\r\n    \"skylark-utils/datax\"\r\n], function(datax) {\r\n    return datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type;\r\n                type = props.type;\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                var listener = events[event];\r\n\r\n                if (listener) {\r\n                    listener.remove(fn, langx.mixin({\r\n                        ns: parsed.ns\r\n                    }, options));\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        (evented.dispatchEvent || evented.trigger).call(evented, e);\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylarkjs/dnd',[\r\n    \"skylark-utils/dnd\"\r\n], function(dnd) {\r\n    return dnd;\r\n});\r\n\ndefine('skylarkjs/eventer',[\r\n    \"skylark-utils/eventer\"\r\n], function(eventer) {\r\n    return eventer;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylarkjs/filer',[\r\n    \"skylark-utils/filer\"\r\n], function(filer) {\r\n    return filer;\r\n});\r\n\ndefine('skylarkjs/finder',[\r\n    \"skylark-utils/finder\"\r\n], function(finder) {\r\n    return finder;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if(i<=freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, callback) {\r\n        animate(elm, { opacity: opacity }, speed, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, callback) {\r\n\r\n        fadeTo(elm, speed, 0, function() {\r\n            styler.hide(elm);\r\n            if (callback) {\r\n                callback.call(elm);\r\n            }\r\n\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, callback);\r\n        } else {\r\n            fadeOut(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\r\n\ndefine('skylarkjs/fx',[\r\n    \"skylark-utils/fx\"\r\n], function(fx) {\r\n    return fx;\r\n});\r\n\ndefine('skylarkjs/geom',[\r\n    \"skylark-utils/geom\"\r\n], function(geom) {\r\n    return geom;\r\n});\r\n\ndefine('skylark-utils/http',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n],function(skylark, langx){\r\n    var Deferred = langx.Deferred,\r\n        blankRE = /^\\s*$/,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i;\r\n\r\n\r\n    function empty() {}\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest();\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: 'application/json',\r\n            xml: 'application/xml, text/xml',\r\n            html: 'text/html',\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    }\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) {\r\n            mime = mime.split(';', 2)[0];\r\n        }\r\n        return mime && (mime == 'text/html' ? 'html' :\r\n            mime == 'application/json' ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text';\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') {\r\n            return url;\r\n        }\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?');\r\n    }\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value);\r\n            if (scope) {\r\n                key = traditional ? scope :\r\n                        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']' ;\r\n            }\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) {\r\n                params.add(value.name, value.value);\r\n            // recurse into nested objects\r\n            } else if (type == \"array\" || (!traditional && type == \"object\")) {\r\n                serialize(params, value, traditional, key);\r\n            } else {\r\n                params.add(key, value);\r\n            }\r\n        })\r\n    }    \r\n\r\n    function param(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) {\r\n                value = value();\r\n            }\r\n            if (value == null) {\r\n                value = \"\";\r\n            }\r\n            this.push(escape(key) + '=' + escape(value));\r\n        }\r\n        \r\n        serialize(params, obj, traditional);\r\n\r\n        return params.join('&').replace(/%20/g, '+')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && !langx.isString(options.data)) {\r\n            options.data = $.param(options.data, options.traditional)\r\n        }\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n            options.url = appendQuery(options.url, options.data);\r\n            options.data = undefined;\r\n        }\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        //if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        //triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        //if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        //triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        //triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        //ajaxStop(settings)\r\n    }    \r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options),\r\n            deferred = new Deferred();\r\n\r\n        langx.safeMixin(settings,ajaxSettings);\r\n\r\n        //ajaxStart(settings)\r\n        if (!settings.crossDomain) {\r\n        //    settings.crossDomain = !langx.isSameOrigin(settings.url);\r\n        }\r\n\r\n        serializeData(settings);\r\n        var dataType = settings.dataType;\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout;\r\n\r\n        //if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) {\r\n            setHeader('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET')) {\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n        }\r\n\r\n        if (settings.headers) {\r\n            for (name in settings.headers) {\r\n                setHeader(name, settings.headers[name]);\r\n            }    \r\n        }\r\n        xhr.setRequestHeader = setHeader;\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script') {\r\n                            (1, eval)(result);\r\n                        } else if (dataType == 'xml') {\r\n                            result = xhr.responseXML\r\n                        } else if (dataType == 'json') {\r\n                            result = blankRE.test(result) ? null : JSON.parse(result);\r\n                        }\r\n                    } catch (e) { \r\n                        error = e \r\n                    }\r\n\r\n                    if (error) {\r\n                        ajaxError(error, 'parsererror', xhr, settings, deferred);\r\n                    } else {\r\n                        ajaxSuccess(result, xhr, settings, deferred);\r\n                    }\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred);\r\n                }\r\n            }\r\n        }\r\n\r\n        /*\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n        */\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) {\r\n            nativeSetHeader.apply(xhr, headers[name]);\r\n        }\r\n\r\n        if (settings.timeout > 0) {\r\n            abortTimeout = setTimeout(function() {\r\n                xhr.onreadystatechange = empty;\r\n                xhr.abort();\r\n                ajaxError(null, 'timeout', xhr, settings, deferred);\r\n            }, settings.timeout);\r\n        }\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr;\r\n    }\r\n\r\n\r\n    function get( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    function post( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.type = 'POST';\r\n        return ajax(options);\r\n    }\r\n\r\n    function getJSON( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.dataType = 'json';\r\n        return ajax(options);\r\n    }    \r\n\r\n\r\n    function http(){\r\n      return http;\r\n    }\r\n\r\n    langx.mixin(http, {\r\n        ajax: ajax,\r\n\r\n        get: get,\r\n        \r\n        gtJSON: getJSON,\r\n\r\n        post: post\r\n\r\n    });\r\n\r\n    return skylark.http = http;\r\n});\r\n\ndefine('skylarkjs/http',[\r\n    \"skylark-utils/http\"\r\n], function(http) {\r\n    return http;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                var l = originalPos.left + e.deltaX,\r\n                    t = originalPos.top + e.deltaY;\r\n                if (constraints) {\r\n\r\n                    if (l < constraints.minX) {\r\n                        l = constraints.minX;\r\n                    }\r\n\r\n                    if (l > constraints.maxX) {\r\n                        l = constraints.maxX;\r\n                    }\r\n\r\n                    if (t < constraints.minY) {\r\n                        t = constraints.minY;\r\n                    }\r\n\r\n                    if (t > constraints.maxY) {\r\n                        t = constraints.maxY;\r\n                    }\r\n                }\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylarkjs/mover',[\r\n    \"skylark-utils/mover\"\r\n], function(mover) {\r\n    return mover;\r\n});\r\n\ndefine('skylarkjs/noder',[\r\n    \"skylark-utils/noder\"\r\n], function(noder) {\r\n    return noder;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem] : [elem, selector]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util,selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem,util] : [elem, selector,util]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    self.attr(props);\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                }))\r\n            },\r\n\r\n            slice: function() { \r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: function(selector, context) {\r\n                var node = this[0],\r\n                    collection = false\r\n                if (typeof selector == 'object') collection = $(selector)\r\n                while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                    node = node !== context && !isDocument(node) && node.parentNode\r\n                return $(node)\r\n            },\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom),\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylarkjs/query',[\r\n    \"skylark-utils/query\"\r\n], function(query) {\r\n    return query;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylarkjs/scripter',[\r\n    \"skylark-utils/scripter\"\r\n], function(scripter) {\r\n    return scripter;\r\n});\r\n\ndefine('skylarkjs/styler',[\r\n    \"skylark-utils/styler\"\r\n], function(styler) {\r\n    return styler;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylarkjs/velm',[\r\n    \"skylark-utils/velm\"\r\n], function(velm) {\r\n    return velm;\r\n});\r\n\ndefine('skylarkjs/main',[\r\n    \"./core\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./http\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./velm\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylarkjs', ['skylarkjs/main'], function (main) { return main; });\n\n"]}