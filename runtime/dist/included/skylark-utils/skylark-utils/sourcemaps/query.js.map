{"version":3,"sources":["query.js"],"names":["define","skylark","langx","noder","datax","eventer","finder","geom","styler","fx","wrapper_map","func","context","self","this","params","slice","call","arguments","result","$","map","elem","idx","apply","concat","uniq","wrapper_selector","last","selector","filter","wrapper_selector_until","util","undefined","wrapper_every_act","each","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","forEach","funcArg","wrapper_some_chk","some","wrapper_name_value","name","value","isPlainObject","isDefined","newValue","wrapper_value","isQ","Array","prototype","push","every","rquickExpr","isArrayLike","isString","isFunction","type","isArray","isDocument","isWindow","isObject","NodeList","compact","flatten","camelCase","dasherize","children","klass","klassName","init","match","nodes","node","props","doc","charAt","length","exec","createFragment","byId","ownerDoc","descendants","attr","query","wrapper_node_operation","html","argType","arg","object","ready","find","fn","mixin","el","i","get","toArray","size","remove","callback","not","element","matches","add","is","excludes","item","indexOf","has","contains","eq","first","closest","collection","parentNode","parents","ancestors","parentsUntil","parent","contents","siblings","empty","pluck","property","show","replaceWith","newContent","before","wrap","structure","dom","clone","index","wrapAll","cloneNode","wrappingElement","append","wrapInner","unwrap","document","createTextNode","childNodes","textContent","hide","toggle","setting","css","prev","next","text","removeAttr","prop","removeProp","data","removeData","val","offset","pageRect","style","hasClass","addClass","className","removeClass","toggleClass","scrollTop","scrollLeft","position","relativePosition","offsetParent","detach","width","height","dimension","Dimension","replace","m","toUpperCase","margin","cb","me","marginExtents","left","right","top","bottom","mb","innerWidth","innerHeight","traverse","after","prepend","insertAfter","insertBefore","appendTo","prependTo","on","off","trigger","split","event","one","animate","toogle","fadeTo","fadeIn","fadeOut","fadeToggle","end","prevObject","andSelf","ret","place","refNode","descendant","addContent","content","template","substitute","replaceClass","newClass","oldClass"],"mappings":";;;;;;;AAAAA,QACI,YACA,UACA,UACA,UACA,YACA,WACA,SACA,WACA,QACD,SAASC,EAASC,EAAOC,EAAOC,EAAOC,EAASC,EAAQC,EAAMC,EAAQC,GAuCrE,QAASC,GAAYC,EAAMC,GACvB,MAAO,YACH,GAAIC,GAAOC,KACPC,EAASC,EAAMC,KAAKC,WACpBC,EAASC,EAAEC,IAAIR,EAAM,SAASS,EAAMC,GACpC,MAAOZ,GAAKa,MAAMZ,GAAUU,GAAMG,OAAOV,KAE7C,OAAOK,GAAEM,EAAKP,KAItB,QAASQ,GAAiBhB,EAAMC,EAASgB,GACrC,MAAO,UAASC,GACZ,GAEIV,IADSH,EAAMC,KAAKC,WACXJ,KAAKO,IAAI,SAASE,EAAKD,GAChC,MAAOX,GAAKa,MAAMZ,EAASgB,GAAQN,IAASA,EAAMO,MAEtD,OAAID,IAAQC,EACDV,EAAOW,OAAOD,GAEdV,GAKnB,QAASY,GAAuBpB,EAAMC,EAASgB,GAC3C,MAAO,UAASI,EAAKH,GAEJb,EAAMC,KAAKC,UACPe,UAAbJ,IACAA,EAAWG,EACXA,EAAOC,OAEX,IAAId,GAASL,KAAKO,IAAI,SAASE,EAAKD,GAChC,MAAOX,GAAKa,MAAMZ,EAASgB,GAAQN,EAAKU,IAASV,EAAMO,EAASG,KAEpE,OAAIJ,IAAQC,EACDV,EAAOW,OAAOD,GAEdV,GAMnB,QAASe,GAAkBvB,EAAMC,GAC7B,MAAO,YACH,GAAIC,GAAOC,KACPC,EAASC,EAAMC,KAAKC,UAIxB,OAHAJ,MAAKqB,KAAK,SAASZ,GACfZ,EAAKa,MAAMZ,GAAUE,MAAMW,OAAOV,MAE/BF,GAIf,QAASuB,GAA+BzB,EAAMC,EAASyB,GACnD,MAAO,UAASC,GACZ,GAAIzB,GAAOC,KACPC,EAASC,EAAMC,KAAKC,UAKxB,OAJAqB,GAAQtB,KAAKJ,EAAM,SAASS,EAAMC,GAChBiB,EAAQlB,EAAMgB,EAAMf,EAAKc,EAAaf,GACpDX,GAAKa,MAAMZ,GAAUU,EAAMgB,GAAMb,OAAOV,EAAOC,MAAM,OAElDH,GAIf,QAAS4B,GAAiB9B,EAAMC,GAC5B,MAAO,YACH,GAAIC,GAAOC,KACPC,EAASC,EAAMC,KAAKC,UACxB,OAAOwB,GAAKzB,KAAKJ,EAAM,SAASS,GAC5B,MAAOX,GAAKa,MAAMZ,GAAUU,GAAMG,OAAOV,OAKrD,QAAS4B,GAAmBhC,EAAMC,EAASyB,GACvC,MAAO,UAASO,EAAMC,GAClB,GAAIhC,GAAOC,KACPC,EAASC,EAAMC,KAAKC,UAExB,OAAIhB,GAAM4C,cAAcF,IAAS1C,EAAM6C,UAAUF,IAC7CN,EAAQtB,KAAKJ,EAAM,SAASS,EAAMC,GAC9B,GAAIyB,EAEAA,GADAX,EACWG,EAAQlB,EAAMuB,EAAOtB,EAAKc,EAAaf,IAEvCuB,EAEflC,EAAKa,MAAMZ,GAAUU,GAAMG,OAAOV,MAE/BF,GAEHA,EAAK,GACEF,EAAKa,MAAMZ,GAAUC,EAAK,GAAI+B,IADzC,QAQZ,QAASK,GAActC,EAAMC,EAASyB,GAClC,MAAO,UAASQ,GACZ,GAAIhC,GAAOC,IAEX,OAAIZ,GAAM6C,UAAUF,IAChBN,EAAQtB,KAAKJ,EAAM,SAASS,EAAMC,GAC9B,GAAIyB,EAEAA,GADAX,EACWG,EAAQlB,EAAMuB,EAAOtB,EAAKc,EAAaf,IAEvCuB,EAEflC,EAAKa,MAAMZ,GAAUU,EAAM0B,MAExBnC,GAEHA,EAAK,GACEF,EAAKa,MAAMZ,GAAUC,EAAK,KADrC,QA9JZ,GAQIqC,GARAR,EAAOS,MAAMC,UAAUV,KACvBW,EAAOF,MAAMC,UAAUC,KAGvBrC,GAFQmC,MAAMC,UAAUE,MACfH,MAAMC,UAAU3B,OACjB0B,MAAMC,UAAUpC,OAExBc,GADMqB,MAAMC,UAAU/B,IACb8B,MAAMC,UAAUtB,QACzBS,EAAUY,MAAMC,UAAUb,QAG1BgB,EAAa,2CAEbf,EAAUtC,EAAMsC,QAChBgB,EAActD,EAAMsD,YACpBC,EAAWvD,EAAMuD,SACjB/B,EAAOxB,EAAMwB,KACbgC,EAAaxD,EAAMwD,WAEnBC,EAAOzD,EAAMyD,KACbC,EAAU1D,EAAM0D,QAIhBC,GAFW3D,EAAM4D,SAEJ5D,EAAM2D,YAEnBE,EAAW7D,EAAM6D,SA6IjBC,GA3IgB9D,EAAM4C,cAEZ5C,EAAM+D,QAEN/D,EAAMgE,QAEJhE,EAAMiE,UAENjE,EAAMkE,UACP9D,EAAO+D,SAkIPnE,EAAMoE,OACjBC,UAAW,aACXC,KAAM,SAAS3C,EAAUjB,GACrB,GACI6D,GAAOC,EAAOC,EAAMC,EADpB/D,EAAOC,IA2DX,OAxDIe,KACAhB,EAAKD,QAAUA,EAAUA,GAAWT,EAAM0E,MAEtCpB,EAAS5B,IAEThB,EAAKgB,SAAWA,EAGZ4C,EADuB,MAAvB5C,EAASiD,OAAO,IAAuD,MAAzCjD,EAASiD,OAAOjD,EAASkD,OAAS,IAAclD,EAASkD,QAAU,GACxF,KAAMlD,EAAU,MAEjB0B,EAAWyB,KAAKnD,GAGxB4C,EACIA,EAAM,IAENC,EAAQvE,EAAM8E,eAAepD,GAEzB3B,EAAM4C,cAAclC,KACpBgE,EAAQhE,KAIZ+D,EAAOrE,EAAO4E,KAAKT,EAAM,GAAItE,EAAMgF,SAASvE,IAExC+D,IAEAD,GAASC,KAMjBD,EAAQpE,EAAO8E,YAAYxE,EAASiB,IAKpC6C,EAFAd,EAAQ/B,GAEAA,GAGCA,IAOjB6C,IACArB,EAAK7B,MAAMX,EAAM6D,GAEbE,GACA/D,EAAKwE,KAAKT,IAIX/D,IAEZsC,QAECmC,EAAQ,WA4VR,QAASC,GAAuB5E,EAAMC,EAASyB,GAC3C,MAAO,UAASmD,GACZ,GAAIC,GAASf,EAAQxE,EAAMmB,IAAIH,UAAW,SAASwE,GAE/C,MADAD,GAAU9B,EAAK+B,GACG,UAAXD,GAAkC,SAAXA,GAA6B,MAAPC,EAChDA,EAAMvF,EAAM8E,eAAeS,IAEnC,OAAIhB,GAAMK,OAAS,EACRjE,MAEXA,KAAKqB,KAAK,SAASZ,GACfZ,EAAKa,MAAMZ,GAAUE,KAAM4D,EAAOnD,EAAM,MAErCT,OAxWfoC,EAAM,SAASyC,GACX,MAAOA,aAAkB3B,IAE7BQ,KAAO,SAAS3C,EAAUjB,GACtB,MAAO,IAAIoD,GAASnC,EAAUjB,GAGlC,IAAIQ,GAAI,SAASS,EAAUjB,GACvB,MAAI8C,GAAW7B,OACXxB,GAAQuF,MAAM,WACV/D,EAAST,KAEN8B,EAAIrB,GACJA,EAEHjB,GAAWsC,EAAItC,IAAY6C,EAAS5B,GAC7BjB,EAAQiF,KAAKhE,GAEjB2C,KAAK3C,EAAUjB,GAI9BQ,GAAE0E,GAAK9B,EAASZ,UAChBlD,EAAM6F,MAAM3E,EAAE0E,IAIVzE,IAAK,SAASyE,GACV,MAAO1E,GAAElB,EAAMmB,IAAIP,KAAM,SAASkF,EAAIC,GAClC,MAAOH,GAAG7E,KAAK+E,EAAIC,EAAGD,OAI9BhF,MAAO,WACH,MAAOI,GAAEJ,EAAMQ,MAAMV,KAAMI,aAG/BgF,IAAK,SAAS3E,GACV,MAAeU,UAARV,EAAoBP,EAAMC,KAAKH,MAAQA,KAAKS,GAAO,EAAIA,EAAMA,EAAMT,KAAKiE,SAGnFoB,QAAS,WACL,MAAOnF,GAAMC,KAAKH,OAGtBsF,KAAM,WACF,MAAOtF,MAAKiE,QAGhBsB,OAAQnE,EAAkB/B,EAAMkG,OAAQlG,GAExCgC,KAAM,SAASmE,GAEX,MADApG,GAAMiC,KAAKrB,KAAMwF,GACVxF,MAGXgB,OAAQ,SAASD,GACb,MAAI6B,GAAW7B,GAAkBf,KAAKyF,IAAIzF,KAAKyF,IAAI1E,IAC5CT,EAAEU,EAAOb,KAAKH,KAAM,SAAS0F,GAChC,MAAOlG,GAAOmG,QAAQD,EAAS3E,OAIvC6E,IAAK,SAAS7E,EAAUjB,GACpB,MAAOQ,GAAEM,EAAKZ,KAAKqF,UAAU1E,OAAOL,EAAES,EAAUjB,GAASuF,cAG7DQ,GAAI,SAAS9E,GACT,MAAOf,MAAKiE,OAAS,GAAKzE,EAAOmG,QAAQ3F,KAAK,GAAIe,IAGtD0E,IAAK,SAAS1E,GACV,GAAI6C,KACJ,IAAIhB,EAAW7B,IAA+BI,SAAlBJ,EAASZ,KACjCH,KAAKqB,KAAK,SAASZ,GACVM,EAASZ,KAAKH,KAAMS,IAAMmD,EAAMrB,KAAKvC,YAE7C,CACD,GAAI8F,GAA8B,gBAAZ/E,GAAuBf,KAAKgB,OAAOD,GACpD2B,EAAY3B,IAAa6B,EAAW7B,EAASgF,MAAS7F,EAAMC,KAAKY,GAAYT,EAAES,EACpFf,MAAKyB,QAAQ,SAASyD,GACdY,EAASE,QAAQd,GAAM,GAAGtB,EAAMrB,KAAK2C,KAGjD,MAAO5E,GAAEsD,IAGbqC,IAAK,SAASlF,GACV,MAAOf,MAAKgB,OAAO,WACf,MAAOiC,GAASlC,GACZ1B,EAAM6G,SAASlG,KAAMe,GACrBT,EAAEN,MAAM+E,KAAKhE,GAAUuE,UAInCa,GAAI,SAAS1F,GACT,MAAOA,QAAaT,KAAKE,MAAMO,GAAOT,KAAKE,MAAMO,GAAMA,EAAM,IAGjE2F,MAAO,WACH,MAAOpG,MAAKmG,GAAG,IAGnBrF,KAAM,WACF,MAAOd,MAAKmG,QAGhBpB,KAAMlE,EAAiBrB,EAAO8E,YAAa9E,GAE3C6G,QAAS,SAAStF,EAAUjB,GACxB,GAAI+D,GAAO7D,KAAK,GACZsG,GAAa,CAEjB,KADuB,gBAAZvF,KAAsBuF,EAAahG,EAAES,IACzC8C,KAAUyC,EAAaA,EAAWN,QAAQnC,IAAS,EAAIrE,EAAOmG,QAAQ9B,EAAM9C,KAC/E8C,EAAOA,IAAS/D,IAAYiD,EAAWc,IAASA,EAAK0C,UACzD,OAAOjG,GAAEuD,IAIb2C,QAAS3F,EAAiBrB,EAAOiH,UAAWjH,GAE5CkH,aAAczF,EAAuBzB,EAAOiH,UAAWjH,GAGvDmH,OAAQ9F,EAAiBrB,EAAOmH,OAAQnH,GAExC+D,SAAU1C,EAAiBrB,EAAO+D,SAAU/D,GAE5CoH,SAAUhH,EAAYP,EAAMuH,SAAUvH,GAEtCwH,SAAUhG,EAAiBrB,EAAOqH,SAAUrH,GAE5CsH,MAAO1F,EAAkB/B,EAAMyH,MAAOzH,GAGtC0H,MAAO,SAASC,GACZ,MAAO5H,GAAMmB,IAAIP,KAAM,SAASkF,GAC5B,MAAOA,GAAG8B,MAIlBC,KAAM7F,EAAkBzB,EAAGsH,KAAMtH,GAEjCuH,YAAa,SAASC,GAClB,MAAOnH,MAAKoH,OAAOD,GAAY5B,UAGnC8B,KAAM,SAASC,GACX,GAAIzH,GAAO+C,EAAW0E,EACtB,IAAItH,KAAK,KAAOH,EACZ,GAAI0H,GAAMjH,EAAEgH,GAAWlC,IAAI,GACvBoC,EAAQD,EAAIhB,YAAcvG,KAAKiE,OAAS,CAEhD,OAAOjE,MAAKqB,KAAK,SAASoG,GACtBnH,EAAEN,MAAM0H,QACJ7H,EAAOyH,EAAUnH,KAAKH,KAAMyH,GAC5BD,EAAQD,EAAII,WAAU,GAAQJ,MAK1CG,QAAS,SAASE,GACd,GAAI5H,KAAK,GAAI,CACTM,EAAEN,KAAK,IAAIoH,OAAOQ,EAAkBtH,EAAEsH,GAGtC,KAFA,GAAIrE,IAEIA,EAAWqE,EAAgBrE,YAAYU,QAC3C2D,EAAkBrE,EAAS6C,OAE/B9F,GAAEsH,GAAiBC,OAAO7H,MAE9B,MAAOA,OAGX8H,UAAW,SAASF,GAChB,GAAI/H,GAAO+C,EAAWgF,EACtB,OAAO5H,MAAKqB,KAAK,SAASoG,GACtB,GAAI1H,GAAOO,EAAEN,MACT4G,EAAW7G,EAAK6G,WAChBW,EAAM1H,EAAO+H,EAAgBzH,KAAKH,KAAMyH,GAASG,CACrDhB,GAAS3C,OAAS2C,EAASc,QAAQH,GAAOxH,EAAK8H,OAAON,MAI9DQ,OAAQ,SAAShH,GAWb,MAVwC,KAApCf,KAAK2G,SAASpD,WAAWU,OAEzBjE,KAAK2G,OAAO5F,GAAU0E,IAAI,QAAQpE,KAAK,WACnCf,EAAEN,MAAMkH,YAAYc,SAASC,eAAejI,KAAKkI,WAAW,GAAGC,gBAGnEnI,KAAK2G,SAAStF,KAAK,WACff,EAAEN,MAAMkH,YAAY5G,EAAEN,MAAMuD,cAG7BvD,MAGXwH,MAAO,WACH,MAAOxH,MAAKO,IAAI,WACZ,MAAOP,MAAK2H,WAAU,MAI9BS,KAAMhH,EAAkBzB,EAAGyI,KAAMzI,GAEjC0I,OAAQ,SAASC,GACb,MAAOtI,MAAKqB,KAAK,WACb,GAAI6D,GAAK5E,EAAEN,OACEmB,SAAZmH,EAA6C,QAArBpD,EAAGqD,IAAI,WAAuBD,GAAWpD,EAAG+B,OAAS/B,EAAGkD,UAIzFI,KAAM,SAASzH,GACX,MAAOT,GAAEN,KAAK+G,MAAM,2BAA2B/F,OAAOD,GAAY,MAGtE0H,KAAM,SAAS1H,GACX,MAAOT,GAAEN,KAAK+G,MAAM,uBAAuB/F,OAAOD,GAAY,MAGlE2D,KAAMvC,EAAc9C,EAAMqF,KAAMrF,EAAOA,EAAMqF,MAE7CgE,KAAMvG,EAAc7C,EAAMoJ,KAAMpJ,EAAOA,EAAMoJ,MAE7CnE,KAAM1C,EAAmBvC,EAAMiF,KAAMjF,EAAOA,EAAMiF,MAElDoE,WAAYvH,EAAkB9B,EAAMqJ,WAAYrJ,GAEhDsJ,KAAM/G,EAAmBvC,EAAMsJ,KAAMtJ,EAAOA,EAAMsJ,MAElDC,WAAYzH,EAAkB9B,EAAMuJ,WAAYvJ,GAEhDwJ,KAAMjH,EAAmBvC,EAAMwJ,KAAMxJ,EAAOA,EAAMwJ,MAElDC,WAAY3H,EAAkB9B,EAAMyJ,WAAYzJ,GAEhD0J,IAAK7G,EAAc7C,EAAM0J,IAAK1J,EAAOA,EAAM0J,KAE3CC,OAAQ9G,EAAc1C,EAAKyJ,SAAUzJ,EAAMA,EAAKyJ,UAEhDC,MAAOtH,EAAmBnC,EAAO6I,IAAK7I,GAEtC6I,IAAK1G,EAAmBnC,EAAO6I,IAAK7I,GAEpC+H,MAAO,SAASjH,GACZ,MAAIA,GACOR,KAAKgG,QAAQ1F,EAAEE,GAAM,IAErBR,KAAK2G,SAASpD,WAAWyC,QAAQhG,KAAK,KAKrDoJ,SAAUzH,EAAiBjC,EAAO0J,SAAU1J,GAG5C2J,SAAU/H,EAA+B5B,EAAO2J,SAAU3J,EAAQA,EAAO4J,WAGzEC,YAAajI,EAA+B5B,EAAO6J,YAAa7J,EAAQA,EAAO4J,WAG/EE,YAAalI,EAA+B5B,EAAO8J,YAAa9J,EAAQA,EAAO4J,WAE/EG,UAAWtH,EAAc1C,EAAKgK,UAAWhK,GAEzCiK,WAAYvH,EAAc1C,EAAKiK,WAAYjK,GAE3CkK,SAAU,WACN,GAAK3J,KAAKiE,OAAV,CAEA,GAAIzD,GAAOR,KAAK,EAEhB,OAAOP,GAAKmK,iBAAiBpJ,KAGjCqJ,aAAcjK,EAAYH,EAAKoK,aAAcpK,KAIjDa,EAAE0E,GAAG8E,OAASxJ,EAAE0E,GAAGO,OAGnBjF,EAAE0E,GAAGM,KAAOnD,EAAc1C,EAAK6F,KAAM7F,GAErCa,EAAE0E,GAAG+E,MAAQ5H,EAAc1C,EAAKsK,MAAOtK,EAAMA,EAAKsK,OAElDzJ,EAAE0E,GAAGgF,OAAS7H,EAAc1C,EAAKuK,OAAQvK,EAAMA,EAAKuK,SAEnD,QAAS,UAAUvI,QAAQ,SAASwI,GACjC,GAAYC,GAAYD,EAAUE,QAAQ,IAAK,SAASC,GACpD,MAAOA,GAAE,GAAGC,eAGhB/J,GAAE0E,GAAG,QAAUkF,GAAa,SAASI,EAAQvI,GAWzC,GAVI3B,UAAU6D,OACY,iBAAXqG,KACPvI,EAAQuI,EACRA,GAAS,IAGbA,GAAS,EACTvI,EAAQZ,QAGEA,SAAVY,EAAqB,CACrB,GAAImD,GAAKlF,KAAK,EACd,KAAKkF,EACD,MAEJ,IAAIqF,GAAK9K,EAAK6F,KAAKJ,EACnB,IAAIoF,EAAQ,CACR,GAAIE,GAAK/K,EAAKgL,cAAcvF,EAC5BqF,GAAGR,MAAQQ,EAAGR,MAAQS,EAAGE,KAAOF,EAAGG,MACnCJ,EAAGP,OAASO,EAAGP,OAASQ,EAAGI,IAAMJ,EAAGK,OAExC,MAAqB,UAAdZ,EAAwBM,EAAGR,MAAQQ,EAAGP,OAE7C,MAAOhK,MAAKqB,KAAK,SAASZ,EAAKyE,GAC3B,GAAI4F,MACAN,EAAK/K,EAAKgL,cAAcvF,EACV,WAAd+E,GACAa,EAAGf,MAAQhI,EACPuI,IACAQ,EAAGf,MAAQe,EAAGf,MAAQS,EAAGE,KAAOF,EAAGG,SAGvCG,EAAGd,OAASjI,EACRuI,IACAQ,EAAGd,OAASc,EAAGd,OAASQ,EAAGI,IAAMJ,EAAGK,SAG5CpL,EAAK6F,KAAKJ,EAAI4F,QAO9BxK,EAAE0E,GAAG+F,WAAa5I,EAAc1C,EAAKsK,MAAOtK,EAAMA,EAAKsK,OAEvDzJ,EAAE0E,GAAGgG,YAAc7I,EAAc1C,EAAKuK,OAAQvK,EAAMA,EAAKuK,OAGtC3K,GAAM4L,QAgDzB,OA5BA3K,GAAE0E,GAAGkG,MAAQzG,EAAuBpF,EAAM6L,MAAO7L,GAEjDiB,EAAE0E,GAAGmG,QAAU1G,EAAuBpF,EAAM8L,QAAS9L,GAErDiB,EAAE0E,GAAGoC,OAAS3C,EAAuBpF,EAAM+H,OAAQ/H,GAEnDiB,EAAE0E,GAAG6C,OAASpD,EAAuBpF,EAAMwI,OAAQxI,GAEnDiB,EAAE0E,GAAGoG,YAAc,SAAS1G,GAExB,MADApE,GAAEoE,GAAMwG,MAAMlL,MACPA,MAGXM,EAAE0E,GAAGqG,aAAe,SAAS3G,GAEzB,MADApE,GAAEoE,GAAM0C,OAAOpH,MACRA,MAGXM,EAAE0E,GAAGsG,SAAW,SAAS5G,GAErB,MADApE,GAAEoE,GAAMmD,OAAO7H,MACRA,MAGXM,EAAE0E,GAAGuG,UAAY,SAAS7G,GAEtB,MADApE,GAAEoE,GAAMyG,QAAQnL,MACTA,MAGJM,IAyIX,OAtIA,UAAUA,GACNA,EAAE0E,GAAGwG,GAAKpK,EAAkB7B,EAAQiM,GAAIjM,GAExCe,EAAE0E,GAAGyG,IAAMrK,EAAkB7B,EAAQkM,IAAKlM,GAE1Ce,EAAE0E,GAAG0G,QAAUtK,EAAkB7B,EAAQmM,QAASnM,GAGlD,uLAEkDoM,MAAM,KAAKlK,QAAQ,SAASmK,GAC1EtL,EAAE0E,GAAG4G,GAAS,SAAS9C,EAAMtD,GACzB,MAAQ,KAAKpF,WACTJ,KAAKwL,GAAGI,EAAO9C,EAAMtD,GACrBxF,KAAK0L,QAAQE,MAKzBtL,EAAE0E,GAAG6G,IAAM,SAASD,EAAO7K,EAAU+H,EAAMtD,GAYvC,MAXKpG,GAAMuD,SAAS5B,IAAc3B,EAAMwD,WAAW4C,KAC/CA,EAAWsD,EACXA,EAAO/H,EACPA,EAAW,MAGX3B,EAAMwD,WAAWkG,KACjBtD,EAAWsD,EACXA,EAAO,MAGJ9I,KAAKwL,GAAGI,EAAO7K,EAAU+H,EAAMtD,EAAU,IAGpDlF,EAAE0E,GAAG8G,QAAU1K,EAAkBzB,EAAGmM,QAASnM,GAE7CW,EAAE0E,GAAGiC,KAAO7F,EAAkBzB,EAAGsH,KAAMtH,GACvCW,EAAE0E,GAAGoD,KAAOhH,EAAkBzB,EAAGyI,KAAMzI,GACvCW,EAAE0E,GAAG+G,OAAS3K,EAAkBzB,EAAGoM,OAAQpM,GAC3CW,EAAE0E,GAAGgH,OAAS5K,EAAkBzB,EAAGqM,OAAQrM,GAC3CW,EAAE0E,GAAGiH,OAAS7K,EAAkBzB,EAAGsM,OAAQtM,GAC3CW,EAAE0E,GAAGkH,QAAU9K,EAAkBzB,EAAGuM,QAASvM,GAC7CW,EAAE0E,GAAGmH,WAAa/K,EAAkBzB,EAAGwM,WAAYxM,IACpD6E,GAGH,SAAUlE,GACNA,EAAE0E,GAAGoH,IAAM,WACP,MAAOpM,MAAKqM,YAAc/L,KAG9BA,EAAE0E,GAAGsH,QAAU,WACX,MAAOtM,MAAK4F,IAAI5F,KAAKqM,YAAc/L,MAGvC,6EAA6EqL,MAAM,KAAKlK,QAAQ,SAASuF,GACrG,GAAIhC,GAAK1E,EAAE0E,GAAGgC,EACd1G,GAAE0E,GAAGgC,GAAY,WACb,GAAIuF,GAAMvH,EAAGtE,MAAMV,KAAMI,UAEzB,OADAmM,GAAIF,WAAarM,KACVuM,MAGhB/H,GAGH,SAAUlE,GACNA,EAAE0E,GAAGR,MAAQlE,EAAE0E,GAAGD,KAElBzE,EAAE0E,GAAGwH,MAAQ,SAASC,EAAS9C,GAwB3B,MALIvK,GAAMuD,SAAS8J,GACfA,EAAUjN,EAAOkN,WAAWD,GACrBrK,EAAIqK,KACXA,EAAUA,EAAQ,IAEfzM,KAAKqB,KAAK,SAAS8D,EAAGtB,GACzB,OAAQ8F,GACJ,IAAK,SACDtK,EAAM+H,OAAOqF,EAAS5I,EACtB,MACJ,KAAK,QACDxE,EAAM6L,MAAMuB,EAAS5I,EACrB,MACJ,KAAK,UACDxE,EAAM8K,QAAQsC,EAAS5I,EACvB,MACJ,KAAK,OACDxE,EAAMyH,MAAM2F,GACZpN,EAAMwI,OAAO4E,EAAS5I,EACtB,MACJ,KAAK,QACDxE,EAAM8L,QAAQsB,EAAS5I,EACvB,MAEJ,SACIxE,EAAMwI,OAAO4E,EAAS5I,OAKtCvD,EAAE0E,GAAG2H,WAAa,SAASC,EAASjD,GAIhC,MAHIiD,GAAQC,WACRD,EAAUxN,EAAM0N,WAAWF,EAAQC,SAAUD,IAE1C5M,KAAK6H,OAAO+E,IAGvBtM,EAAE0E,GAAG+H,aAAe,SAASC,EAAUC,GAGnC,MAFAjN,MAAKuJ,YAAY0D,GACjBjN,KAAKqJ,SAAS2D,GACPhN,OAGZwE,GAGIrF,EAAQqF,MAAQA","file":"../query.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem] : [elem, selector]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util,selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem,util] : [elem, selector,util]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    self.attr(props);\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                }))\r\n            },\r\n\r\n            slice: function() { \r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: function(selector, context) {\r\n                var node = this[0],\r\n                    collection = false\r\n                if (typeof selector == 'object') collection = $(selector)\r\n                while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                    node = node !== context && !isDocument(node) && node.parentNode\r\n                return $(node)\r\n            },\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom),\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});"]}