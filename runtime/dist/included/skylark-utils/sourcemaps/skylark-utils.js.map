{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","property","arguments","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","after","placing","refNode","parent","nextSibling","insertBefore","append","before","contents","contentDocument","childNodes","tag","setAttribute","createFragment","html","singleTagRE","test","$1","fragmentRE","containers","container","innerHTML","dom","slice","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","doc","empty","hasChildNodes","firstChild","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","isWindow","_createStyleSheet","external","options","type","count","media","create","rel","async","head","sheetsById","createStyleSheet","sheetId","addSheetRules","deleteSheetRule","rule","sheet","deleteRuleFunc","rulesPropName","_rule","deleteRule","defaultSheetId","removeStyleSheet","insertRule","selector","index","insertSheetRule","addRules","rules","insertRuleFunc","isPlainObject","toString","isAtRule","str","startsWith","json","strAttr","depth","SPACE","repeat","adjust","parentName","strAt","values","strNode","n","adjusted","getElementsByTagName","defaultSheet","removeRule","_insertRule","addRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","idx","$","disabled","enabled","eq","even","focus","activeElement","href","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","defer","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","space","tab","up","keys","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","dragHandle","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","e1","over","dropped","manager","eventName","handle","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","dropzone","droppedCallback","enterdCount","types","items","webkitGetAsEntry","getAsEntry","webentry","then","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","headers","contentRange","FormData","blob","uploadName","encodeURI","contentType","getUploadedBytes","jqXHR","range","getResponseHeader","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","context","currentLoaded","_progress","chunkSize","ajax","done","textStatus","progress","lengthComputable","total","resolveWith","fail","errorThrown","rejectWith","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","processData","Blob","webkitSlice","mozSlice","Xhr","request","url","_bitrateTimer","jqXhr","entry","path","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","evt","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","el","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","makeArray","unshift","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","func","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","charAt","exec","wrapper_node_operation","argType","arg","object","get","toArray","is","isHtmlNode","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","watch","imgs","totalCount","successed","successedCount","failered","faileredCount","img","isLoaded","progressedCount","progressed","isCompleted","naturalWidth","addBackgroundImage","elm1","reURL","Image","childImgs","background","preload","urls","images","viewer","loadedCallback","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","models","methodMap","patch","read","sync","method","entity","defaults","emulateHTTP","emulateJSON","dataType","urlError","attrs","toJSON","_method","beforeSend","xhr","setRequestHeader","Entity","Stateful","isMatch","fetch","success","resp","serverAttrs","set","wrapError","save","validate","wait","_validate","isNew","destroy","stopListening","collection","idAttribute","encodeURIComponent","Collection","entities","comparator","_reset","silent","setOptions","merge","addOptions","array","at","min","tail","partial","initialize","singular","removed","_removeEntitys","changes","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","existing","hasChanged","cid","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","constructor","validationError","_onEntityEvent","prevId","previousAttributes","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","errorCallback","script","state","loadedCallbacks","errorCallbacks","startTime","callbacks","deleteJavaScript","cookies","sKey","unescape","cookie","list","expires","domain","secure","sExpires","Number","vEnd","Infinity","String","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","write","rmfile","readdir","getDirectory","dirEntry","results","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","move","moveTo","chdir","onchdir","fullPath","importFromHost","deferred","f","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","t","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","widgets","defineWidgetClass","delegateEventSplitter","Widget","uniqueId","_ensureElement","$el","render","_removeElement","unlistenTo","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body : function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow : langx.isWindow,\r\n\r\n        offsetParent : offsetParent,\r\n        \r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, noder) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isPlainObject(rules)) {\r\n            css = toString(rules);\r\n        } else {\r\n            css = rules;\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var strAttr = function (name, value, depth) {\r\n            return css.SPACE.repeat(depth) + name.trim() + ': ' + value.trim() + \";\\n\";\r\n        };\r\n\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strAt = function(name,values,depth) {\r\n            var str = \"\";\r\n            if (langx.isString(values)) {\r\n                str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values + \" \\\";\";\r\n            } else if (langx.isPlainObject(values)) {\r\n                str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                str += strNode(\"\",values,depth+1);\r\n                str += css.SPACE.repeat(depth) + \"}\\n\";\r\n\r\n            } else {\r\n                throw new Error(\"Invalid param!\");\r\n            }\r\n            return str;\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\";\r\n            if (name) {\r\n                str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                for (var n in values) {\r\n                    var value =values[n];\r\n                    if (langx.isString(value)) {\r\n                        // css property\r\n                        str += strAttr(n,value,depth+1)\r\n                    }\r\n                }\r\n\r\n                str += css.SPACE.repeat(depth) + \"}\\n\";\r\n            }\r\n\r\n            for (var n in values) {\r\n                var value =values[n];\r\n                if (langx.isPlainObject(value)) {\r\n                    var adjusted = adjust(name,n,depth);\r\n                    str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                } \r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n        var str = \"\";\r\n        for (var n in json) {\r\n            if (isAtRule(n)) {\r\n                str += strAt(n,json[n],0);\r\n            } else {\r\n                str += strNode(n,json[n],0);\r\n            }\r\n        }\r\n        return str;\r\n    };\r\n   \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        marginSize : marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38        \r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys : keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.dragSource,\r\n             dragHandle : draggable.dragHandle\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.dragSource);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          dragHandle : draggable.dragHandle,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n        \r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        var e1 = eventer.create(\"dndStarted\",{\r\n          elm : e.elm,\r\n          dragSource : e.dragSource,\r\n          dragHandle : e.dragHandle,\r\n          ghost : e.ghost,\r\n          transfer : e.transfer\r\n        });\r\n\r\n        this.trigger(e1);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"dndEnded\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self.params = langx.clone(params);\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            var params = self.params;\r\n            if (params.handle) {\r\n              self.dragHandle = finder.closest(e.target,params.handle);\r\n              if (!self.dragHandle) {\r\n                return;\r\n              }\r\n            }\r\n            if (params.source) {\r\n                self.dragSource = finder.closest(e.target,params.source);\r\n            } else {\r\n                self.dragSource = self.elm;\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.attr(self.dragSource, \"draggable\", 'true');\r\n            } \r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              //datax.attr(self.dragSource, \"draggable\", 'false');\r\n              self.dragSource = null;\r\n              self.dragHandle = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.attr(self.dragSource, \"draggable\", 'false');\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"dndStarted\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"dndEnded\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector);\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(options,el) {\r\n\t    \t//for supporting init(el,options)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widgets\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}