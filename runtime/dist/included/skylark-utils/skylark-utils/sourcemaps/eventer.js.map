{"version":3,"sources":["eventer.js"],"names":["define","skylark","langx","browser","finder","noder","datax","compatible","event","source","isDefaultPrevented","each","eventMethods","name","predicate","sourceMethod","this","returnTrue","apply","arguments","returnFalse","parse","segs","split","type","ns","slice","sort","join","createProxy","src","props","key","proxy","originalEvent","ignoreProperties","test","undefined","mixin","off","elm","events","selector","callback","$this","isPlainObject","fn","isString","isFunction","indexOf","handler","findHandler","forEach","unregister","on","data","one","ready","register","stop","window","document","all","keyCode","preventDefault","stopPropagation","trigger","evented","args","e","Event","createEvent","_args","dispatchEvent","call","console","warn","readyRE","readyState","body","defer","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","nodeName","add","pattern","shortcutKeys","toLowerCase","shortcutKey","setting","charCodeAt","keyCodeLookup","toUpperCase","regKey","eventer","uid","Array","prototype","stopImmediatePropagation","getEventCtor","idx","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","submit","reset","focus","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","parsed","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","klass","init","_target","_event","_bindings","options","bindings","binding","push","self","_listener","domEvt","isDefined","concat","match","isImmediatePropagationStopped","closest","currentTarget","liveFired","related","relatedTarget","contains","remove","result","matcherFor","RegExp","replace","matcher","filter","removing","length","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","id","backspace","comma","delete","down","end","enter","escape","home","left","page_down","page_up","period","right","space","tab","up","create","keys","special"],"mappings":"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","file":"../eventer.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38        \r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys : keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n"]}