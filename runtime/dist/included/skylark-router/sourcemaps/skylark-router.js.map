{"version":3,"sources":["skylark-router.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","createEvent","type","props","e","CustomEvent","safeMixin","current","_curCtx","dispatch","ctx","ret","route","exit","path","params","_prevCtx","m","r","enter","Deferred","when","then","_hub","trigger","previous","go","force","router","useHistoryApi","state","history","pushState","document","title","_baseUrl","replace","dispatchEvent","useHashbang","newHash","location","hash","noCache","finded","_cache","each","_routes","name","match","routeName","baseUrl","isDefined","this","hub","homePath","_homePath","setting","settings","routes","mixin","Route","start","host","initPath","pathname","undefined","startsWith","addEventListener","preventDefault","Evented","inherit","klassName","init","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","self","eventName","isFunction","on","query","_entering","result","_entered","ok","_exiting","_exited","names","x","indexOf","slice","decodeURIComponent","exec","len","val","off","arguments","one","main"],"mappings":"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","file":"../skylark-router.js","sourcesContent":["define('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylark-router/main',[\r\n    \"skylark-langx/skylark\",\r\n    \"./router\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-router', ['skylark-router/main'], function (main) { return main; });\n\n"]}