{"version":3,"sources":["skylarkjs.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","xhrGet","url","callback","xhr","XMLHttpRequest","onreadystatechange","this","readyState","response","responseText","open","send","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","cb","requireOne","hasOwnProperty","Error","module","args","forEach","apply","window","onedep","modules","config","baseUrl","skylarkjs","skylark","http","res","console","error","cfg","JSON","parse","runtime","contextPath","initApp","spa","app","go","path","force","prepare","then","run","spaModule","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","arguments","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","clone","src","copy","isArray","isPlainObject","key","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","e","each","obj","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","location","href","segs","params","queryParam","nv","inArray","indexOf","object","constructor","Array","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isObject","isWindow","Object","getPrototypeOf","prototype","isDefined","Node","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","makeArray","offset","startWith","concat","slice","elements","values","nextTick","requestAnimationFrame","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","source","deep","safe","_parseMixinArgs","shift","sources","mixin","safeMixin","substitute","template","transform","thisObject","getObject","match","retVal","getValue","keys","_k","reverse","v","format","toString","uid","_uid","uniq","langx","createClass","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","superFn","tmp","overrided","ret","parent","_constructor","init","klassName","Function","create","__proto__","partial","inherit","delegate","TMP","Deferred","promise","Promise","resolve","reject","_resolve","_reject","bind","reason","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","progress","err","d","data","immediate","Evented","on","events","selector","ctx","one","self","_hub","trigger","CustomEvent","eventName","listeners","len","reCompact","listener","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","a","document","createElement","class2type","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","createEvent","current","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","router","useHistoryApi","state","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","hash","noCache","finded","_cache","_routes","routeName","hub","homePath","_homePath","setting","settings","routes","Route","start","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","query","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","val","content","forceRefresh","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","plugins","_plugins","_config","pluginName","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","cssPropName","support","maybeAddPx","cssNumber","classRE","classReCache","className","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","cls","re","property","computedStyle","prop","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","ensureNodes","nodes","copyByClone","cloneNode","chkName","contents","contentDocument","childNodes","html","empty","isIE","getAttribs","attr","setAttrib","getAttrib","tag","append","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","placing","refNode","nextSibling","insertBefore","prepend","overlay","overlayDiv","position","top","left","width","height","zIndex","oldNode","replaceChild","throb","timer","time","throbber","textNode","update","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","index","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","rootIsSelector","matches","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","attributes","operator","cache","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","checkbox","checked","disabled","enabled","eq","focus","activeElement","tabindex","gt","has","sel","hidden","lt","not","radio","selected","visible","offsetWidth","isArrayFilter","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","prev","divided","single","currentBit","founds","found","currentItems","finder","setAttribute","removeAttribute","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","relativeRect","scrollIntoView","align","getOffset","rootElm","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","sort","createProxy","originalEvent","ignoreProperties","$this","handler","findHandler","unregister","ready","register","stop","keyCode","stopPropagation","evented","Event","_args","readyRE","shortcuts","registry","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","add","shortcutKeys","shortcutKey","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","l","related","relatedTarget","warn","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","delete","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","dragSource","handleElm","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","Blob","createObjectURL","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","animationDelay","fast","slow","mimeToDataType","mime","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","ajaxSuccess","status","success","ajaxComplete","ajaxError","ajax","ajaxSettings","crossDomain","abortTimeout","dataType","accepts","headers","setHeader","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","getResponseHeader","eval","responseXML","blankRE","statusText","username","password","get","parseArguments","post","getJSON","beforeSend","global","script","json","xml","gtJSON","_place","choices","layoutNode","aroundNodeCoords","win","view","best","some","choice","corner","overflow","spaceAvailable","w","L","R","M","h","T","B","aroundCorner","bb","startXpos","min","startYpos","startX","startY","endX","endY","at","corners","padding","c","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","b","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","wrapper_map","func","elem","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","el","toArray","is","excludes","collection","parents","parentsUntil","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","detach","Dimension","margin","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","place","addContent","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","_delegator","domNode","HTMLElement","VisualElement","batch","action","main"],"mappings":"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AtzB,EAAAkL,EAAAlL,EACAc,GAAA0yB,GAAA9rC,MAAAoZ,EAAAtZ,KAGAtB,MAGAklB,KAAA,GAAAkoB,GAAAj8B,SAAAmJ,MAEA8yB,cAAAA,EAEA9/B,QAAA,SAAApE,EAAAhE,GACA,GAAAmH,KAEAA,GAAAnD,GAAAhE,EAEAkoC,EAAA9/B,QAAAjB,IAGAmB,SAAA,SAAA+H,EAAA3O,GACA,GAAAyF,KAEAkJ,GAAAhU,QAAA,SAAA2H,GACAmD,EAAAnD,GAAA+jC,EAAArmC,EAAAsC,GAAAtC,KAGAwmC,EAAA9/B,QAAAjB,MAKA2Y,EAAAxX,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACA8f,GAGAtI,EAAAxX,UACA,YACA,aACAstB,GAIA9V,EAAAxX,UACA,MACA,KACA,MACA,YACA,WACA0nB,GAGAlQ,EAAAxX,UACA,SACA,YACA6vB,GAGArY,EAAAxX,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAue,GAEA/G,EAAAc,KAAA,SAAAxW,GACA,MAAA,SAAAA,EACAtP,KAAAklB,KAEAllB,KAAAklB,KAAAW,WAAAvW,IAKA0V,EAAAxX,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAqyB,GAIA7a,EAAAxX,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAilB,GAGAzN,EAAAxX,UACA,WACAstB,GAIA9V,EAAAxX,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAkT,GAGAsE,EAAAxX,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAqN,GACA9Y,EAAAijB,KAAAA,IAGA1kB,EAAA,kBACA,sBACA,SAAA0kB,GACA,MAAAA,KAGA1kB,EAAA,kBACA,SACA,YACA,QACA,UACA,QACA,YACA,UACA,WACA,OACA,SACA,SACA,UACA,UACA,UACA,aACA,WACA,UACA,SAAAyB,GACA,MAAAA,KAGAzB,EAAA,aAAA,kBAAA,SAAAitC,GAAA,MAAAA,MAgJEvtC","file":"../skylarkjs.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylarkjs/skylark',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter;\r\n\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                proto[name] = typeof props[name] == \"function\" && !noOverrided && typeof _super[name] == \"function\" ?\r\n                    (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"ctor._constructor.apply(inst, arguments);\" +\r\n                    \"return inst;\" +\r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, options) {\r\n                    return createClass(props, this, options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n\r\n    function clone( /*anything*/ src) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    var Deferred = function() {\r\n        this.promise = new Promise(function(resolve, reject) {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        }.bind(this));\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item) > -1;\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function nextTick(fn) {\r\n        requestAnimationFrame(fn);\r\n        return this;\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        nextTick: nextTick,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: window.URL || window.webkitURL\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.5\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylarkjs/router',[\r\n    \"skylark-router/router\"\r\n], function(router) {\r\n    return router;\r\n});\r\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylarkjs/spa',[\r\n    \"skylark-spa/spa\"\r\n], function(spa) {\r\n    return spa;\r\n});\r\n\ndefine('skylarkjs/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylarkjs/core',[\r\n    \"./skylark\",\r\n    \"./router\",\r\n    \"./spa\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylarkjs/browser',[\r\n    \"skylark-utils/browser\"\r\n], function(browser) {\r\n    return browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            langx.mixin(node, props);\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylarkjs/css',[\r\n    \"skylark-utils/css\"\r\n], function(css) {\r\n    return css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        'checkbox': function(elm){\r\n            return elm.type === \"checkbox\";\r\n        },\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return local.querySelector(elm, sel).length > 0;\r\n        },\r\n\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return local.match(elm, sel);\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'radio': function(elm){\r\n            return elm.type === \"radio\";\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        local.pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n                ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector);\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylarkjs/datax',[\r\n    \"skylark-utils/datax\"\r\n], function(datax) {\r\n    return datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type;\r\n                type = props.type;\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                var listener = events[event];\r\n\r\n                if (listener) {\r\n                    listener.remove(fn, langx.mixin({\r\n                        ns: parsed.ns\r\n                    }, options));\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        (evented.dispatchEvent || evented.trigger).call(evented, e);\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylarkjs/dnd',[\r\n    \"skylark-utils/dnd\"\r\n], function(dnd) {\r\n    return dnd;\r\n});\r\n\ndefine('skylarkjs/eventer',[\r\n    \"skylark-utils/eventer\"\r\n], function(eventer) {\r\n    return eventer;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylarkjs/filer',[\r\n    \"skylark-utils/filer\"\r\n], function(filer) {\r\n    return filer;\r\n});\r\n\ndefine('skylarkjs/finder',[\r\n    \"skylark-utils/finder\"\r\n], function(finder) {\r\n    return finder;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if(i<=freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(this);\r\n            if (complete) {\r\n                complete.call(this);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing,allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing,callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing,callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\r\n\ndefine('skylarkjs/fx',[\r\n    \"skylark-utils/fx\"\r\n], function(fx) {\r\n    return fx;\r\n});\r\n\ndefine('skylarkjs/geom',[\r\n    \"skylark-utils/geom\"\r\n], function(geom) {\r\n    return geom;\r\n});\r\n\ndefine('skylark-utils/http',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n],function(skylark, langx){\r\n    var Deferred = langx.Deferred,\r\n        blankRE = /^\\s*$/,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i;\r\n\r\n\r\n    function empty() {}\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest();\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: 'application/json',\r\n            xml: 'application/xml, text/xml',\r\n            html: 'text/html',\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    }\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) {\r\n            mime = mime.split(';', 2)[0];\r\n        }\r\n        return mime && (mime == 'text/html' ? 'html' :\r\n            mime == 'application/json' ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text';\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') {\r\n            return url;\r\n        }\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?');\r\n    }\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value);\r\n            if (scope) {\r\n                key = traditional ? scope :\r\n                        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']' ;\r\n            }\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) {\r\n                params.add(value.name, value.value);\r\n            // recurse into nested objects\r\n            } else if (type == \"array\" || (!traditional && type == \"object\")) {\r\n                serialize(params, value, traditional, key);\r\n            } else {\r\n                params.add(key, value);\r\n            }\r\n        })\r\n    }    \r\n\r\n    function param(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) {\r\n                value = value();\r\n            }\r\n            if (value == null) {\r\n                value = \"\";\r\n            }\r\n            this.push(escape(key) + '=' + escape(value));\r\n        }\r\n        \r\n        serialize(params, obj, traditional);\r\n\r\n        return params.join('&').replace(/%20/g, '+')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && !langx.isString(options.data)) {\r\n            options.data = $.param(options.data, options.traditional)\r\n        }\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n            options.url = appendQuery(options.url, options.data);\r\n            options.data = undefined;\r\n        }\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        //if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        //triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        //if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        //triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        //triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        //ajaxStop(settings)\r\n    }    \r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options),\r\n            deferred = new Deferred();\r\n\r\n        langx.safeMixin(settings,ajaxSettings);\r\n\r\n        //ajaxStart(settings)\r\n        if (!settings.crossDomain) {\r\n        //    settings.crossDomain = !langx.isSameOrigin(settings.url);\r\n        }\r\n\r\n        serializeData(settings);\r\n        var dataType = settings.dataType;\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout;\r\n\r\n        //if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) {\r\n            setHeader('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET')) {\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n        }\r\n\r\n        if (settings.headers) {\r\n            for (name in settings.headers) {\r\n                setHeader(name, settings.headers[name]);\r\n            }    \r\n        }\r\n        xhr.setRequestHeader = setHeader;\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script') {\r\n                            (1, eval)(result);\r\n                        } else if (dataType == 'xml') {\r\n                            result = xhr.responseXML\r\n                        } else if (dataType == 'json') {\r\n                            result = blankRE.test(result) ? null : JSON.parse(result);\r\n                        }\r\n                    } catch (e) { \r\n                        error = e \r\n                    }\r\n\r\n                    if (error) {\r\n                        ajaxError(error, 'parsererror', xhr, settings, deferred);\r\n                    } else {\r\n                        ajaxSuccess(result, xhr, settings, deferred);\r\n                    }\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred);\r\n                }\r\n            }\r\n        }\r\n\r\n        /*\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n        */\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) {\r\n            nativeSetHeader.apply(xhr, headers[name]);\r\n        }\r\n\r\n        if (settings.timeout > 0) {\r\n            abortTimeout = setTimeout(function() {\r\n                xhr.onreadystatechange = empty;\r\n                xhr.abort();\r\n                ajaxError(null, 'timeout', xhr, settings, deferred);\r\n            }, settings.timeout);\r\n        }\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr;\r\n    }\r\n\r\n\r\n    function get( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    function post( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.type = 'POST';\r\n        return ajax(options);\r\n    }\r\n\r\n    function getJSON( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.dataType = 'json';\r\n        return ajax(options);\r\n    }    \r\n\r\n\r\n    function http(){\r\n      return http;\r\n    }\r\n\r\n    langx.mixin(http, {\r\n        ajax: ajax,\r\n\r\n        get: get,\r\n        \r\n        gtJSON: getJSON,\r\n\r\n        post: post\r\n\r\n    });\r\n\r\n    return skylark.http = http;\r\n});\r\n\ndefine('skylarkjs/http',[\r\n    \"skylark-utils/http\"\r\n], function(http) {\r\n    return http;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                var l = originalPos.left + e.deltaX,\r\n                    t = originalPos.top + e.deltaY;\r\n                if (constraints) {\r\n\r\n                    if (l < constraints.minX) {\r\n                        l = constraints.minX;\r\n                    }\r\n\r\n                    if (l > constraints.maxX) {\r\n                        l = constraints.maxX;\r\n                    }\r\n\r\n                    if (t < constraints.minY) {\r\n                        t = constraints.minY;\r\n                    }\r\n\r\n                    if (t > constraints.maxY) {\r\n                        t = constraints.maxY;\r\n                    }\r\n                }\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylarkjs/mover',[\r\n    \"skylark-utils/mover\"\r\n], function(mover) {\r\n    return mover;\r\n});\r\n\ndefine('skylarkjs/noder',[\r\n    \"skylark-utils/noder\"\r\n], function(noder) {\r\n    return noder;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem] : [elem, selector]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util,selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem,util] : [elem, selector,util]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    self.attr(props);\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                }))\r\n            },\r\n\r\n            slice: function() { \r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: function(selector, context) {\r\n                var node = this[0],\r\n                    collection = false\r\n                if (typeof selector == 'object') collection = $(selector)\r\n                while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                    node = node !== context && !isDocument(node) && node.parentNode\r\n                return $(node)\r\n            },\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom),\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylarkjs/query',[\r\n    \"skylark-utils/query\"\r\n], function(query) {\r\n    return query;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylarkjs/scripter',[\r\n    \"skylark-utils/scripter\"\r\n], function(scripter) {\r\n    return scripter;\r\n});\r\n\ndefine('skylarkjs/styler',[\r\n    \"skylark-utils/styler\"\r\n], function(styler) {\r\n    return styler;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylarkjs/velm',[\r\n    \"skylark-utils/velm\"\r\n], function(velm) {\r\n    return velm;\r\n});\r\n\ndefine('skylarkjs/main',[\r\n    \"./core\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./http\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./velm\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylarkjs', ['skylarkjs/main'], function (main) { return main; });\n\n"]}