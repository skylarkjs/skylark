{"version":3,"sources":["skylarkjs-core.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","xhrGet","url","callback","xhr","XMLHttpRequest","onreadystatechange","this","readyState","response","responseText","open","send","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","cb","requireOne","hasOwnProperty","Error","module","args","forEach","apply","window","onedep","modules","config","baseUrl","skylarkjs","skylark","http","res","console","error","cfg","JSON","parse","runtime","initApp","spa","_cfg","contextPath","app","go","path","force","prepare","then","run","spaModule","_start","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","arguments","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","clone","src","checkCloneMethod","copy","isArray","isPlainObject","key","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","each","obj","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","location","href","segs","params","queryParam","nv","inArray","indexOf","object","constructor","Array","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isObject","isWindow","Object","getPrototypeOf","prototype","isDefined","Node","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","makeArray","offset","startWith","concat","slice","elements","values","nextTick","requestAnimationFrame","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","source","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","keys","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","createClass","extendClass","ctor","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","parent","init","klassName","Function","create","__proto__","partial","inherit","delegate","TMP","Deferred","promise","Promise","resolve","reject","_resolve","_reject","bind","reason","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","progress","err","d","data","immediate","deepEq","Evented","on","events","selector","ctx","one","self","_hub","trigger","eventName","listeners","len","reCompact","listener","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","SymbolProto","document","createElement","Symbol","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","class2type","Stateful","attributes","attrs","cid","cidPrefix","collection","defaults","set","changed","validationError","idAttribute","toJSON","get","attr","has","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","router","useHistoryApi","state","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","hash","noCache","finded","_cache","_routes","routeName","hub","homePath","_homePath","setting","settings","routes","Route","start","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","query","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","content","forceRefresh","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","plugins","_plugins","_config","pluginName","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","main"],"mappings":"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","file":"../skylarkjs-core.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylarkjs/skylark',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter;\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n              proto[name] = typeof props[name] == \"function\" && !props[name]._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                      (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"ctor._constructor.apply(inst, arguments);\" +\r\n                    \"return inst;\" +\r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, options) {\r\n                    return createClass(props, this, options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    var Deferred = function() {\r\n        this.promise = new Promise(function(resolve, reject) {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        }.bind(this));\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            e.target = this;\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    \r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  var eq, deepEq;\r\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n  eq = function(a, b, aStack, bStack) {\r\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n    // `null` or `undefined` only equal to itself (strict comparison).\r\n    if (a == null || b == null) return false;\r\n    // `NaN`s are equivalent, but non-reflexive.\r\n    if (a !== a) return b !== b;\r\n    // Exhaust primitive checks\r\n    var type = typeof a;\r\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n    return deepEq(a, b, aStack, bStack);\r\n  };\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  deepEq = function(a, b, aStack, bStack) {\r\n    // Unwrap any wrapped objects.\r\n    //if (a instanceof _) a = a._wrapped;\r\n    //if (b instanceof _) b = b._wrapped;\r\n    // Compare `[[Class]]` names.\r\n    var className = toString.call(a);\r\n    if (className !== toString.call(b)) return false;\r\n    switch (className) {\r\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n      case '[object RegExp]':\r\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n      case '[object String]':\r\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n        // equivalent to `new String(\"5\")`.\r\n        return '' + a === '' + b;\r\n      case '[object Number]':\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        // Object(NaN) is equivalent to NaN.\r\n        if (+a !== +a) return +b !== +b;\r\n        // An `egal` comparison is performed for other numeric values.\r\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n      case '[object Date]':\r\n      case '[object Boolean]':\r\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n        // millisecond representations. Note that invalid dates with millisecond representations\r\n        // of `NaN` are not equivalent.\r\n        return +a === +b;\r\n      case '[object Symbol]':\r\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n    }\r\n\r\n    var areArrays = className === '[object Array]';\r\n    if (!areArrays) {\r\n      if (typeof a != 'object' || typeof b != 'object') return false;\r\n\r\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n      // from different frames are.\r\n      var aCtor = a.constructor, bCtor = b.constructor;\r\n      if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n        return false;\r\n      }\r\n    }\r\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n    // Initializing stack of traversed objects.\r\n    // It's done here since we only need them for objects and arrays comparison.\r\n    aStack = aStack || [];\r\n    bStack = bStack || [];\r\n    var length = aStack.length;\r\n    while (length--) {\r\n      // Linear search. Performance is inversely proportional to the number of\r\n      // unique nested structures.\r\n      if (aStack[length] === a) return bStack[length] === b;\r\n    }\r\n\r\n    // Add the first object to the stack of traversed objects.\r\n    aStack.push(a);\r\n    bStack.push(b);\r\n\r\n    // Recursively compare objects and arrays.\r\n    if (areArrays) {\r\n      // Compare array lengths to determine if a deep comparison is necessary.\r\n      length = a.length;\r\n      if (length !== b.length) return false;\r\n      // Deep compare the contents, ignoring non-numeric properties.\r\n      while (length--) {\r\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n      }\r\n    } else {\r\n      // Deep compare objects.\r\n      var keys = Object.keys(a), key;\r\n      length = keys.length;\r\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n      if (Object.keys(b).length !== length) return false;\r\n      while (length--) {\r\n        // Deep compare each member\r\n        key = keys[length];\r\n        if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n      }\r\n    }\r\n    // Remove the first object from the stack of traversed objects.\r\n    aStack.pop();\r\n    bStack.pop();\r\n    return true;\r\n  };\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function nextTick(fn) {\r\n        requestAnimationFrame(fn);\r\n        return this;\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        nextTick: nextTick,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: window.URL || window.webkitURL\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.6-beta\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylarkjs/router',[\r\n    \"skylark-router/router\"\r\n], function(router) {\r\n    return router;\r\n});\r\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylarkjs/spa',[\r\n    \"skylark-spa/spa\"\r\n], function(spa) {\r\n    return spa;\r\n});\r\n\ndefine('skylarkjs/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylarkjs/core',[\r\n    \"./skylark\",\r\n    \"./router\",\r\n    \"./spa\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylarkjs', ['skylarkjs/core'], function (main) { return main; });\n\n"]}