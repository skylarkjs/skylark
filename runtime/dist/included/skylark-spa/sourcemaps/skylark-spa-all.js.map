{"version":3,"sources":["skylark-spa-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","has","path","inArray","indexOf","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","prototype","isDefined","Node","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","deepEq","PGLISTENERS","Symbol","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","createClass","extendClass","ctor","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","parent","init","klassName","Function","create","__proto__","partial","inherit","delegate","TMP","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","then","onResolved","onRejected","onProgress","progress","done","handler","fail","bind","listener","error","reason","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","get","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","force","go","router","useHistoryApi","state","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","hash","noCache","finded","_cache","_routes","routeName","baseUrl","hub","homePath","_homePath","setting","settings","routes","Route","start","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","query","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","main","app","content","forceRefresh","_prepared","prepare","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","config","plugins","_plugins","_config","pluginName","_page","spa","page","baseURI","getConfig","promises0","promises1","lazy","promises2","run"],"mappings":"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","file":"../skylark-spa-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n              proto[name] = typeof props[name] == \"function\" && !props[name]._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                      (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, options) {\r\n                    return createClass(props, this, options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        mixin(p,{\r\n            then : function(onResolved,onRejected,onProgress) {\r\n                if (onProgress) {\r\n                    this.progress(onProgress);\r\n                }\r\n                return Promise.prototype.then.call(this,onResolved,onRejected);\r\n            },\r\n            done : function(handler) {\r\n                return Promise.prototype.then.call(this,handler);\r\n            },\r\n            fail : function(handler) { \r\n                return Promise.prototype.catch.call(this,handler);\r\n            }, \r\n            progress : function(handler) {\r\n                self[PGLISTENERS].push(handler);\r\n                return this;\r\n            }\r\n\r\n        });\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n        this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            e.target = this;\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.6-beta\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylark-router', ['skylark-router/router'], function (main) { return main; });\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        baseUrl : function() {\r\n            return router.baseUrl();\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylark-spa/main',[\r\n    \"skylark-langx/skylark\",\r\n    \"./spa\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-spa', ['skylark-spa/main'], function (main) { return main; });\n\n"]}