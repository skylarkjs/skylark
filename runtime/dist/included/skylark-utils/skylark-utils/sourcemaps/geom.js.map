{"version":3,"sources":["geom.js"],"names":["define","skylark","langx","noder","styler","scrollbarWidth","undefined","cachedScrollbarWidth","w1","w2","div","createFragment","innerDiv","childNodes","append","document","body","offsetWidth","css","clientWidth","remove","borderExtents","elm","s","getComputedStyle","left","px","borderLeftWidth","top","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","rootNodeRE","test","nodeName","getBoundingClientRect","parent","offsetParent","parentOffset","mex","marginExtents","pbex","relativePosition","this","boundingRect","size","clientHeight","value","clientSize","height","dimension","width","isBorderBox","props","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","doc","documentElement","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","window","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","nodeType","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","parentNode","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","isWindow","innerWidth","innerHeight","isDocument","geom","toPixel","mixin"],"mappings":"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","file":"../geom.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n"]}