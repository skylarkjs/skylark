{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","property","arguments","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","contents","contentDocument","childNodes","html","innerHTML","empty","isNumber","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","tag","createFragment","singleTagRE","test","$1","fragmentRE","containers","container","dom","slice","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","parent","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","after","placing","refNode","nextSibling","insertBefore","before","prepend","append","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","type","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","selector","index","addRule","createStyleSheet","loadStyleSheet","url","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","href","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","filter","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","rootIsSelector","matches","ancestors","ret","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","checkbox","checked","idx","disabled","enabled","eq","focus","activeElement","tabindex","gt","has","sel","hidden","lt","not","radio","selected","visible","offsetWidth","item","isArrayFilter","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","setAttribute","removeAttribute","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","obj","pageXOffset","pageYOffset","pageRect","round","offset","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","isWindow","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","e","Event","createEvent","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","result","l","related","relatedTarget","console","warn","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","delete","create","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","handleElm","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","_params","eventName","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","src","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","selectFile","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","Blob","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","animationDelay","fast","slow","mimeToDataType","mime","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","ajaxSuccess","xhr","settings","deferred","context","status","success","ajaxComplete","ajaxError","ajax","ajaxSettings","crossDomain","abortTimeout","dataType","accepts","headers","setHeader","protocol","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseText","eval","responseXML","blankRE","statusText","open","username","password","timeout","send","get","parseArguments","post","getJSON","http","beforeSend","global","XMLHttpRequest","script","json","xml","gtJSON","_place","choices","layoutNode","aroundNodeCoords","win","view","String","best","some","choice","corner","overflow","spaceAvailable","w","L","R","M","charAt","h","T","B","res","aroundCorner","bb","startXpos","min","startYpos","startX","startY","endX","endY","at","corners","padding","c","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","b","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","array","ltr","movable","updateWithTouchData","keys","changedTouches","downButton","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","wrapper_map","func","elem","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","exec","wrapper_node_operation","argType","arg","object","el","toArray","is","excludes","collection","parents","parentsUntil","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","detach","Dimension","m","margin","cb","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","cookies","sKey","unescape","cookie","escape","list","path","set","expires","domain","secure","sExpires","constructor","Number","vEnd","Infinity","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","results","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","f","exportToHost","request","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","img","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","now","_DBLCLICK","_dispatchEvent","_reset","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","toString","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","partial","delegate","main"],"mappings":"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,KAAA,SAAA1D,GACA,MAAA,SAAAA,EACAjK,KAAA4M,KAEA5M,KAAA4M,KAAAa,WAAAxD,IAKAyC,EAAA67B,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAhb,GAIA7gB,EAAA67B,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACA5sB,GAGAjP,EAAA67B,UACA,WACAliB,GAIA3Z,EAAA67B,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAzgC,GAGA4E,EAAA67B,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAzoC,GACA1D,EAAAsQ,KAAAA,IAGAzR,EAAA,sBACA,YACA,YACA,QACA,UACA,QACA,YACA,YACA,UACA,WACA,OACA,SACA,SACA,UACA,UACA,UACA,aACA,aACA,WACA,WACA,UACA,UACA,SAAAmB,GACA,MAAAA,KAGAnB,EAAA,iBAAA,sBAAA,SAAAutC,GAAA,MAAAA,MA8EExoC","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            langx.mixin(node, props);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent) {\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        'checkbox': function(elm){\r\n            return elm.type === \"checkbox\";\r\n        },\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return local.querySelector(elm, sel).length > 0;\r\n        },\r\n\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return local.match(elm, sel);\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'radio': function(elm){\r\n            return elm.type === \"radio\";\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        local.pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed = local.Slick.parse(selector);\r\n\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = filter.call(nodes, function(node, idx) {\r\n                    return local.check(node, exp, idx, nodes,false);\r\n                });    \r\n\r\n                matchs = filter.call(matchs, function(node, idx) {\r\n                    return local.check(node, exp, idx, matchs,true);\r\n                });    \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n                ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(selector) {\r\n        return descendant(document.body, selector);\r\n    }\r\n\r\n    function findAll(selector) {\r\n        return descendants(document.body, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector);\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type;\r\n                type = props.type;\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                var listener = events[event];\r\n\r\n                if (listener) {\r\n                    listener.remove(fn, langx.mixin({\r\n                        ns: parsed.ns\r\n                    }, options));\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        (evented.dispatchEvent || evented.trigger).call(evented, e);\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if(i<=freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(this);\r\n            if (complete) {\r\n                complete.call(this);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing,allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing,callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing,callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\r\n\ndefine('skylark-utils/http',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n],function(skylark, langx){\r\n    var Deferred = langx.Deferred,\r\n        blankRE = /^\\s*$/,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i;\r\n\r\n\r\n    function empty() {}\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest();\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: 'application/json',\r\n            xml: 'application/xml, text/xml',\r\n            html: 'text/html',\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    }\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) {\r\n            mime = mime.split(';', 2)[0];\r\n        }\r\n        return mime && (mime == 'text/html' ? 'html' :\r\n            mime == 'application/json' ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text';\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') {\r\n            return url;\r\n        }\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?');\r\n    }\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value);\r\n            if (scope) {\r\n                key = traditional ? scope :\r\n                        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']' ;\r\n            }\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) {\r\n                params.add(value.name, value.value);\r\n            // recurse into nested objects\r\n            } else if (type == \"array\" || (!traditional && type == \"object\")) {\r\n                serialize(params, value, traditional, key);\r\n            } else {\r\n                params.add(key, value);\r\n            }\r\n        })\r\n    }    \r\n\r\n    function param(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) {\r\n                value = value();\r\n            }\r\n            if (value == null) {\r\n                value = \"\";\r\n            }\r\n            this.push(escape(key) + '=' + escape(value));\r\n        }\r\n        \r\n        serialize(params, obj, traditional);\r\n\r\n        return params.join('&').replace(/%20/g, '+')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && !langx.isString(options.data)) {\r\n            options.data = $.param(options.data, options.traditional)\r\n        }\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n            options.url = appendQuery(options.url, options.data);\r\n            options.data = undefined;\r\n        }\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        //if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        //triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        //if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        //triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        //triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        //ajaxStop(settings)\r\n    }    \r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options),\r\n            deferred = new Deferred();\r\n\r\n        langx.safeMixin(settings,ajaxSettings);\r\n\r\n        //ajaxStart(settings)\r\n        if (!settings.crossDomain) {\r\n        //    settings.crossDomain = !langx.isSameOrigin(settings.url);\r\n        }\r\n\r\n        serializeData(settings);\r\n        var dataType = settings.dataType;\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout;\r\n\r\n        //if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) {\r\n            setHeader('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET')) {\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n        }\r\n\r\n        if (settings.headers) {\r\n            for (name in settings.headers) {\r\n                setHeader(name, settings.headers[name]);\r\n            }    \r\n        }\r\n        xhr.setRequestHeader = setHeader;\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script') {\r\n                            (1, eval)(result);\r\n                        } else if (dataType == 'xml') {\r\n                            result = xhr.responseXML\r\n                        } else if (dataType == 'json') {\r\n                            result = blankRE.test(result) ? null : JSON.parse(result);\r\n                        }\r\n                    } catch (e) { \r\n                        error = e \r\n                    }\r\n\r\n                    if (error) {\r\n                        ajaxError(error, 'parsererror', xhr, settings, deferred);\r\n                    } else {\r\n                        ajaxSuccess(result, xhr, settings, deferred);\r\n                    }\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred);\r\n                }\r\n            }\r\n        }\r\n\r\n        /*\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n        */\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) {\r\n            nativeSetHeader.apply(xhr, headers[name]);\r\n        }\r\n\r\n        if (settings.timeout > 0) {\r\n            abortTimeout = setTimeout(function() {\r\n                xhr.onreadystatechange = empty;\r\n                xhr.abort();\r\n                ajaxError(null, 'timeout', xhr, settings, deferred);\r\n            }, settings.timeout);\r\n        }\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr;\r\n    }\r\n\r\n\r\n    function get( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    function post( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.type = 'POST';\r\n        return ajax(options);\r\n    }\r\n\r\n    function getJSON( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.dataType = 'json';\r\n        return ajax(options);\r\n    }    \r\n\r\n\r\n    function http(){\r\n      return http;\r\n    }\r\n\r\n    langx.mixin(http, {\r\n        ajax: ajax,\r\n\r\n        get: get,\r\n        \r\n        gtJSON: getJSON,\r\n\r\n        post: post\r\n\r\n    });\r\n\r\n    return skylark.http = http;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                var l = originalPos.left + e.deltaX,\r\n                    t = originalPos.top + e.deltaY;\r\n                if (constraints) {\r\n\r\n                    if (l < constraints.minX) {\r\n                        l = constraints.minX;\r\n                    }\r\n\r\n                    if (l > constraints.maxX) {\r\n                        l = constraints.maxX;\r\n                    }\r\n\r\n                    if (t < constraints.minY) {\r\n                        t = constraints.minY;\r\n                    }\r\n\r\n                    if (t > constraints.maxY) {\r\n                        t = constraints.maxY;\r\n                    }\r\n                }\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem] : [elem, selector]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util,selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem,util] : [elem, selector,util]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    self.attr(props);\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                }))\r\n            },\r\n\r\n            slice: function() { \r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: function(selector, context) {\r\n                var node = this[0],\r\n                    collection = false\r\n                if (typeof selector == 'object') collection = $(selector)\r\n                while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                    node = node !== context && !isDocument(node) && node.parentNode\r\n                return $(node)\r\n            },\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom),\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./http\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}