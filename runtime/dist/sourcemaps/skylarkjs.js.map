{"version":3,"sources":["skylarkjs.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","xhrGet","url","callback","xhr","XMLHttpRequest","onreadystatechange","this","readyState","response","responseText","open","send","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","cb","requireOne","hasOwnProperty","Error","module","args","forEach","apply","window","onedep","modules","config","baseUrl","skylarkjs","skylark","http","res","console","error","cfg","JSON","parse","runtime","initApp","spa","_cfg","contextPath","app","go","path","force","prepare","then","run","spaModule","_start","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","each","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","location","href","segs","params","queryParam","nv","grep","out","has","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","get","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","ArrayStore","klassName-","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","async","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","eval","responseXML","Blob","xhrObj","reponse","statusText","evt","hdr","setRequestHeader","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","router","useHistoryApi","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","noCache","finded","_cache","_routes","routeName","hub","homePath","_homePath","setting","settings","routes","Route","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","content","forceRefresh","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","plugins","_plugins","_config","pluginName","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","cssPropName","support","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","contents","contentDocument","childNodes","empty","isIE","getAttribs","setAttrib","getAttrib","tag","setAttribute","append","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","contains","child","isChildOf","createTextNode","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","placing","refNode","nextSibling","insertBefore","prepend","overlay","overlayDiv","position","top","left","width","height","zIndex","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","rel","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","button","checked","disabled","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","stopPropagation","evented","Event","_args","readyRE","shortcuts","registry","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","shortcutKeys","shortcutKey","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","dragSource","handleElm","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","over","dropped","manager","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","reader","FileReader","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","uploader","writeFile","msSaveBlob","dataURItoBlob","createObjectURL","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","func","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","el","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","margin","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","replaceClass","newClass","oldClass","images","elementNodeTypes","1","9","11","ImagesLoaded","onAlways","getImages","bind","addElementImages","addImage","background","addElementBackgroundImages","childImgs","img","reURL","backgroundImage","addBackground","loadingImage","LoadingImage","Background","_this","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","Image","handleEvent","unbindEvents","imagesLoaded","inst","loaded","models","methodMap","read","sync","entity","emulateHTTP","emulateJSON","urlError","_method","textStatus","errorThrown","Entity","fetch","resp","serverAttrs","wrapError","save","destroy","stopListening","encodeURIComponent","Collection","entities","comparator","_reset","setOptions","addOptions","at","min","tail","initialize","singular","removed","_removeEntitys","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","_place","choices","layoutNode","aroundNodeCoords","win","view","best","choice","corner","spaceAvailable","w","L","R","M","h","T","B","aroundCorner","bb","startXpos","startYpos","startX","startY","endX","endY","corners","padding","c","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","resizable","touchActionNone","direction","border","grabber","startSize","currentSize","resizer","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","_delegator","domNode","HTMLElement","VisualElement","batch","action","widget","delegateEventSplitter","Widget","_ensureElement","$el","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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","file":"../skylarkjs.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylarkjs/skylark',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get || prop.value !== undefined)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName-\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            document = window.document,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && url.startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.6-beta\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylarkjs/router',[\r\n    \"skylark-router/router\"\r\n], function(router) {\r\n    return router;\r\n});\r\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        baseUrl : function() {\r\n            return router.baseUrl();\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylarkjs/spa',[\r\n    \"skylark-spa/spa\"\r\n], function(spa) {\r\n    return spa;\r\n});\r\n\ndefine('skylarkjs/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylarkjs/core',[\r\n    \"./skylark\",\r\n    \"./router\",\r\n    \"./spa\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylarkjs/browser',[\r\n    \"skylark-utils/browser\"\r\n], function(browser) {\r\n    return browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylarkjs/css',[\r\n    \"skylark-utils/css\"\r\n], function(css) {\r\n    return css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylarkjs/datax',[\r\n    \"skylark-utils/datax\"\r\n], function(datax) {\r\n    return datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylarkjs/dnd',[\r\n    \"skylark-utils/dnd\"\r\n], function(dnd) {\r\n    return dnd;\r\n});\r\n\ndefine('skylarkjs/eventer',[\r\n    \"skylark-utils/eventer\"\r\n], function(eventer) {\r\n    return eventer;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n        function createFormData(e) {\r\n            var t = new FormData();\r\n            t.append(\"file\", e);\r\n            return t;\r\n        }\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - chunk.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: chunk.size,\r\n                    total: chunk.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(chunk));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        uploader : function(elm,options) {\r\n\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylarkjs/filer',[\r\n    \"skylark-utils/filer\"\r\n], function(filer) {\r\n    return filer;\r\n});\r\n\ndefine('skylarkjs/finder',[\r\n    \"skylark-utils/finder\"\r\n], function(finder) {\r\n    return finder;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylarkjs/fx',[\r\n    \"skylark-utils/fx\"\r\n], function(fx) {\r\n    return fx;\r\n});\r\n\ndefine('skylarkjs/geom',[\r\n    \"skylark-utils/geom\"\r\n], function(geom) {\r\n    return geom;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./query\"\r\n], function(skylark,langx,$) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n  /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // coerce ImagesLoaded() without new, to be new ImagesLoaded()\r\n      if ( !( this instanceof ImagesLoaded ) ) {\r\n        return new ImagesLoaded( elem, options, onAlways );\r\n      }\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new Background( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger( eventName);\r\n      this.trigger( 'always');\r\n\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n\r\n    // ----- events ----- //\r\n\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- Background -------------------------- //\r\n  var Background = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n\r\n   $.fn.imagesLoaded = function( options, callback ) {\r\n      var inst = new ImagesLoaded( this, options, callback );\r\n\r\n      var d = new langx.Deferred();\r\n      \r\n      inst.on(\"progress\",function(e){\r\n        d.progress(e);\r\n      });\r\n\r\n      inst.on(\"done\",function(e){\r\n        d.resolve(e);\r\n      });\r\n\r\n      inst.on(\"fail\",function(e){\r\n        d.reject(e);\r\n      });\r\n\r\n      return d.promise;\r\n   };\r\n\r\n    function images() {\r\n        return images;\r\n    }\r\n\r\n    langx.mixin(images, {\r\n      loaded : ImagesLoaded\r\n    });\r\n\r\n    return skylark.images = images;\r\n});\r\n\ndefine('skylarkjs/images',[\r\n    \"skylark-utils/images\"\r\n], function(images) {\r\n    return images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylarkjs/models',[\r\n    \"skylark-utils/models\"\r\n], function(models) {\r\n    return models;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylarkjs/mover',[\r\n    \"skylark-utils/mover\"\r\n], function(mover) {\r\n    return mover;\r\n});\r\n\ndefine('skylarkjs/noder',[\r\n    \"skylark-utils/noder\"\r\n], function(noder) {\r\n    return noder;\r\n});\r\n\ndefine('skylarkjs/query',[\r\n    \"skylark-utils/query\"\r\n], function(query) {\r\n    return query;\r\n});\r\n\ndefine('skylark-utils/resizer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return skylark.resizer = resizer;\r\n});\r\n\ndefine('skylarkjs/resizer',[\r\n    \"skylark-utils/resizer\"\r\n], function(resizer) {\r\n    return resizer;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylarkjs/scripter',[\r\n    \"skylark-utils/scripter\"\r\n], function(scripter) {\r\n    return scripter;\r\n});\r\n\ndefine('skylark-utils/selector',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return skylark.selector = selector;\r\n});\r\n\ndefine('skylarkjs/selector',[\r\n    \"skylark-utils/selector\"\r\n], function(selector) {\r\n    return selector;\r\n});\r\n\ndefine('skylarkjs/styler',[\r\n    \"skylark-utils/styler\"\r\n], function(styler) {\r\n    return styler;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylarkjs/velm',[\r\n    \"skylark-utils/velm\"\r\n], function(velm) {\r\n    return velm;\r\n});\r\n\ndefine('skylark-utils/widget',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    function widget() {\r\n        return widget;\r\n    }\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n        init :function(el,options) {\r\n            if (!langx.isHtmlNode(el)) {\r\n                options = el;\r\n                el = null;\r\n            }\r\n            if (el) {\r\n            \tthis.el = el;\r\n        \t}\r\n            if (options) {\r\n                langx.mixin(this,options);\r\n            }\r\n            if (!this.cid) {\r\n                this.cid = langx.uniqueId('w');\r\n            }\r\n            this._ensureElement();\r\n        },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    }\r\n  \t});\r\n\r\n\r\n    langx.mixin(widget, {\r\n    \t$ : query,\r\n\r\n    \tWidget : Widget\r\n    });\r\n\r\n\r\n    return skylark.widget = widget;\r\n});\r\n\ndefine('skylarkjs/widget',[\r\n    \"skylark-utils/widget\"\r\n], function(widget) {\r\n    return widget;\r\n});\r\n\ndefine('skylarkjs/main',[\r\n    \"./core\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./langx\",\r\n    \"./models\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./resizer\",\r\n    \"./scripter\",\r\n    \"./selector\",\r\n    \"./styler\",\r\n    \"./velm\",\r\n    \"./widget\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylarkjs', ['skylarkjs/main'], function (main) { return main; });\n\n"]}