{"version":3,"sources":["router.js"],"names":["define","skylark","langx","createEvent","type","props","e","CustomEvent","safeMixin","current","_curCtx","dispatch","ctx","ret","route","exit","path","params","_prevCtx","m","map","r","enter","Deferred","when","then","_hub","trigger","previous","go","force","router","useHistoryApi","state","window","history","pushState","document","title","_baseUrl","replace","dispatchEvent","useHashbang","newHash","location","hash","noCache","finded","_cache","each","_routes","name","match","routeName","baseUrl","isDefined","this","hub","homePath","_homePath","setting","settings","routes","mixin","Route","start","host","initPath","pathname","undefined","startsWith","addEventListener","preventDefault","Evented","inherit","klassName","init","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","self","forEach","eventName","isFunction","on","query","_entering","result","_entered","ok","_exiting","_exited","names","x","indexOf","slice","decodeURIComponent","exec","i","len","length","val","off","apply","arguments","one"],"mappings":"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","file":"../router.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n"]}