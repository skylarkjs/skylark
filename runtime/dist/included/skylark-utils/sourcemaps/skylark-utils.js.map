{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","property","arguments","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","contents","contentDocument","childNodes","html","innerHTML","empty","isNumber","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","tag","createFragment","singleTagRE","test","$1","fragmentRE","containers","container","dom","slice","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","parent","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","after","placing","refNode","nextSibling","insertBefore","before","prepend","append","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","type","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","selector","index","addRule","createStyleSheet","loadStyleSheet","url","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","href","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","filter","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","rootIsSelector","matches","ancestors","ret","byId","getElementById","closest","descendants","querySelectorAll","matchError","local","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","checked","idx","disabled","enabled","eq","focus","activeElement","tabindex","gt","has","sel","hidden","lt","not","selected","visible","offsetWidth","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","getAttribute","pseudo","hasAttribute","simpleExpCounter","currentExpression","item","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","concat","finder","setAttribute","removeAttribute","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","removeData","pluck","propMap","removeAttr","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","obj","pageXOffset","pageYOffset","pageRect","round","offset","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","isWindow","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","e","Event","createEvent","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","result","l","related","relatedTarget","console","warn","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","delete","create","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","handleElm","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","_params","eventName","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","src","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","selectFile","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","Blob","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","animationDelay","fast","slow","mimeToDataType","mime","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","ajaxSuccess","xhr","settings","deferred","context","status","success","ajaxComplete","ajaxError","ajax","ajaxSettings","crossDomain","abortTimeout","dataType","accepts","headers","setHeader","protocol","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseText","eval","responseXML","blankRE","statusText","open","username","password","timeout","send","get","parseArguments","post","getJSON","http","beforeSend","global","XMLHttpRequest","script","json","xml","gtJSON","_place","choices","layoutNode","aroundNodeCoords","win","view","String","best","some","choice","corner","overflow","spaceAvailable","w","L","R","M","charAt","h","T","B","res","aroundCorner","bb","startXpos","min","startYpos","startX","startY","endX","endY","at","corners","padding","c","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","b","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","array","ltr","movable","updateWithTouchData","keys","changedTouches","downButton","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","wrapper_map","func","elem","uniq","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","exec","wrapper_node_operation","argType","arg","object","el","toArray","is","excludes","collection","parents","parentsUntil","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","detach","Dimension","m","margin","cb","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","cookies","sKey","unescape","cookie","escape","list","path","set","expires","domain","secure","sExpires","constructor","Number","vEnd","Infinity","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","results","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","f","exportToHost","request","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","img","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","now","_DBLCLICK","_dispatchEvent","_reset","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","toString","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","partial","main"],"mappings":"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","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\n    return skylark;\n});\n\ndefine('skylark-utils/langx',[\n    \"skylark-langx/langx\"\n], function(langx) {\n    return langx;\n});\n\ndefine('skylark-utils/browser',[\n    \"./skylark\",\n    \"./langx\"\n], function(skylark,langx) {\n    var checkedCssProperties = {\n        \"transitionproperty\": \"TransitionProperty\",\n    };\n\n    var css3PropPrefix = \"\",\n        css3StylePrefix = \"\",\n        css3EventPrefix = \"\",\n\n        cssStyles = {},\n        cssProps = {},\n\n        vendorPrefix,\n        vendorPrefixRE,\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\n\n        document = window.document,\n        testEl = document.createElement(\"div\"),\n\n        matchesSelector = testEl.webkitMatchesSelector ||\n        testEl.mozMatchesSelector ||\n        testEl.oMatchesSelector ||\n        testEl.matchesSelector,\n\n        testStyle = testEl.style;\n\n    for (var name in testStyle) {\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\n        if (matched) {\n            if (!vendorPrefixRE) {\n                vendorPrefix = matched[1];\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\n\n                css3StylePrefix = vendorPrefix;\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\n                css3EventPrefix = vendorPrefix.toLowerCase();\n            }\n\n            cssStyles[langx.lowerFirst(matched[2])] = name;\n            var cssPropName = langx.dasherize(matched[2]);\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\n\n        }\n    }\n\n\n    function normalizeCssEvent(name) {\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\n    }\n\n    function normalizeCssProperty(name) {\n        return cssProps[name] || name;\n    }\n\n    function normalizeStyleProperty(name) {\n        return cssStyles[name] || name;\n    }\n\n    function browser() {\n        return browser;\n    }\n\n    langx.mixin(browser, {\n        css3PropPrefix: css3PropPrefix,\n\n        normalizeStyleProperty: normalizeStyleProperty,\n\n        normalizeCssProperty: normalizeCssProperty,\n\n        normalizeCssEvent: normalizeCssEvent,\n\n        matchesSelector: matchesSelector,\n\n        location: function() {\n            return window.location;\n        },\n\n        support : {}\n\n    });\n\n    testEl = null;\n\n    return skylark.browser = browser;\n});\n\ndefine('skylark-utils/styler',[\n    \"./skylark\",\n    \"./langx\"\n], function(skylark, langx) {\n    var every = Array.prototype.every,\n        forEach = Array.prototype.forEach,\n        camelCase = langx.camelCase,\n        dasherize = langx.dasherize;\n\n    function maybeAddPx(name, value) {\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\n    }\n\n    var cssNumber = {\n            'column-count': 1,\n            'columns': 1,\n            'font-weight': 1,\n            'line-height': 1,\n            'opacity': 1,\n            'z-index': 1,\n            'zoom': 1\n        },\n        classReCache = {\n\n        };\n\n    function classRE(name) {\n        return name in classReCache ?\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\n    }\n\n    // access className property while respecting SVGAnimatedString\n    function className(node, value) {\n        var klass = node.className || '',\n            svg = klass && klass.baseVal !== undefined\n\n        if (value === undefined) return svg ? klass.baseVal : klass\n        svg ? (klass.baseVal = value) : (node.className = value)\n    }\n\n\n    var elementDisplay = {};\n\n    function defaultDisplay(nodeName) {\n        var element, display\n        if (!elementDisplay[nodeName]) {\n            element = document.createElement(nodeName)\n            document.body.appendChild(element)\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\n            element.parentNode.removeChild(element)\n            display == \"none\" && (display = \"block\")\n            elementDisplay[nodeName] = display\n        }\n        return elementDisplay[nodeName]\n    }\n\n    function show(elm) {\n        styler.css(elm, \"display\", \"\");\n        if (styler.css(elm, \"display\") == \"none\") {\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\n        }\n        return this;\n    }\n\n    function isInvisible(elm) {\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\n    }\n\n    function hide(elm) {\n        styler.css(elm, \"display\", \"none\");\n        return this;\n    }\n\n    function addClass(elm, name) {\n        if (!name) return this\n        var cls = className(elm),\n            names;\n        if (langx.isString(name)) {\n            names = name.split(/\\s+/g);\n        } else {\n            names = name;\n        }\n        names.forEach(function(klass) {\n            var re = classRE(klass);\n            if (!cls.match(re)) {\n                cls += (cls ? \" \" : \"\") + klass;\n            }\n        });\n\n        className(elm, cls);\n\n        return this;\n    }\n\n    function css(elm, property, value) {\n        if (arguments.length < 3) {\n            var computedStyle,\n                computedStyle = getComputedStyle(elm, '')\n            if (langx.isString(property)) {\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\n            } else if (langx.isArrayLike(property)) {\n                var props = {}\n                forEach.call(property, function(prop) {\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\n                })\n                return props\n            }\n        }\n\n        var css = '';\n        if (typeof(property) == 'string') {\n            if (!value && value !== 0) {\n                elm.style.removeProperty(dasherize(property));\n            } else {\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\n            }\n        } else {\n            for (key in property) {\n                if (property[key] === undefined) {\n                    continue;\n                }\n                if (!property[key] && property[key] !== 0) {\n                    elm.style.removeProperty(dasherize(key));\n                } else {\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\n                }\n            }\n        }\n\n        elm.style.cssText += ';' + css;\n        return this;\n    }\n\n\n    function hasClass(elm, name) {\n        var re = classRE(name);\n        return elm.className && elm.className.match(re);\n    }\n\n    function removeClass(elm, name) {\n        if (name) {\n            var cls = className(elm),\n                names;\n\n            if (langx.isString(name)) {\n                names = name.split(/\\s+/g);\n            } else {\n                names = name;\n            }\n\n            names.forEach(function(klass) {\n                var re = classRE(klass);\n                if (cls.match(re)) {\n                    cls = cls.replace(re, \" \");\n                }\n            });\n\n            className(elm, cls.trim());\n        } else {\n            className(elm,\"\");\n        }\n\n        return this;\n    }\n\n    function toggleClass(elm, name, when) {\n        var self = this;\n        name.split(/\\s+/g).forEach(function(klass) {\n            if (when === undefined) {\n                when = !self.hasClass(elm, klass);\n            }\n            if (when) {\n                self.addClass(elm, klass);\n            } else {\n                self.removeClass(elm, klass)\n            }\n        });\n\n        return self;\n    }\n\n    var styler = function() {\n        return styler;\n    };\n\n    langx.mixin(styler, {\n        autocssfix: true,\n\n        addClass: addClass,\n        className: className,\n        css: css,\n        hasClass: hasClass,\n        hide: hide,\n        isInvisible: isInvisible,\n        removeClass: removeClass,\n        show: show,\n        toggleClass: toggleClass\n    });\n\n    return skylark.styler = styler;\n});\n\ndefine('skylark-utils/noder',[\n    \"./skylark\",\n    \"./langx\",\n    \"./styler\"\n], function(skylark, langx, styler) {\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n        div = document.createElement(\"div\"),\n        table = document.createElement('table'),\n        tableBody = document.createElement('tbody'),\n        tableRow = document.createElement('tr'),\n        containers = {\n            'tr': tableBody,\n            'tbody': table,\n            'thead': table,\n            'tfoot': table,\n            'td': tableRow,\n            'th': tableRow,\n            '*': div\n        },\n        rootNodeRE = /^(?:body|html)$/i,\n        map = Array.prototype.map,\n        slice = Array.prototype.slice;\n\n    function ensureNodes(nodes, copyByClone) {\n        if (!langx.isArrayLike(nodes)) {\n            nodes = [nodes];\n        }\n        if (copyByClone) {\n            nodes = map.call(nodes, function(node) {\n                return node.cloneNode(true);\n            });\n        }\n        return langx.flatten(nodes);\n    }\n\n    function nodeName(elm, chkName) {\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\n        if (chkName !== undefined) {\n            return name === chkName.toLowerCase();\n        }\n        return name;\n    };\n\n    function contents(elm) {\n        if (nodeName(elm, \"iframe\")) {\n            return elm.contentDocument;\n        }\n        return elm.childNodes;\n    }\n\n    function html(node, html) {\n        if (html === undefined) {\n            return node.innerHTML;\n        } else {\n            this.empty(node);\n            html = html || \"\";\n            if (langx.isString(html) || langx.isNumber(html)) {\n                node.innerHTML = html;\n            } else if (langx.isArrayLike(html)) {\n                for (var i = 0; i < html.length; i++) {\n                    node.appendChild(html[i]);\n                }\n            } else {\n                node.appendChild(html);\n            }\n        }\n    }\n\n    function clone(node, deep) {\n        var self = this,\n            clone;\n\n        // TODO: Add feature detection here in the future\n        if (!isIE || node.nodeType !== 1 || deep) {\n            return node.cloneNode(deep);\n        }\n\n        // Make a HTML5 safe shallow copy\n        if (!deep) {\n            clone = document.createElement(node.nodeName);\n\n            // Copy attribs\n            each(self.getAttribs(node), function(attr) {\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\n            });\n\n            return clone;\n        }\n    }\n\n    function createElement(tag, props) {\n        var node = document.createElement(tag);\n        if (props) {\n            langx.mixin(node, props);\n        }\n        return node;\n    }\n\n    function createFragment(html) {\n        // A special case optimization for a single tag\n        if (singleTagRE.test(html)) {\n            return [createElement(RegExp.$1)];\n        }\n\n        var name = fragmentRE.test(html) && RegExp.$1\n        if (!(name in containers)) {\n            name = \"*\"\n        }\n        var container = containers[name];\n        container.innerHTML = \"\" + html;\n        dom = slice.call(container.childNodes);\n\n        dom.forEach(function(node) {\n            container.removeChild(node);\n        })\n\n        return dom;\n    }\n\n    function contains(node, child) {\n        return isChildOf(child, node);\n    }\n\n    function createTextNode(text) {\n        return document.createTextNode(text);\n    }\n\n    function doc() {\n        return document;\n    }\n\n    function empty(node) {\n        while (node.hasChildNodes()) {\n            var child = node.firstChild;\n            node.removeChild(child);\n        }\n        return this;\n    }\n\n    function isChildOf(node, parent) {\n        if (document.documentElement.contains) {\n            return parent.contains(node);\n        }\n        while (node) {\n            if (parent === node) {\n                return true;\n            }\n\n            node = node.parentNode;\n        }\n\n        return false;\n    }\n\n    function isDoc(node) {\n        return node != null && node.nodeType == node.DOCUMENT_NODE\n    }\n\n    function ownerDoc(elm) {\n        if (!elm) {\n            return document;\n        }\n\n        if (elm.nodeType == 9) {\n            return elm;\n        }\n\n        return elm.ownerDocument;\n    }\n\n    function ownerWindow(elm) {\n        var doc = ownerDoc(elm);\n        return  doc.defaultView || doc.parentWindow;\n    } \n\n    function after(node, placing, copyByClone) {\n        var refNode = node,\n            parent = refNode.parentNode;\n        if (parent) {\n            var nodes = ensureNodes(placing, copyByClone),\n                refNode = refNode.nextSibling;\n\n            for (var i = 0; i < nodes.length; i++) {\n                if (refNode) {\n                    parent.insertBefore(nodes[i], refNode);\n                } else {\n                    parent.appendChild(nodes[i]);\n                }\n            }\n        }\n        return this;\n    }\n\n    function before(node, placing, copyByClone) {\n        var refNode = node,\n            parent = refNode.parentNode;\n        if (parent) {\n            var nodes = ensureNodes(placing, copyByClone);\n            for (var i = 0; i < nodes.length; i++) {\n                parent.insertBefore(nodes[i], refNode);\n            }\n        }\n        return this;\n    }\n\n    function prepend(node, placing, copyByClone) {\n        var parentNode = node,\n            refNode = parentNode.firstChild,\n            nodes = ensureNodes(placing, copyByClone);\n        for (var i = 0; i < nodes.length; i++) {\n            if (refNode) {\n                parentNode.insertBefore(nodes[i], refNode);\n            } else {\n                parentNode.appendChild(nodes[i]);\n            }\n        }\n        return this;\n    }\n\n    function append(node, placing, copyByClone) {\n        var parentNode = node,\n            nodes = ensureNodes(placing, copyByClone);\n        for (var i = 0; i < nodes.length; i++) {\n            parentNode.appendChild(nodes[i]);\n        }\n        return this;\n    }\n\n    function overlay(elm, params) {\n        var overlayDiv = createElement(\"div\", params);\n        styler.css(overlayDiv, {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            zIndex: 0x7FFFFFFF,\n            opacity: 0.7\n        });\n        elm.appendChild(overlayDiv);\n        return overlayDiv;\n\n    }\n\n\n\n    function remove(node) {\n        if (node && node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n        return this;\n    }\n\n    function replace(node, oldNode) {\n        oldNode.parentNode.replaceChild(node, oldNode);\n        return this;\n    }\n\n    function throb(elm, params) {\n        params = params || {};\n        var self = this,\n            text = params.text,\n            style = params.style,\n            time = params.time,\n            callback = params.callback,\n            timer,\n            throbber = this.createElement(\"div\", {\n                className: params.className || \"throbber\",\n                style: style\n            }),\n            _overlay = overlay(throbber, {\n                className: 'overlay fade'\n            }),\n            throb = this.createElement(\"div\", {\n                className: \"throb\"\n            }),\n            textNode = this.createTextNode(text || \"\"),\n            remove = function() {\n                if (timer) {\n                    clearTimeout(timer);\n                    timer = null;\n                }\n                if (throbber) {\n                    self.remove(throbber);\n                    throbber = null;\n                }\n            },\n            update = function(params) {\n                if (params && params.text && throbber) {\n                    textNode.nodeValue = params.text;\n                }\n            };\n        throb.appendChild(textNode);\n        throbber.appendChild(throb);\n        elm.appendChild(throbber);\n        var end = function() {\n            remove();\n            if (callback) callback();\n        };\n        if (time) {\n            timer = setTimeout(end, time);\n        }\n\n        return {\n            remove: remove,\n            update: update\n        };\n    }\n\n    function traverse(node, fn) {\n        fn(node)\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\n            traverse(node.childNodes[i], fn);\n        }\n        return this;\n    }\n\n    function reverse(node) {\n        var firstChild = node.firstChild;\n        for (var i = node.children.length - 1; i > 0; i--) {\n            if (i > 0) {\n                var child = node.children[i];\n                node.insertBefore(child, firstChild);\n            }\n        }\n    }\n\n    function wrapper(node, wrapperNode) {\n        if (langx.isString(wrapperNode)) {\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\n        }\n        node.parentNode.insertBefore(wrapperNode, node);\n        wrapperNode.appendChild(node);\n    }\n\n    function wrapperInner(node, wrapperNode) {\n        var childNodes = slice.call(node.childNodes);\n        node.appendChild(wrapperNode);\n        for (var i = 0; i < childNodes.length; i++) {\n            wrapperNode.appendChild(childNodes[i]);\n        }\n        return this;\n    }\n\n    function unwrap(node) {\n        var child, parent = node.parentNode;\n        if (parent) {\n            if (this.isDoc(parent.parentNode)) return;\n            parent.parentNode.insertBefore(node, parent);\n        }\n    }\n\n    function noder() {\n        return noder;\n    }\n\n    langx.mixin(noder, {\n        clone: clone,\n        contents: contents,\n\n        createElement: createElement,\n\n        createFragment: createFragment,\n\n        contains: contains,\n\n        createTextNode: createTextNode,\n\n        doc: doc,\n\n        empty: empty,\n\n        html: html,\n\n        isChildOf: isChildOf,\n\n        isDoc: isDoc,\n\n        ownerDoc: ownerDoc,\n\n        ownerWindow : ownerWindow,\n\n        after: after,\n\n        before: before,\n\n        prepend: prepend,\n\n        append: append,\n\n        remove: remove,\n\n        replace: replace,\n\n        throb: throb,\n\n        traverse: traverse,\n\n        reverse: reverse,\n\n        wrapper: wrapper,\n\n        wrapperInner: wrapperInner,\n\n        unwrap: unwrap\n    });\n\n    return skylark.noder = noder;\n});\n\ndefine('skylark-utils/css',[\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\"\n], function(skylark, langx, construct) {\n\n    var head = document.getElementsByTagName(\"head\")[0],\n        count = 0,\n        sheetsByUrl = {},\n        sheetElementsById = {},\n        defaultSheetId = _createStyleSheet(),\n        defaultSheet = sheetElementsById[defaultSheetId],\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\n        insertRuleFunc,\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\n\n    if (defaultSheet.insertRule) {\n        var _insertRule = defaultSheet.insertRule;\n        insertRuleFunc = function(selector, css, index) {\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\n        };\n    } else {\n        insertRuleFunc = defaultSheet.addRule;\n    }\n\n    function normalizeSelector(selectorText) {\n        var selector = [],\n            last, len;\n        last = defaultSheet[rulesPropName].length;\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\n        len = defaultSheet[rulesPropName].length;\n        for (var i = len - 1; i >= last; i--) {\n            selector.push(_sheet[_rules][i].selectorText);\n            deleteRuleFunc.call(defaultSheet, i);\n        }\n        return selector.reverse().join(', ');\n    }\n\n    function _createStyleSheet() {\n        var link = document.createElement(\"link\"),\n            id = (count++);\n\n        link.rel = \"stylesheet\";\n        link.type = \"text/css\";\n        link.async = false;\n        link.defer = false;\n\n        head.appendChild(link);\n        sheetElementsById[id] = link;\n\n        return id;\n    }\n\n    function css() {\n        return css;\n    }\n\n    langx.mixin(css, {\n        createStyleSheet: function(cssText) {\n            return _createStyleSheet();\n        },\n\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\n            var sheet = sheetsByUrl[url];\n            if (!sheet) {\n                sheet = sheetsByUrl[url] = {\n                    state: 0, //0:unload,1:loaded,-1:loaderror\n                    loadedCallbacks: [],\n                    errorCallbacks: []\n                };\n            }\n\n            sheet.loadedCallbacks.push(loadedCallback);\n            sheet.errorCallbacks.push(errorCallback);\n\n            if (sheet.state === 1) {\n                sheet.node.onload();\n            } else if (sheet.state === -1) {\n                sheet.node.onerror();\n            } else {\n                sheet.id = _createStyleSheet();\n                var node = sheet.node = sheetElementsById[sheet.id];\n\n                startTime = new Date().getTime();\n\n                node.onload = function() {\n                    sheet.state = 1;\n                    sheet.state = -1;\n                    var callbacks = sheet.loadedCallbacks,\n                        i = callbacks.length;\n\n                    while (i--) {\n                        callbacks[i]();\n                    }\n                    sheet.loadedCallbacks = [];\n                    sheet.errorCallbacks = [];\n                },\n                node.onerror = function() {\n                    sheet.state = -1;\n                    var callbacks = sheet.errorCallbacks,\n                        i = callbacks.length;\n\n                    while (i--) {\n                        callbacks[i]();\n                    }\n                    sheet.loadedCallbacks = [];\n                    sheet.errorCallbacks = [];\n                };\n\n                node.href = sheet.url = url;\n\n                sheetsByUrl[node.url] = sheet;\n\n            }\n            return sheet.id;\n        },\n\n        deleteSheetRule: function(sheetId, rule) {\n            var sheet = sheetElementsById[sheetId];\n            if (langx.isNumber(rule)) {\n                deleteRuleFunc.call(sheet, rule);\n            } else {\n                langx.each(sheet[rulesPropName], function(i, _rule) {\n                    if (rule === _rule) {\n                        deleteRuleFunc.call(sheet, i);\n                        return false;\n                    }\n                });\n            }\n        },\n\n        deleteRule: function(rule) {\n            this.deleteSheetRule(defaultSheetId, rule);\n            return this;\n        },\n\n        removeStyleSheet: function(sheetId) {\n            if (sheetId === defaultSheetId) {\n                throw new Error(\"The default stylesheet can not be deleted\");\n            }\n            var sheet = sheetElementsById[sheetId];\n            delete sheetElementsById[sheetId];\n\n\n            construct.remove(sheet);\n            return this;\n        },\n\n        findRules: function(selector, sheetId) {\n            //return array of CSSStyleRule objects that match the selector text\n            var rules = [],\n                filters = parseSelector(selector);\n            $(document.styleSheets).each(function(i, styleSheet) {\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\n                    }).map(function() {\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\n                    }));\n                }\n            });\n            return rules.reverse();\n        },\n\n        insertRule: function(selector, css, index) {\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\n        },\n\n        insertSheetRule: function(sheetId, selector, css, index) {\n            if (!selector || !css) {\n                return -1;\n            }\n\n            var sheet = sheetElementsById[sheetId];\n            index = index || sheet[rulesPropName].length;\n\n            return insertRuleFunc.call(sheet, selector, css, index);\n\n        }\n    });\n\n    return skylark.css = css;\n});\n\ndefine('skylark-utils/finder',[\n    \"./skylark\",\n    \"./langx\",\n    \"./browser\",\n    \"./noder\"\n], function(skylark, langx, browser, noder, velm) {\n    var local = {},\n        filter = Array.prototype.filter,\n        slice = Array.prototype.slice,\n        nativeMatchesSelector = browser.matchesSelector;\n\n    /*\n    ---\n    name: Slick.Parser\n    description: Standalone CSS3 Selector parser\n    provides: Slick.Parser\n    ...\n    */\n    ;\n    (function() {\n\n        var parsed,\n            separatorIndex,\n            combinatorIndex,\n            reversed,\n            cache = {},\n            reverseCache = {},\n            reUnescape = /\\\\/g;\n\n        var parse = function(expression, isReversed) {\n            if (expression == null) return null;\n            if (expression.Slick === true) return expression;\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\n            reversed = !!isReversed;\n            var currentCache = (reversed) ? reverseCache : cache;\n            if (currentCache[expression]) return currentCache[expression];\n            parsed = {\n                Slick: true,\n                expressions: [],\n                raw: expression,\n                reverse: function() {\n                    return parse(this.raw, true);\n                }\n            };\n            separatorIndex = -1;\n            while (expression != (expression = expression.replace(regexp, parser)));\n            parsed.length = parsed.expressions.length;\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\n        };\n\n        var reverseCombinator = function(combinator) {\n            if (combinator === '!') return ' ';\n            else if (combinator === ' ') return '!';\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\n            else return '!' + combinator;\n        };\n\n        var reverse = function(expression) {\n            var expressions = expression.expressions;\n            for (var i = 0; i < expressions.length; i++) {\n                var exp = expressions[i];\n                var last = {\n                    parts: [],\n                    tag: '*',\n                    combinator: reverseCombinator(exp[0].combinator)\n                };\n\n                for (var j = 0; j < exp.length; j++) {\n                    var cexp = exp[j];\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\n                    cexp.combinator = cexp.reverseCombinator;\n                    delete cexp.reverseCombinator;\n                }\n\n                exp.reverse().push(last);\n            }\n            return expression;\n        };\n\n        var escapeRegExp = (function() {\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\n                to = '\\\\';\n            return function(string) {\n                return string.replace(from, to)\n            }\n        }())\n\n        var regexp = new RegExp(\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\n        );\n\n        function parser(\n            rawMatch,\n\n            separator,\n            combinator,\n            combinatorChildren,\n\n            tagName,\n            id,\n            className,\n\n            attributeKey,\n            attributeOperator,\n            attributeQuote,\n            attributeValue,\n\n            pseudoMarker,\n            pseudoClass,\n            pseudoQuote,\n            pseudoClassQuotedValue,\n            pseudoClassValue\n        ) {\n            if (separator || separatorIndex === -1) {\n                parsed.expressions[++separatorIndex] = [];\n                combinatorIndex = -1;\n                if (separator) return '';\n            }\n\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\n                combinator = combinator || ' ';\n                var currentSeparator = parsed.expressions[separatorIndex];\n                if (reversed && currentSeparator[combinatorIndex])\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\n                currentSeparator[++combinatorIndex] = {\n                    combinator: combinator,\n                    tag: '*'\n                };\n            }\n\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\n\n            if (tagName) {\n                currentParsed.tag = tagName.replace(reUnescape, '');\n\n            } else if (id) {\n                currentParsed.id = id.replace(reUnescape, '');\n\n            } else if (className) {\n                className = className.replace(reUnescape, '');\n\n                if (!currentParsed.classList) currentParsed.classList = [];\n                if (!currentParsed.classes) currentParsed.classes = [];\n                currentParsed.classList.push(className);\n                currentParsed.classes.push({\n                    value: className,\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\n                });\n\n            } else if (pseudoClass) {\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\n\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\n                currentParsed.pseudos.push({\n                    key: pseudoClass.replace(reUnescape, ''),\n                    value: pseudoClassValue,\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\n                });\n\n            } else if (attributeKey) {\n                attributeKey = attributeKey.replace(reUnescape, '');\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\n\n                var test, regexp;\n\n                switch (attributeOperator) {\n                    case '^=':\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\n                        break;\n                    case '$=':\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\n                        break;\n                    case '~=':\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\n                        break;\n                    case '|=':\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\n                        break;\n                    case '=':\n                        test = function(value) {\n                            return attributeValue == value;\n                        };\n                        break;\n                    case '*=':\n                        test = function(value) {\n                            return value && value.indexOf(attributeValue) > -1;\n                        };\n                        break;\n                    case '!=':\n                        test = function(value) {\n                            return attributeValue != value;\n                        };\n                        break;\n                    default:\n                        test = function(value) {\n                            return !!value;\n                        };\n                }\n\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\n                    return false;\n                };\n\n                if (!test) test = function(value) {\n                    return value && regexp.test(value);\n                };\n\n                if (!currentParsed.attributes) currentParsed.attributes = [];\n                currentParsed.attributes.push({\n                    key: attributeKey,\n                    operator: attributeOperator,\n                    value: attributeValue,\n                    test: test\n                });\n\n            }\n\n            return '';\n        };\n\n        // Slick NS\n\n        var Slick = (this.Slick || {});\n\n        Slick.parse = function(expression) {\n            return parse(expression);\n        };\n\n        Slick.escapeRegExp = escapeRegExp;\n\n        if (!this.Slick) this.Slick = Slick;\n\n    }).apply(local);\n\n\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\n        slice = Array.prototype.slice;\n\n\n    local.parseSelector = local.Slick.parse;\n\n\n    local.pseudos = {\n        // custom pseudos\n        checked: function(elm) {\n            return !!elm.checked;\n        },\n\n        contains: function(elm, idx, nodes, text) {\n            if ($(this).text().indexOf(text) > -1) return this\n        },\n\n        'disabled': function(elm) {\n            return !!elm.disabled;\n        },\n\n        'enabled': function(elm) {\n            return !elm.disabled;\n        },\n\n        eq: function(elm, idx, nodes, value) {\n            return (idx == value);\n        },\n\n        'focus': function(elm) {\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\n        },\n\n        first: function(elm, idx) {\n            return (idx === 0);\n        },\n\n        gt: function(elm, idx, nodes, value) {\n            return (idx > value);\n        },\n\n        has: function(elm, idx, nodes, sel) {\n            return local.querySelector(elm, sel).length > 0;\n        },\n\n\n        hidden: function(elm) {\n            return !local.pseudos[\"visible\"](elm);\n        },\n\n        last: function(elm, idx, nodes) {\n            return (idx === nodes.length - 1);\n        },\n\n        lt: function(elm, idx, nodes, value) {\n            return (idx < value);\n        },\n\n        not: function(elm, idx, nodes, sel) {\n            return local.match(elm, sel);\n        },\n\n        parent: function(elm) {\n            return !!elm.parentNode;\n        },\n\n        selected: function(elm) {\n            return !!elm.selected;\n        },\n\n        visible: function(elm) {\n            return elm.offsetWidth && elm.offsetWidth\n        }\n    };\n\n    local.divide = function(cond) {\n        var nativeSelector = \"\",\n            customPseudos = [],\n            tag,\n            id,\n            classes,\n            attributes,\n            pseudos;\n\n\n        if (id = cond.id) {\n            nativeSelector += (\"#\" + id);\n        }\n        if (classes = cond.classes) {\n            for (var i = classes.length; i--;) {\n                nativeSelector += (\".\" + classes[i].value);\n            }\n        }\n        if (attributes = cond.attributes) {\n            for (var i = 0; i < attributes.length; i++) {\n                if (attributes[i].operator) {\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\n                } else {\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\n                }\n            }\n        }\n        if (pseudos = cond.pseudos) {\n            for (i = pseudos.length; i--;) {\n                part = pseudos[i];\n                if (this.pseudos[part.key]) {\n                    customPseudos.push(part);\n                } else {\n                    if (part.value !== undefined) {\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\n                    }\n                }\n            }\n        }\n\n        if (tag = cond.tag) {\n            nativeSelector = tag.toUpperCase() + nativeSelector;\n        }\n\n        if (!nativeSelector) {\n            nativeSelector = \"*\";\n        }\n\n        return {\n            nativeSelector: nativeSelector,\n            customPseudos: customPseudos\n        }\n\n    };\n\n    local.check = function(node, cond, idx, nodes) {\n        var tag,\n            id,\n            classes,\n            attributes,\n            pseudos;\n\n        if (tag = cond.tag) {\n            var nodeName = node.nodeName.toUpperCase();\n            if (tag == '*') {\n                if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\n            } else {\n                if (nodeName != (tag || \"\").toUpperCase()) return false;\n            }\n        }\n\n        if (id = cond.id) {\n            if (node.getAttribute('id') != id) {\n                return false;\n            }\n        }\n\n        var i, part, cls, pseudo;\n\n        if (classes = cond.classes) {\n            for (i = classes.length; i--;) {\n                cls = node.getAttribute('class');\n                if (!(cls && classes[i].regexp.test(cls))) return false;\n            }\n        }\n\n        if (attributes)\n            for (i = attributes.length; i--;) {\n                part = attributes[i];\n                if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\n            }\n        if (pseudos = cond.pseudos) {\n            for (i = pseudos.length; i--;) {\n                part = pseudos[i];\n                if (pseudo = this.pseudos[part.key]) {\n                    if (!pseudo(node, idx, nodes, part.value)) {\n                        return false;\n                    }\n                } else {\n                    if (!nativeMatchesSelector.call(node, part.key)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    local.match = function(node, selector) {\n\n        var parsed = local.Slick.parse(selector);\n        if (!parsed) {\n            return true;\n        }\n\n        // simple (single) selectors\n        var expressions = parsed.expressions,\n            simpleExpCounter = 0,\n            i;\n        for (i = 0;\n            (currentExpression = expressions[i]); i++) {\n            if (currentExpression.length == 1) {\n                var exp = currentExpression[0];\n                if (this.check(node, exp)) {\n                    return true;\n                }\n                simpleExpCounter++;\n            }\n        }\n\n        if (simpleExpCounter == parsed.length) {\n            return false;\n        }\n\n        var nodes = this.query(document, parsed),\n            item;\n        for (i = 0; item = nodes[i++];) {\n            if (item === node) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    local.combine = function(elm, bit) {\n        var op = bit.combinator,\n            cond = bit,\n            node1,\n            nodes = [];\n\n        switch (op) {\n            case '>': // direct children\n                nodes = children(elm, cond);\n                break;\n            case '+': // next sibling\n                node1 = nextSibling(elm, cond, true);\n                if (node1) {\n                    nodes.push(node1);\n                }\n                break;\n            case '^': // first child\n                node1 = firstChild(elm, cond, true);\n                if (node1) {\n                    nodes.push(node1);\n                }\n                break;\n            case '~': // next siblings\n                nodes = nextSiblings(elm, cond);\n                break;\n            case '++': // next sibling and previous sibling\n                var prev = previousSibling(elm, cond, true),\n                    next = nextSibling(elm, cond, true);\n                if (prev) {\n                    nodes.push(prev);\n                }\n                if (next) {\n                    nodes.push(next);\n                }\n                break;\n            case '~~': // next siblings and previous siblings\n                nodes = siblings(elm, cond);\n                break;\n            case '!': // all parent nodes up to document\n                nodes = ancestors(elm, cond);\n                break;\n            case '!>': // direct parent (one level)\n                node1 = parent(elm, cond);\n                if (node1) {\n                    nodes.push(node1);\n                }\n                break;\n            case '!+': // previous sibling\n                nodes = previousSibling(elm, cond, true);\n                break;\n            case '!^': // last child\n                node1 = lastChild(elm, cond, true);\n                if (node1) {\n                    nodes.push(node1);\n                }\n                break;\n            case '!~': // previous siblings\n                nodes = previousSiblings(elm, cond);\n                break;\n            default:\n                var divided = this.divide(bit);\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\n                if (divided.customPseudos) {\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\n                        nodes = filter.call(nodes, function(item, idx) {\n                            return local.check(item, {\n                                pseudos: [divided.customPseudos[i]]\n                            }, idx, nodes)\n                        });\n                    }\n                }\n                break;\n\n        }\n        return nodes;\n    }\n\n    local.query = function(node, selector, single) {\n\n\n        var parsed = this.Slick.parse(selector);\n\n        var\n            founds = [],\n            currentExpression, currentBit,\n            expressions = parsed.expressions;\n\n        for (var i = 0;\n            (currentExpression = expressions[i]); i++) {\n            var currentItems = [node],\n                found;\n            for (var j = 0;\n                (currentBit = currentExpression[j]); j++) {\n                found = langx.map(currentItems, function(item, i) {\n                    return local.combine(item, currentBit)\n                });\n                if (found) {\n                    currentItems = found;\n                }\n            }\n            if (found) {\n                founds = founds.concat(found);\n            }\n        }\n\n        return founds;\n    }\n\n\n    function ancestor(node, selector, root) {\n        var rootIsSelector = root && langx.isString(root);\n        while (node = node.parentNode) {\n            if (matches(node, selector)) {\n                return node;\n            }\n            if (root) {\n                if (rootIsSelector) {\n                    if (matches(node,root)) {\n                        break;\n                    }\n                } else if (node == root) {\n                    break;\n                }\n            } \n        }\n        return null;\n    }\n\n    function ancestors(node, selector,root) {\n        var ret = [],\n            rootIsSelector = root && langx.isString(root);\n        while (node = node.parentNode) {\n            if (matches(node, selector)) {\n                ret.push(node);\n            }\n            if (root) {\n                if (rootIsSelector) {\n                    if (matches(node,root)) {\n                        break;\n                    }\n                } else if (node == root) {\n                    break;\n                }\n            } \n\n        }\n        return ret;\n    }\n\n    function byId(id, doc) {\n        doc = doc || noder.doc();\n        return doc.getElementById(id);\n    }\n\n    function children(node, selector) {\n        var childNodes = node.childNodes,\n            ret = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            var node = childNodes[i];\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    ret.push(node);\n                }\n\n            }\n        }\n        return ret;\n    }\n\n    function closest(node, selector) {\n        while (node && !(matches(node, selector))) {\n            node = node.parentNode;\n        }\n\n        return node;\n    }\n\n    function descendants(elm, selector) {\n        // Selector\n        try {\n            return slice.call(elm.querySelectorAll(selector));\n        } catch (matchError) {\n            //console.log(matchError);\n        }\n        return local.query(elm, selector);\n    }\n\n    function descendant(elm, selector) {\n        // Selector\n        try {\n            return elm.querySelector(selector);\n        } catch (matchError) {\n            //console.log(matchError);\n        }\n        var nodes = local.query(elm, selector);\n        if (nodes.length > 0) {\n            return nodes[0];\n        } else {\n            return null;\n        }\n    }\n\n    function find(selector) {\n        return descendant(document.body, selector);\n    }\n\n    function findAll(selector) {\n        return descendants(document.body, selector);\n    }\n\n    function firstChild(elm, selector, first) {\n        var childNodes = elm.childNodes,\n            node = childNodes[0];\n        while (node) {\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    return node;\n                }\n                if (first) {\n                    break;\n                }\n            }\n            node = node.nextSibling;\n        }\n\n        return null;\n    }\n\n    function lastChild(elm, selector, last) {\n        var childNodes = elm.childNodes,\n            node = childNodes[childNodes.length - 1];\n        while (node) {\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    return node;\n                }\n                if (last) {\n                    break;\n                }\n            }\n            node = node.previousSibling;\n        }\n\n        return null;\n    }\n\n    function matches(elm, selector) {\n        if (!selector || !elm || elm.nodeType !== 1) {\n            return false\n        }\n\n        if (langx.isString(selector)) {\n            try {\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\n            } catch (matchError) {\n                //console.log(matchError);\n            }\n            return local.match(elm, selector);\n        } else if (langx.isArrayLike(selector)) {\n            return langx.inArray(elm,selector);\n        } else if (langx.isPlainObject(selector)){    \n            return local.check(elm, selector);\n        } else {\n            return elm === selector;\n        }\n\n    }\n\n    function nextSibling(elm, selector, adjacent) {\n        var node = elm.nextSibling;\n        while (node) {\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    return node;\n                }\n                if (adjacent) {\n                    break;\n                }\n            }\n            node = node.nextSibling;\n        }\n        return null;\n    }\n\n    function nextSiblings(elm, selector) {\n        var node = elm.nextSibling,\n            ret = [];\n        while (node) {\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    ret.push(node);\n                }\n            }\n            node = node.nextSibling;\n        }\n        return ret;\n    }\n\n\n    function parent(elm, selector) {\n        var node = elm.parentNode;\n        if (node && (!selector || matches(node, selector))) {\n            return node;\n        }\n\n        return null;\n    }\n\n    function previousSibling(elm, selector, adjacent) {\n        var node = elm.previousSibling;\n        while (node) {\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    return node;\n                }\n                if (adjacent) {\n                    break;\n                }\n            }\n            node = node.previousSibling;\n        }\n        return null;\n    }\n\n    function previousSiblings(elm, selector) {\n        var node = elm.previousSibling,\n            ret = [];\n        while (node) {\n            if (node.nodeType == 1) {\n                if (!selector || matches(node, selector)) {\n                    ret.push(node);\n                }\n            }\n            node = node.previousSibling;\n        }\n        return ret;\n    }\n\n    function siblings(elm, selector) {\n        var node = elm.parentNode.firstChild,\n            ret = [];\n        while (node) {\n            if (node.nodeType == 1 && node !== elm) {\n                if (!selector || matches(node, selector)) {\n                    ret.push(node);\n                }\n            }\n            node = node.nextSibling;\n        }\n        return ret;\n    }\n\n    var finder = function() {\n        return finder;\n    };\n\n    langx.mixin(finder, {\n\n        ancestor: ancestor,\n\n        ancestors: ancestors,\n\n        byId: byId,\n\n        children: children,\n\n        closest: closest,\n\n        descendant: descendant,\n\n        descendants: descendants,\n\n        find: find,\n\n        findAll: findAll,\n\n        firstChild: firstChild,\n\n        lastChild: lastChild,\n\n        matches: matches,\n\n        nextSibling: nextSibling,\n\n        nextSiblings: nextSiblings,\n\n        parent: parent,\n\n        previousSibling: previousSibling,\n\n        previousSiblings: previousSiblings,\n\n        pseudos: local.pseudos,\n\n        siblings: siblings\n    });\n\n    return skylark.finder = finder;\n});\n\ndefine('skylark-utils/datax',[\n    \"./skylark\",\n    \"./langx\",\n    \"./finder\"\n], function(skylark, langx, finder) {\n    var map = Array.prototype.map,\n        filter = Array.prototype.filter,\n        camelCase = langx.camelCase,\n        deserializeValue = langx.deserializeValue,\n\n        capitalRE = /([A-Z])/g,\n        propMap = {\n            'tabindex': 'tabIndex',\n            'readonly': 'readOnly',\n            'for': 'htmlFor',\n            'class': 'className',\n            'maxlength': 'maxLength',\n            'cellspacing': 'cellSpacing',\n            'cellpadding': 'cellPadding',\n            'rowspan': 'rowSpan',\n            'colspan': 'colSpan',\n            'usemap': 'useMap',\n            'frameborder': 'frameBorder',\n            'contenteditable': 'contentEditable'\n        };\n\n    function setAttribute(elm, name, value) {\n        if (value == null) {\n            elm.removeAttribute(name);\n        } else {\n            elm.setAttribute(name, value);\n        }\n    }\n\n    function attr(elm, name, value) {\n        if (value === undefined) {\n            if (typeof name === \"object\") {\n                for (var attrName in name) {\n                    attr(elm, attrName, name[attrName]);\n                }\n                return this;\n            } else {\n                if (elm.hasAttribute(name)) {\n                    return elm.getAttribute(name);\n                }\n            }\n        } else {\n            elm.setAttribute(name, value);\n            return this;\n        }\n    }\n\n    // Read all \"data-*\" attributes from a node\n    function _attributeData(elm) {\n        var store = {}\n        langx.each(elm.attributes || [], function(i, attr) {\n            if (attr.name.indexOf('data-') == 0) {\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\n            }\n        })\n        return store;\n    }\n\n    function _store(elm, confirm) {\n        var store = elm[\"_$_store\"];\n        if (!store && confirm) {\n            store = elm[\"_$_store\"] = _attributeData(elm);\n        }\n        return store;\n    }\n\n    function _getData(elm, name) {\n        if (name === undefined) {\n            return _store(elm, true);\n        } else {\n            var store = _store(elm);\n            if (store) {\n                if (name in store) {\n                    return store[name];\n                }\n                var camelName = camelCase(name);\n                if (camelName in store) {\n                    return store[camelName];\n                }\n            }\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\n            return attr(elm, attrName);\n        }\n\n    }\n\n    function _setData(elm, name, value) {\n        var store = _store(elm, true);\n        store[camelCase(name)] = value;\n    }\n\n\n    function data(elm, name, value) {\n\n        if (value === undefined) {\n            if (typeof name === \"object\") {\n                for (var dataAttrName in name) {\n                    _setData(elm, dataAttrName, name[dataAttrName]);\n                }\n                return this;\n            } else {\n                return _getData(elm, name);\n            }\n        } else {\n            _setData(elm, name, value);\n            return this;\n        }\n    }\n\n    function removeData(elm, names) {\n        if (langx.isString(names)) {\n            names = names.split(/\\s+/);\n        }\n        var store = _store(elm, true);\n        names.forEach(function(name) {\n            delete store[name];\n        });\n        return this;\n    }\n\n    function pluck(nodes, property) {\n        return map.call(nodes, function(elm) {\n            return elm[property];\n        });\n    }\n\n    function prop(elm, name, value) {\n        name = propMap[name] || name;\n        if (value === undefined) {\n            return elm[name];\n        } else {\n            elm[name] = value;\n            return this;\n        }\n    }\n\n    function removeAttr(elm, name) {\n        name.split(' ').forEach(function(attr) {\n            setAttribute(elm, attr);\n        });\n        return this;\n    }\n\n    function text(elm, txt) {\n        if (txt === undefined) {\n            return elm.textContent;\n        } else {\n            elm.textContent = txt == null ? '' : '' + txt;\n            return this;\n        }\n    }\n\n    function val(elm, value) {\n        if (value === undefined) {\n            if (elm.multiple) {\n                // select multiple values\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\n                    return option.selected;\n                }));\n                return pluck(selectedOptions, \"value\");\n            } else {\n                return elm.value;\n            }\n        } else {\n            elm.value = value;\n            return this;\n        }\n    }\n\n    function datax() {\n        return datax;\n    }\n\n    langx.mixin(datax, {\n        attr: attr,\n\n        data: data,\n\n        pluck: pluck,\n\n        prop: prop,\n\n        removeAttr: removeAttr,\n\n        removeData: removeData,\n\n        text: text,\n\n        val: val\n    });\n\n    return skylark.datax = datax;\n});\n\ndefine('skylark-utils/geom',[\n    \"./skylark\",\n    \"./langx\",\n    \"./styler\"\n], function(skylark, langx, styler) {\n    var rootNodeRE = /^(?:body|html)$/i,\n        px = langx.toPixel;\n\n    function offsetParent(elm) {\n        var parent = elm.offsetParent || document.body;\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\n            parent = parent.offsetParent;\n        }\n        return parent;\n    }\n\n\n    function borderExtents(elm) {\n        var s = getComputedStyle(elm);\n        return {\n            left: px(s.borderLeftWidth , elm),\n            top: px(s.borderTopWidth, elm),\n            right: px(s.borderRightWidth, elm),\n            bottom: px(s.borderBottomWidth, elm)\n        }\n    }\n\n    //viewport coordinate\n    function boundingPosition(elm, coords) {\n        if (coords === undefined) {\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\n        } else {\n            var // Get *real* offsetParent\n                parent = offsetParent(elm),\n                // Get correct offsets\n                parentOffset = boundingPosition(parent),\n                mex = marginExtents(elm),\n                pbex = borderExtents(parent);\n\n            relativePosition(elm, {\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\n                left: coords.left - parentOffset.left - mex.left - pbex.left\n            });\n            return this;\n        }\n    }\n\n    function boundingRect(elm, coords) {\n        if (coords === undefined) {\n            return elm.getBoundingClientRect()\n        } else {\n            boundingPosition(elm, coords);\n            size(elm, coords);\n            return this;\n        }\n    }\n\n    function clientHeight(elm, value) {\n        if (value == undefined) {\n            return clientSize(elm).height;\n        } else {\n            return clientSize(elm, {\n                height: value\n            });\n        }\n    }\n\n    function clientSize(elm, dimension) {\n        if (dimension == undefined) {\n            return {\n                width: elm.clientWidth,\n                height: elm.clientHeight\n            }\n        } else {\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\n                props = {\n                    width: dimension.width,\n                    height: dimension.height\n                };\n            if (!isBorderBox) {\n                var pex = paddingExtents(elm);\n\n                if (props.width !== undefined) {\n                    props.width = props.width - pex.left - pex.right;\n                }\n\n                if (props.height !== undefined) {\n                    props.height = props.height - pex.top - pex.bottom;\n                }\n            } else {\n                var bex = borderExtents(elm);\n\n                if (props.width !== undefined) {\n                    props.width = props.width + bex.left + bex.right;\n                }\n\n                if (props.height !== undefined) {\n                    props.height = props.height + bex.top + bex.bottom;\n                }\n\n            }\n            styler.css(elm, props);\n            return this;\n        }\n        return {\n            width: elm.clientWidth,\n            height: elm.clientHeight\n        };\n    }\n\n    function clientWidth(elm, value) {\n        if (value == undefined) {\n            return clientSize(elm).width;\n        } else {\n            clientSize(elm, {\n                width: value\n            });\n            return this;\n        }\n    }\n\n    function contentRect(elm) {\n        var cs = clientSize(elm),\n            pex = paddingExtents(elm);\n\n\n        //// On Opera, offsetLeft includes the parent's border\n        //if(has(\"opera\")){\n        //    pe.l += be.l;\n        //    pe.t += be.t;\n        //}\n        return {\n            left: pex.left,\n            top: pex.top,\n            width: cs.width - pex.left - pex.right,\n            height: cs.height - pex.top - pex.bottom\n        };\n    }\n\n    function getDocumentSize(doc) {\n        var documentElement = doc.documentElement,\n            body = doc.body,\n            max = Math.max,\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\n\n        return {\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\n        };\n    }\n\n    function height(elm, value) {\n        if (value == undefined) {\n            return size(elm).height;\n        } else {\n            size(elm, {\n                height: value\n            });\n            return this;\n        }\n    }\n\n    function marginExtents(elm) {\n        var s = getComputedStyle(elm);\n        return {\n            left: px(s.marginLeft),\n            top: px(s.marginTop),\n            right: px(s.marginRight),\n            bottom: px(s.marginBottom),\n        }\n    }\n\n\n    function paddingExtents(elm) {\n        var s = getComputedStyle(elm);\n        return {\n            left: px(s.paddingLeft),\n            top: px(s.paddingTop),\n            right: px(s.paddingRight),\n            bottom: px(s.paddingBottom),\n        }\n    }\n\n    //coordinate to the document\n    function pagePosition(elm, coords) {\n        if (coords === undefined) {\n            var obj = elm.getBoundingClientRect()\n            return {\n                left: obj.left + window.pageXOffset,\n                top: obj.top + window.pageYOffset\n            }\n        } else {\n            var // Get *real* offsetParent\n                parent = offsetParent(elm),\n                // Get correct offsets\n                parentOffset = pagePosition(parent),\n                mex = marginExtents(elm),\n                pbex = borderExtents(parent);\n\n            relativePosition(elm, {\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\n                left: coords.left - parentOffset.left - mex.left - pbex.left\n            });\n            return this;\n        }\n    }\n\n    function pageRect(elm, coords) {\n        if (coords === undefined) {\n            var obj = elm.getBoundingClientRect()\n            return {\n                left: obj.left + window.pageXOffset,\n                top: obj.top + window.pageYOffset,\n                width: Math.round(obj.width),\n                height: Math.round(obj.height)\n            }\n        } else {\n            pagePosition(elm, coords);\n            size(elm, coords);\n            return this;\n        }\n    }\n\n    // coordinate relative to it's parent\n    function relativePosition(elm, coords) {\n        if (coords == undefined) {\n            var // Get *real* offsetParent\n                parent = offsetParent(elm),\n                // Get correct offsets\n                offset = boundingPosition(elm),\n                parentOffset = boundingPosition(parent),\n                mex = marginExtents(elm),\n                pbex = borderExtents(parent);\n\n            // Subtract parent offsets and element margins\n            return {\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\n                left: offset.left - parentOffset.left - pbex.left - mex.left\n            }\n        } else {\n            var props = {\n                top: coords.top,\n                left: coords.left\n            }\n\n            if (styler.css(elm, \"position\") == \"static\") {\n                props['position'] = \"relative\";\n            }\n            styler.css(elm, props);\n            return this;\n        }\n    }\n\n    function relativeRect(elm, coords) {\n        if (coords === undefined) {\n            var // Get *real* offsetParent\n                parent = offsetParent(elm),\n                // Get correct offsets\n                offset = boundingRect(elm),\n                parentOffset = boundingPosition(parent),\n                mex = marginExtents(elm),\n                pbex = borderExtents(parent);\n\n            // Subtract parent offsets and element margins\n            return {\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\n                width: offset.width,\n                height: offset.height\n            }\n        } else {\n            relativePosition(elm, coords);\n            size(elm, coords);\n            return this;\n        }\n    }\n\n    function scrollIntoView(elm, align) {\n        function getOffset(elm, rootElm) {\n            var x, y, parent = elm;\n\n            x = y = 0;\n            while (parent && parent != rootElm && parent.nodeType) {\n                x += parent.offsetLeft || 0;\n                y += parent.offsetTop || 0;\n                parent = parent.offsetParent;\n            }\n\n            return { x: x, y: y };\n        }\n\n        var parentElm = elm.parentNode;\n        var x, y, width, height, parentWidth, parentHeight;\n        var pos = getOffset(elm, parentElm);\n\n        x = pos.x;\n        y = pos.y;\n        width = elm.offsetWidth;\n        height = elm.offsetHeight;\n        parentWidth = parentElm.clientWidth;\n        parentHeight = parentElm.clientHeight;\n\n        if (align == \"end\") {\n            x -= parentWidth - width;\n            y -= parentHeight - height;\n        } else if (align == \"center\") {\n            x -= (parentWidth / 2) - (width / 2);\n            y -= (parentHeight / 2) - (height / 2);\n        }\n\n        parentElm.scrollLeft = x;\n        parentElm.scrollTop = y;\n\n        return this;\n    }\n\n    function scrollLeft(elm, value) {\n        var hasScrollLeft = \"scrollLeft\" in elm;\n        if (value === undefined) {\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\n        } else {\n            if (hasScrollLeft) {\n                elm.scrollLeft = value;\n            } else {\n                elm.scrollTo(value, elm.scrollY);\n            }\n            return this;\n        }\n    }\n\n    function scrollTop(elm, value) {\n        var hasScrollTop = \"scrollTop\" in elm;\n\n        if (value === undefined) {\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\n        } else {\n            if (hasScrollTop) {\n                elm.scrollTop = value;\n            } else {\n                elm.scrollTo(elm.scrollX, value);\n            }\n            return this;\n        }\n    }\n\n    function size(elm, dimension) {\n        if (dimension == undefined) {\n            if (langx.isWindow(elm)) {\n                return {\n                    width: elm.innerWidth,\n                    height: elm.innerHeight\n                }\n\n            } else if (langx.isDocument(elm)) {\n                return getDocumentSize(document);\n            } else {\n                return {\n                    width: elm.offsetWidth,\n                    height: elm.offsetHeight\n                }\n            }\n        } else {\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\n                props = {\n                    width: dimension.width,\n                    height: dimension.height\n                };\n            if (!isBorderBox) {\n                var pex = paddingExtents(elm),\n                    bex = borderExtents(elm);\n\n                if (props.width !== undefined) {\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\n                }\n\n                if (props.height !== undefined) {\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\n                }\n            }\n            styler.css(elm, props);\n            return this;\n        }\n    }\n\n    function width(elm, value) {\n        if (value == undefined) {\n            return size(elm).width;\n        } else {\n            size(elm, {\n                width: value\n            });\n            return this;\n        }\n    }\n\n    function geom() {\n        return geom;\n    }\n\n    langx.mixin(geom, {\n        borderExtents: borderExtents,\n        //viewport coordinate\n        boundingPosition: boundingPosition,\n\n        boundingRect: boundingRect,\n\n        clientHeight: clientHeight,\n\n        clientSize: clientSize,\n\n        clientWidth: clientWidth,\n\n        contentRect: contentRect,\n\n        getDocumentSize: getDocumentSize,\n\n        height: height,\n\n        marginExtents: marginExtents,\n\n        offsetParent: offsetParent,\n\n        paddingExtents: paddingExtents,\n\n        //coordinate to the document\n        pagePosition: pagePosition,\n\n        pageRect: pageRect,\n\n        // coordinate relative to it's parent\n        relativePosition: relativePosition,\n\n        relativeRect: relativeRect,\n\n        scrollIntoView: scrollIntoView,\n\n        scrollLeft: scrollLeft,\n\n        scrollTop: scrollTop,\n\n        size: size,\n\n        width: width\n    });\n\n    return skylark.geom = geom;\n});\n\ndefine('skylark-utils/eventer',[\n    \"./skylark\",\n    \"./langx\",\n    \"./browser\",\n    \"./finder\",\n    \"./noder\",\n    \"./datax\"\n], function(skylark, langx, browser, finder, noder, datax) {\n    var mixin = langx.mixin,\n        each = langx.each,\n        slice = Array.prototype.slice,\n        uid = langx.uid,\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\n        eventMethods = {\n            preventDefault: \"isDefaultPrevented\",\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\n            stopPropagation: \"isPropagationStopped\"\n        },\n        readyRE = /complete|loaded|interactive/;\n\n    function compatible(event, source) {\n        if (source || !event.isDefaultPrevented) {\n            if (!source) {\n                source = event;\n            }\n\n            langx.each(eventMethods, function(name, predicate) {\n                var sourceMethod = source[name];\n                event[name] = function() {\n                    this[predicate] = langx.returnTrue;\n                    return sourceMethod && sourceMethod.apply(source, arguments);\n                }\n                event[predicate] = langx.returnFalse;\n            });\n        }\n        return event;\n    }\n\n    function parse(event) {\n        var segs = (\"\" + event).split(\".\");\n        return {\n            type: segs[0],\n            ns: segs.slice(1).sort().join(\" \")\n        };\n    }\n\n    //create a custom dom event\n    var createEvent = (function() {\n        var EventCtors = [\n                window[\"CustomEvent\"], // 0 default\n                window[\"CompositionEvent\"], // 1\n                window[\"DragEvent\"], // 2\n                window[\"Event\"], // 3\n                window[\"FocusEvent\"], // 4\n                window[\"KeyboardEvent\"], // 5\n                window[\"MessageEvent\"], // 6\n                window[\"MouseEvent\"], // 7\n                window[\"MouseScrollEvent\"], // 8\n                window[\"MouseWheelEvent\"], // 9\n                window[\"MutationEvent\"], // 10\n                window[\"ProgressEvent\"], // 11\n                window[\"TextEvent\"], // 12\n                window[\"TouchEvent\"], // 13\n                window[\"UIEvent\"], // 14\n                window[\"WheelEvent\"] // 15\n            ],\n            NativeEvents = {\n                \"compositionstart\": 1, // CompositionEvent\n                \"compositionend\": 1, // CompositionEvent\n                \"compositionupdate\": 1, // CompositionEvent\n\n                \"beforecopy\": 2, // DragEvent\n                \"beforecut\": 2, // DragEvent\n                \"beforepaste\": 2, // DragEvent\n                \"copy\": 2, // DragEvent\n                \"cut\": 2, // DragEvent\n                \"paste\": 2, // DragEvent\n\n                \"drag\": 2, // DragEvent\n                \"dragend\": 2, // DragEvent\n                \"dragenter\": 2, // DragEvent\n                \"dragexit\": 2, // DragEvent\n                \"dragleave\": 2, // DragEvent\n                \"dragover\": 2, // DragEvent\n                \"dragstart\": 2, // DragEvent\n                \"drop\": 2, // DragEvent\n\n                \"abort\": 3, // Event\n                \"change\": 3, // Event\n                \"error\": 3, // Event\n                \"selectionchange\": 3, // Event\n                \"submit\": 3, // Event\n                \"reset\": 3, // Event\n\n                \"focus\": 4, // FocusEvent\n                \"blur\": 4, // FocusEvent\n                \"focusin\": 4, // FocusEvent\n                \"focusout\": 4, // FocusEvent\n\n                \"keydown\": 5, // KeyboardEvent\n                \"keypress\": 5, // KeyboardEvent\n                \"keyup\": 5, // KeyboardEvent\n\n                \"message\": 6, // MessageEvent\n\n                \"click\": 7, // MouseEvent\n                \"contextmenu\": 7, // MouseEvent\n                \"dblclick\": 7, // MouseEvent\n                \"mousedown\": 7, // MouseEvent\n                \"mouseup\": 7, // MouseEvent\n                \"mousemove\": 7, // MouseEvent\n                \"mouseover\": 7, // MouseEvent\n                \"mouseout\": 7, // MouseEvent\n                \"mouseenter\": 7, // MouseEvent\n                \"mouseleave\": 7, // MouseEvent\n\n\n                \"textInput\": 12, // TextEvent\n\n                \"touchstart\": 13, // TouchEvent\n                \"touchmove\": 13, // TouchEvent\n                \"touchend\": 13, // TouchEvent\n\n                \"load\": 14, // UIEvent\n                \"resize\": 14, // UIEvent\n                \"select\": 14, // UIEvent\n                \"scroll\": 14, // UIEvent\n                \"unload\": 14, // UIEvent,\n\n                \"wheel\": 15 // WheelEvent\n            }\n        ;\n\n        function getEventCtor(type) {\n            var idx = NativeEvents[type];\n            if (!idx) {\n                idx = 0;\n            }\n            return EventCtors[idx];\n        }\n\n        return function(type, props) {\n            //create a custom dom event\n\n            if (langx.isString(type)) {\n                props = props || {};\n            } else {\n                props = type;\n                type = props.type;\n            }\n            var parsed = parse(type);\n            type = parsed.type;\n\n            props = langx.mixin({\n                bubbles: true,\n                cancelable: true\n            }, props);\n\n            if (parsed.ns) {\n                props.namespace = parsed.ns;\n            }\n\n            var ctor = getEventCtor(type),\n                e = new ctor(type, props);\n\n            langx.safeMixin(e, props);\n\n            return compatible(e);\n        };\n    })();\n\n    function createProxy(event) {\n        var key,\n            proxy = {\n                originalEvent: event\n            };\n        for (key in event) {\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\n                proxy[key] = event[key];\n            }\n        }\n        return compatible(proxy, event);\n    }\n\n    var\n        specialEvents = {},\n        focusinSupported = \"onfocusin\" in window,\n        focus = { focus: \"focusin\", blur: \"focusout\" },\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\n        realEvent = function(type) {\n            return hover[type] || (focusinSupported && focus[type]) || type;\n        },\n        handlers = {},\n        EventBindings = langx.klass({\n            init: function(target, event) {\n                this._target = target;\n                this._event = event;\n                this._bindings = [];\n            },\n\n            add: function(fn, options) {\n                var bindings = this._bindings,\n                    binding = {\n                        fn: fn,\n                        options: langx.mixin({}, options)\n                    };\n\n                bindings.push(binding);\n\n                var self = this;\n                if (!self._listener) {\n                    self._listener = function(domEvt) {\n                        var elm = this,\n                            e = createProxy(domEvt),\n                            args = domEvt._args,\n                            bindings = self._bindings,\n                            ns = e.namespace;\n\n                        if (langx.isDefined(args)) {\n                            args = [e].concat(args);\n                        } else {\n                            args = [e];\n                        }\n\n                        langx.each(bindings,function(idx,binding) {\n                            var match = elm;\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\n                                return false;\n                            }\n                            var fn = binding.fn,\n                                options = binding.options || {},\n                                selector = options.selector,\n                                one = options.one,\n                                data = options.data;\n\n                            if (ns && ns != options.ns) {\n                                return ;\n                            }\n                            if (selector) {\n                                match = finder.closest(e.target, selector);\n                                if (match && match !== elm) {\n                                    langx.mixin(e, {\n                                        currentTarget: match,\n                                        liveFired: elm\n                                    });\n                                } else {\n                                    return ;\n                                }\n                            }\n\n                            if (langx.isDefined(data)) {\n                                e.data = data;\n                            }\n\n                            if (one) {\n                                self.remove(fn, options);\n                            }\n\n                            var result = fn.apply(match, args);\n\n                            if (result === false) {\n                                e.preventDefault();\n                                e.stopPropagation();\n                            }\n                        });;\n                    };\n\n                    var event = self._event;\n                    if (event in hover) {\n                        var l = self._listener;\n                        self._listener = function(e) {\n                            var related = e.relatedTarget;\n                            if (!related || (related !== this && !noder.contains(this, related))) {\n                                return l.apply(this, arguments);\n                            }\n                        }\n                    }\n\n                    if (self._target.addEventListener) {\n                        self._target.addEventListener(realEvent(event), self._listener, false);\n                    } else {\n                        console.warn(\"invalid eventer object\", self._target);\n                    }\n                }\n\n            },\n            remove: function(fn, options) {\n                options = langx.mixin({}, options);\n\n                function matcherFor(ns) {\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\n                }\n                var matcher;\n                if (options.ns) {\n                    matcher = matcherFor(options.ns);\n                }\n\n                this._bindings = this._bindings.filter(function(binding) {\n                    var removing = (!fn || fn === binding.fn) &&\n                        (!matcher || matcher.test(binding.options.ns)) &&\n                        (!options.selector || options.selector == binding.options.selector);\n\n                    return !removing;\n                });\n                if (this._bindings.length == 0) {\n                    if (this._target.removeEventListener) {\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\n                    }\n                    this._listener = null;\n                }\n            }\n        }),\n        EventsHandler = langx.klass({\n            init: function(elm) {\n                this._target = elm;\n                this._handler = {};\n            },\n\n            // add a event listener\n            // selector Optional\n            register: function(event, callback, options) {\n                // Seperate the event from the namespace\n                var parsed = parse(event),\n                    event = parsed.type,\n                    specialEvent = specialEvents[event],\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\n\n                var events = this._handler;\n\n                // Check if there is already a handler for this event\n                if (events[event] === undefined) {\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\n                }\n\n                // Register the new callback function\n                events[event].add(callback, langx.mixin({\n                    ns: parsed.ns\n                }, options)); // options:{selector:xxx}\n            },\n\n            // remove a event listener\n            unregister: function(event, fn, options) {\n                // Check for parameter validtiy\n                var events = this._handler,\n                    parsed = parse(event);\n                event = parsed.type;\n\n                var listener = events[event];\n\n                if (listener) {\n                    listener.remove(fn, langx.mixin({\n                        ns: parsed.ns\n                    }, options));\n                }\n            }\n        }),\n\n        findHandler = function(elm) {\n            var id = uid(elm),\n                handler = handlers[id];\n            if (!handler) {\n                handler = handlers[id] = new EventsHandler(elm);\n            }\n            return handler;\n        };\n\n    function off(elm, events, selector, callback) {\n        var $this = this\n        if (langx.isPlainObject(events)) {\n            langx.each(events, function(type, fn) {\n                off(elm, type, selector, fn);\n            })\n            return $this;\n        }\n\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\n            callback = selector;\n            selector = undefined;\n        }\n\n        if (callback === false) {\n            callback = langx.returnFalse;\n        }\n\n        if (typeof events == \"string\") {\n            if (events.indexOf(\",\") > -1) {\n                events = events.split(\",\");\n            } else {\n                events = events.split(/\\s/);\n            }\n        }\n\n        var handler = findHandler(elm);\n\n        if (events) events.forEach(function(event) {\n\n            handler.unregister(event, callback, {\n                selector: selector,\n            });\n        });\n        return this;\n    }\n\n    function on(elm, events, selector, data, callback, one) {\n\n        var autoRemove, delegator;\n        if (langx.isPlainObject(events)) {\n            langx.each(events, function(type, fn) {\n                on(elm, type, selector, data, fn, one);\n            });\n            return this;\n        }\n\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\n            callback = data;\n            data = selector;\n            selector = undefined;\n        }\n\n        if (langx.isFunction(data)) {\n            callback = data;\n            data = undefined;\n        }\n\n        if (callback === false) {\n            callback = langx.returnFalse;\n        }\n\n        if (typeof events == \"string\") {\n            if (events.indexOf(\",\") > -1) {\n                events = events.split(\",\");\n            } else {\n                events = events.split(/\\s/);\n            }\n        }\n\n        var handler = findHandler(elm);\n\n        events.forEach(function(event) {\n            if (event == \"ready\") {\n                return ready(callback);\n            }\n            handler.register(event, callback, {\n                data: data,\n                selector: selector,\n                one: !!one\n            });\n        });\n        return this;\n    }\n\n    function one(elm, events, selector, data, callback) {\n        on(elm, events, selector, data, callback, 1);\n\n        return this;\n    }\n\n    function stop(event) {\n        if (window.document.all) {\n            event.keyCode = 0;\n        }\n        if (event.preventDefault) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    function trigger(evented, type, args) {\n        var e;\n        if (type instanceof Event) {\n            e = type;\n        } else {\n            e = createEvent(type, args);\n        }\n        e._args = args;\n\n        (evented.dispatchEvent || evented.trigger).call(evented, e);\n\n        return this;\n    }\n\n    function ready(callback) {\n        // need to check if document.body exists for IE as that browser reports\n        // document ready when it hasn't yet created the body elm\n        if (readyRE.test(document.readyState) && document.body) {\n            callback()\n        } else {\n            document.addEventListener('DOMContentLoaded', callback, false);\n        }\n\n        return this;\n    }\n\n    var keyCodeLookup = {\n        \"delete\": 46\n    };\n    //example:\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\n    function shortcuts(elm) {\n\n        var registry = datax.data(elm, \"shortcuts\");\n        if (!registry) {\n            registry = {};\n            datax.data(elm, \"shortcuts\", registry);\n            var run = function(shortcut, event) {\n                var n = event.metaKey || event.ctrlKey;\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\n                        event.preventDefault();\n                        if (\"keydown\" == event.type) {\n                            shortcut.fn(event);\n                        }\n                        return true;\n                    }\n                }\n            };\n            on(elm, \"keyup keypress keydown\", function(event) {\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\n                    for (var key in registry) {\n                        run(registry[key], event);\n                    }\n                }\n            });\n\n        }\n\n        return {\n            add: function(pattern, fn) {\n                var shortcutKeys;\n                if (pattern.indexOf(\",\") > -1) {\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\n                } else {\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\n                }\n                shortcutKeys.forEach(function(shortcutKey) {\n                    var setting = {\n                        fn: fn,\n                        alt: false,\n                        ctrl: false,\n                        shift: false\n                    };\n                    shortcutKey.split(\"+\").forEach(function(key) {\n                        switch (key) {\n                            case \"alt\":\n                            case \"ctrl\":\n                            case \"shift\":\n                                setting[key] = true;\n                                break;\n                            default:\n                                setting.charCode = key.charCodeAt(0);\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\n                        }\n                    });\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\n                    registry[regKey] = setting;\n                })\n            }\n\n        };\n\n    }\n\n    function eventer() {\n        return eventer;\n    }\n\n    langx.mixin(eventer, {\n        create: createEvent,\n\n        off: off,\n\n        on: on,\n\n        one: one,\n\n        proxy: createProxy,\n\n        ready: ready,\n\n        shortcuts: shortcuts,\n\n        special : specialEvents,\n\n        stop: stop,\n\n        trigger: trigger\n\n    });\n\n    return skylark.eventer = eventer;\n});\n\ndefine('skylark-utils/dnd',[\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\",\n    \"./datax\",\n    \"./finder\",\n    \"./geom\",\n    \"./eventer\",\n    \"./styler\"\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\n    var on = eventer.on,\n        off = eventer.off,\n        attr = datax.attr,\n        removeAttr = datax.removeAttr,\n        offset = geom.pagePosition,\n        addClass = styler.addClass,\n        height = geom.height;\n\n\n    var DndManager = langx.Evented.inherit({\n      klassName : \"DndManager\",\n\n      init : function() {\n\n      },\n\n      prepare : function(draggable) {\n          var e = eventer.create(\"preparing\",{\n             dragSource : draggable.elm,\n             handleElm : draggable.handleElm\n          });\n          draggable.trigger(e);\n          draggable.dragSource = e.dragSource;\n      },\n\n      start : function(draggable,event) {\n\n        var p = geom.pagePosition(draggable.elm);\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\n\n        var e = eventer.create(\"started\",{\n          elm : draggable.elm,\n          dragSource : draggable.dragSource,\n          handleElm : draggable.handleElm,\n          ghost : null,\n\n          transfer : {\n          }\n        });\n\n        draggable.trigger(e);\n\n\n        this.dragging = draggable;\n\n        if (draggable.draggingClass) {\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\n        }\n\n        this.draggingGhost = e.ghost;\n        if (!this.draggingGhost) {\n          this.draggingGhost = draggable.elm;\n        }\n\n        this.draggingTransfer = e.transfer;\n        if (this.draggingTransfer) {\n\n            langx.each(this.draggingTransfer,function(key,value){\n                event.dataTransfer.setData(key, value);\n            });\n        }\n\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\n\n        event.dataTransfer.effectAllowed = \"copyMove\";\n\n        this.trigger(e);\n      },\n\n      over : function() {\n\n      },\n\n      end : function(dropped) {\n        var dragging = this.dragging;\n        if (dragging) {\n          if (dragging.draggingClass) {\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\n          }\n        }\n\n        var e = eventer.create(\"ended\",{\n        });        \n        this.trigger(e);\n\n\n        this.dragging = null;\n        this.draggingTransfer = null;\n        this.draggingGhost = null;\n        this.draggingOffsetX = null;\n        this.draggingOffsetY = null;\n      }\n    });\n\n    var manager = new DndManager(),\n        draggingHeight,\n        placeholders = [];\n\n\n\n    var Draggable = langx.Evented.inherit({\n      klassName : \"Draggable\",\n\n      init : function (elm,params) {\n        var self = this;\n\n        self.elm = elm;\n        self.draggingClass = params.draggingClass || \"dragging\",\n        self._params = params;\n\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\n            if (langx.isFunction(params[eventName])) {\n                self.on(eventName, params[eventName]);\n            }\n        });\n\n\n        eventer.on(elm,{\n          \"mousedown\" : function(e) {\n            if (params.handle) {\n              self.handleElm = finder.closest(e.target,params.handle);\n              if (!self.handleElm) {\n                return;\n              }\n            }\n            manager.prepare(self);\n            if (self.dragSource) {\n              datax.prop(self.dragSource, \"draggable\", true);\n            }\n          },\n\n          \"mouseup\" :   function(e) {\n            if (self.dragSource) {\n              datax.prop(self.dragSource, \"draggable\", false);\n              self.dragSource = null;\n              self.handleElm = null;\n            }\n          },\n\n          \"dragstart\":  function(e) {\n            datax.prop(self.dragSource, \"draggable\", false);\n            manager.start(self, e);\n          },\n\n          \"dragend\":   function(e){\n            eventer.stop(e);\n\n            if (!manager.dragging) {\n              return;\n            }\n\n            manager.end(false);\n          }\n        });\n\n      }\n\n    });\n\n\n    var Droppable = langx.Evented.inherit({\n      klassName : \"Droppable\",\n\n      init : function(elm,params) {\n        var self = this,\n            draggingClass = params.draggingClass || \"dragging\",\n            hoverClass,\n            activeClass,\n            acceptable = true;\n\n        self.elm = elm;\n        self._params = params;\n\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\n            if (langx.isFunction(params[eventName])) {\n                self.on(eventName, params[eventName]);\n            }\n        });\n\n        eventer.on(elm,{\n          \"dragover\" : function(e) {\n            e.stopPropagation()\n\n            if (!acceptable) {\n              return\n            }\n\n            var e2 = eventer.create(\"overing\",{\n                overElm : e.target,\n                transfer : manager.draggingTransfer,\n                acceptable : true\n            });\n            self.trigger(e2);\n\n            if (e2.acceptable) {\n              e.preventDefault() // allow drop\n\n              e.dataTransfer.dropEffect = \"copyMove\";\n            }\n\n          },\n\n          \"dragenter\" :   function(e) {\n            var params = self._params,\n                elm = self.elm;\n\n            var e2 = eventer.create(\"entered\",{\n                transfer : manager.draggingTransfer\n            });\n\n            self.trigger(e2);\n\n            e.stopPropagation()\n\n            if (hoverClass && acceptable) {\n              styler.addClass(elm,hoverClass)\n            }\n          },\n\n          \"dragleave\":  function(e) {\n            var params = self._params,\n                elm = self.elm;\n            if (!acceptable) return false\n            \n            var e2 = eventer.create(\"leaved\",{\n                transfer : manager.draggingTransfer\n            });\n            \n            self.trigger(e2);\n\n            e.stopPropagation()\n\n            if (hoverClass && acceptable) {\n              styler.removeClass(elm,hoverClass);\n            }\n          },\n\n          \"drop\":   function(e){\n            var params = self._params,\n                elm = self.elm;\n\n            eventer.stop(e); // stops the browser from redirecting.\n\n            if (!manager.dragging) return\n\n           // manager.dragging.elm.removeClass('dragging');\n\n            if (hoverClass && acceptable) {\n              styler.addClass(elm,hoverClass)\n            }\n\n            var e2 = eventer.create(\"dropped\",{\n                transfer : manager.draggingTransfer\n            });\n\n            self.trigger(e2);\n\n            manager.end(true)\n          }\n        });\n\n        manager.on(\"started\",function(e){\n            var e2 = eventer.create(\"started\",{\n                transfer : manager.draggingTransfer,\n                acceptable : false\n            });\n\n            self.trigger(e2);\n\n            acceptable = e2.acceptable;\n            hoverClass = e2.hoverClass;\n            activeClass = e2.activeClass;\n\n            if (activeClass && acceptable) {\n              styler.addClass(elm,activeClass);\n            }\n\n         }).on(\"ended\" , function(e){\n            var e2 = eventer.create(\"ended\",{\n                transfer : manager.draggingTransfer,\n                acceptable : false\n            });\n\n            self.trigger(e2);\n\n            if (hoverClass && acceptable) {\n              styler.removeClass(elm,hoverClass);\n            }\n            if (activeClass && acceptable) {\n              styler.removeClass(elm,activeClass);\n            }\n\n            acceptable = false;\n            activeClass = null;\n            hoverClass = null;\n        });\n\n      }\n    });\n\n\n    function draggable(elm, params) {\n      return new Draggable(elm,params);\n    }\n\n    function droppable(elm, params) {\n      return new Droppable(elm,params);\n    }\n\n    function dnd(){\n      return dnd;\n    }\n\n    langx.mixin(dnd, {\n       //params ： {\n        //  target : Element or string or function\n        //  handle : Element\n        //  copy : boolean\n        //  placeHolder : \"div\"\n        //  hoverClass : \"hover\"\n        //  start : function\n        //  enter : function\n        //  over : function\n        //  leave : function\n        //  drop : function\n        //  end : function\n        //\n        //\n        //}\n        draggable   : draggable,\n\n        //params ： {\n        //  accept : string or function\n        //  placeHolder\n        //\n        //\n        //\n        //}\n        droppable : droppable,\n\n        manager : manager\n\n\n    });\n\n    return skylark.dnd = dnd;\n});\n\ndefine('skylark-utils/_devices/usermedia',[\n    \"../langx\"\n], function(langx) {\n    navigator.getUserMedia = navigator.getUserMedia\n                        || navigator.webkitGetUserMedia\n                        || navigator.mozGetUserMedia\n                        || navigator.msGetUserMedia;\n   \n    var Deferred = langx.Deferred,\n        localStream  = null;\n\n    function usermedia() {\n        return usermedia;\n    }\n\n    langx.mixin(usermedia, {\n        isSupported : function() {\n            return !!navigator.getUserMedia;\n        },\n\n        start : function(video,audio) {\n\n            var d = new Deferred();\n            navigator.getUserMedia (\n                {video: true,audio: true},\n                // successCallback\n                function(stream) {\n                    localStream = stream;\n                    video.src = window.URL.createObjectURL(localMediaStream);\n                    video.onloadedmetadata = function(e) {\n                         // Do something with the video here.\n                    };\n                    d.resolve();\n                },\n\n                // errorCallback\n                function(err) {\n                  d.reject(err);\n                }\n            );\n\n            return d.promise;\n        },\n\n        stop : function() {\n            if (localStream) {\n                localStream.stop();\n                localStream = null; \n            }\n        }\n    });\n\n\n    return  usermedia;\n});\n\ndefine('skylark-utils/_devices/vibrate',[\n    \"../langx\"\n], function(langx) {\n    navigator.vibrate = navigator.vibrate\n                        || navigator.webkitVibrate\n                        || navigator.mozVibrate\n                        || navigator.msVibrate;\n    \n\n    function vibrate() {\n        return vibrate;\n    }\n\n    langx.mixin(vibrate, {\n        isSupported : function() {\n            return !!navigator.vibrate;\n        },\n\n        start : function(duration) {\n            navigator.vibrate(duration);\n        },\n\n        stop : function() {\n            navigator.vibrate(0);\n        }\n    });\n\n\n    return  vibrate;\n});\n\ndefine('skylark-utils/devices',[\n    \"./skylark\",\n    \"./langx\",\n    \"./_devices/usermedia\",\n    \"./_devices/vibrate\"\n], function(skylark,langx,usermedia,vibrate) {\n\n    function devices() {\n        return devices;\n    }\n\n    langx.mixin(devices, {\n        usermedia: usermedia,\n        vibrate : vibrate\n    });\n\n\n    return skylark.devices = devices;\n});\n\ndefine('skylark-utils/filer',[\n    \"./skylark\",\n    \"./langx\",\n    \"./eventer\",\n    \"./styler\"\n], function(skylark, langx, eventer,styler) {\n    var on = eventer.on,\n        attr = eventer.attr,\n        Deferred = langx.Deferred,\n\n        fileInput,\n        fileInputForm,\n        fileSelected,\n        maxFileSize = 1 / 0;\n\n    function dataURLtoBlob(dataurl) {\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n        while(n--){\n            u8arr[n] = bstr.charCodeAt(n);\n        }\n        return new Blob([u8arr], {type:mime});\n    }\n\n    function selectFile(callback) {\n        fileSelected = callback;\n        if (!fileInput) {\n            var input = fileInput = document.createElement(\"input\");\n\n            function selectFiles(pickedFiles) {\n                for (var i = pickedFiles.length; i--;) {\n                    if (pickedFiles[i].size > maxFileSize) {\n                        pickedFiles.splice(i, 1);\n                    }\n                }\n                fileSelected(pickedFiles);\n            }\n\n            input.type = \"file\";\n            input.style.position = \"fixed\",\n                input.style.left = 0,\n                input.style.top = 0,\n                input.style.opacity = .001,\n                document.body.appendChild(input);\n\n            input.onchange = function(e) {\n                selectFiles(Array.prototype.slice.call(e.target.files));\n                // reset to \"\", so selecting the same file next time still trigger the change handler\n                input.value = \"\";\n            };\n        }\n        fileInput.click();\n    }\n\n    function upload(files, url, params) {\n        params = params || {};\n        var chunkSize = params.chunkSize || 0,\n            maxSize = params.maxSize || 0,\n            progressCallback = params.progress,\n            errorCallback = params.error,\n            completedCallback = params.completed,\n            uploadedCallback = params.uploaded;\n\n\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\n            function handleProcess(nowLoadedSize) {\n                var t;\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \n                if (progressCallback) {\n                    progressCallback({\n                        name: file.name,\n                        loaded: oneFileloadedSize + nowLoadedSize,\n                        total: file.size,\n                        percent: percent,\n                        bytesPerSecond: speed,\n                        global: {\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\n                            total: totalSize\n                        }\n                    });\n                }\n            }\n            var file = fileItem.file,\n                uploadChunkSize = chunkSize || file.size,\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\n\n            xhr = createXmlHttpRequest();\n            //xhr.open(\"POST\", url + \n            //                \"?action=upload&path=\" + \n            //                encodeURIComponent(path) + \n            //                \"&name=\" + encodeURIComponent(file.name) + \n            //                \"&loaded=\" + oneFileloadedSize + \n            //                \"&total=\" + file.size + \n            //                \"&id=\" + id + \n            //                \"&csrf=\" + encodeURIComponent(token) + \n            //                \"&resolution=\" + \n            //                encodeURIComponent(fileItem.type));\n            xhr.upload.onprogress = function(event) {\n                handleProcess(event.loaded - (event.total - h.size))\n            };\n            xhr.onload = function() {\n                var response, i;\n                xhr.upload.onprogress({\n                    loaded: h.size,\n                    total: h.size\n                });\n                try {\n                    response = JSON.parse(xhr.responseText);\n                } catch (e) {\n                    i = {\n                        code: -1,\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\n                        data: {\n                            fileName: file.name,\n                            fileSize: file.size,\n                            maxSize: uploadMaxSize,\n                            extensions: extensions.join(\", \")\n                        },\n                        extra: extra\n                    };\n                    errorFileInfos.push(i);\n                    if (errorCallback) {\n                        errorCallback(i);\n                    }\n                    return uploadFiles(fileItems)\n                }\n                if (response.error) {\n\n                    i = {\n                        code: response.error.code,\n                        message: response.error.message,\n                        data: {\n                            fileName: file.name,\n                            fileSize: file.size,\n                            maxSize: uploadMaxSize,\n                            extensions: extensions.join(\", \")\n                        },\n                        extra: extra\n                    }; \n                    errorFileInfos.push(i); \n                    if (errorCallback) {\n                        errorCallback(i);\n                    }\n                    uploadFiles(fileItems);\n                } else {\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\n                    } else {\n                        if (response.result) {\n                            utils.each(response.result, function(e) {\n                                e = File.fromJSON(e);\n                                uploadFileItems.push(e);\n\n                                if (uploadedCallback) {\n                                    uploadedCallback({\n                                        file: e\n                                    });\n                                }\n                            }); \n\n                        } \n                        allLoadedSize += file.size;\n                        response.result && k.push(response.result);\n                        uploadFiles(fileItems);\n                    }                            \n                }     \n\n            };\n            handleProcess(0);\n            xhr.send(createFormData(h));\n        }\n\n        function uploadFiles(fileItems) {\n            var fileItem = fileItems.shift();\n            processedFilesCount++; \n            if (fileItem && fileItem.file.error) {\n                uploadFiles(fileItem);\n            } else {\n                if (uploadingFile) {\n                    uploadOneFile(fileItem, null, 0, fileItems);\n                } else {\n\n                    if (completedCallback) {\n                        completedCallback({\n                            files: new FileCollection(uploadFileItems),\n                            bytesPerSecond: I,\n                            errors: E(D),\n                            extra: extra\n                        });\n                    }\n                }  \n            }\n        }\n\n        var self = this,\n            fileItems = [],\n            processedFilesCount = -1,\n            xhr, \n            totalSize = 0,\n            allLoadedSize = 0,\n            k = [],\n            errorFileInfos = [],\n            startedTime = now(),\n            I = 0,\n            uploadFileItems = [];\n\n        for ( var  i = 0; i < files.length; i++) {\n            totalSize += files[i].size;\n            fileItems.push({\n                file : files[i]\n            });\n        }        \n\n        uploadFiles(fileItems);\n    }\n\n\n    var filer = function() {\n        return filer;\n    };\n\n    langx.mixin(filer , {\n        dropzone: function(elm, params) {\n            params = params || {};\n            var hoverClass = params.hoverClass || \"dropzone\",\n                droppedCallback = params.dropped;\n\n            var enterdCount = 0;\n            on(elm, \"dragenter\", function(e) {\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\n                    eventer.stop(e);\n                    enterdCount ++;\n                    styler.addClass(elm,hoverClass)\n                }\n            });\n\n            on(elm, \"dragover\", function(e) {\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\n                    eventer.stop(e);\n                }\n            });\n\n\n            on(elm, \"dragleave\", function(e) {\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\n                    enterdCount--\n                    if (enterdCount==0) {\n                        styler.removeClass(elm,hoverClass);\n                    }\n                }\n            });\n\n            on(elm, \"drop\", function(e) {\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\n                    styler.removeClass(elm,hoverClass)\n                    eventer.stop(e);\n                    if (droppedCallback) {\n                        droppedCallback(e.dataTransfer.files);\n                    }\n                }\n            });\n\n\n            return this;\n        },\n\n        picker: function(elm, params) {\n            params = params || {};\n\n            var pickedCallback = params.picked;\n\n            on(elm, \"click\", function(e) {\n                e.preventDefault();\n                selectFile(pickedCallback);\n            });\n            return this;\n        },\n\n        readFile : function(file,params) {\n            params = params || {};\n            var d = new Deferred,\n                reader = new FileReader();\n            \n            reader.onload = function(evt) {\n                d.resolve(evt.target.result);\n            };\n            reader.onerror = function(e) {\n                var code = e.target.error.code;\n                if (code === 2) {\n                    alert('please don\\'t open this page using protocol fill:///');\n                } else {\n                    alert('error code: ' + code);\n                }\n            };\n            \n            if (params.asArrayBuffer){\n                reader.readAsArrayBuffer(file);\n            } else if (params.asDataUrl) {\n                reader.readAsDataURL(file);                \n            } else if (params.asText) {\n                reader.readAsText(file);\n            } else {\n                reader.readAsArrayBuffer(file);\n            }\n\n            return d.promise;\n        },\n\n        writeFile : function(data,name) {\n            if (window.navigator.msSaveBlob) { \n               if (langx.isString(data)) {\n                   data = dataURItoBlob(data);\n               }\n               window.navigator.msSaveBlob(data, name);\n            } else {\n                var a = document.createElement('a');\n                if (data instanceof Blob) {\n                    data = langx.URL.createObjectURL(data);\n                }\n                a.href = data;\n                a.setAttribute('download', name || 'noname');\n                a.dispatchEvent(new CustomEvent('click'));\n            }              \n        }\n\n\n    });\n\n    return skylark.filer = filer;\n});\n\ndefine('skylark-utils/fx',[\n    \"./skylark\",\n    \"./langx\",\n    \"./browser\",\n    \"./styler\",\n    \"./eventer\"\n], function(skylark, langx, browser, styler, eventer) {\n    var animationName,\n        animationDuration,\n        animationTiming,\n        animationDelay,\n        transitionProperty,\n        transitionDuration,\n        transitionTiming,\n        transitionDelay,\n\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\n\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\n        transform = browser.css3PropPrefix + \"transform\",\n        cssReset = {};\n\n\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\n\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\n\n\n\n    function animate(elm, properties, duration, ease, callback, delay) {\n        var key,\n            cssValues = {},\n            cssProperties = [],\n            transforms = \"\",\n            that = this,\n            endEvent,\n            wrappedCallback,\n            fired = false,\n            hasScrollTop = false;\n\n        if (langx.isPlainObject(duration)) {\n            ease = duration.easing;\n            callback = duration.complete;\n            delay = duration.delay;\n            duration = duration.duration;\n        }\n\n        if (langx.isString(duration)) {\n            duration = fx.speeds[duration];\n        }\n        if (duration === undefined) {\n            duration = fx.speeds.normal;\n        }\n        duration = duration / 1000;\n        if (fx.off) {\n            duration = 0;\n        }\n\n        if (langx.isFunction(ease)) {\n            callback = ease;\n            eace = \"swing\";\n        } else {\n            ease = ease || \"swing\";\n        }\n\n        if (delay) {\n            delay = delay / 1000;\n        } else {\n            delay = 0;\n        }\n\n        if (langx.isString(properties)) {\n            // keyframe animation\n            cssValues[animationName] = properties;\n            cssValues[animationDuration] = duration + \"s\";\n            cssValues[animationTiming] = ease;\n            endEvent = animationEnd;\n        } else {\n            // CSS transitions\n            for (key in properties) {\n                if (supportedTransforms.test(key)) {\n                    transforms += key + \"(\" + properties[key] + \") \";\n                } else {\n                    if (key === \"scrollTop\") {\n                        hasScrollTop = true;\n                    }\n                    cssValues[key] = properties[key];\n                    cssProperties.push(langx.dasherize(key));\n                }\n            }\n            endEvent = transitionEnd;\n        }\n\n        if (transforms) {\n            cssValues[transform] = transforms;\n            cssProperties.push(transform);\n        }\n\n        if (duration > 0 && langx.isPlainObject(properties)) {\n            cssValues[transitionProperty] = cssProperties.join(\", \");\n            cssValues[transitionDuration] = duration + \"s\";\n            cssValues[transitionDelay] = delay + \"s\";\n            cssValues[transitionTiming] = ease;\n        }\n\n        wrappedCallback = function(event) {\n            fired = true;\n            if (event) {\n                if (event.target !== event.currentTarget) {\n                    return // makes sure the event didn't bubble from \"below\"\n                }\n                eventer.off(event.target, endEvent, wrappedCallback)\n            } else {\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\n            }\n            styler.css(elm, cssReset);\n            callback && callback.call(this);\n        };\n\n        if (duration > 0) {\n            eventer.on(elm, endEvent, wrappedCallback);\n            // transitionEnd is not always firing on older Android phones\n            // so make sure it gets fired\n            langx.debounce(function() {\n                if (fired) {\n                    return;\n                }\n                wrappedCallback.call(that);\n            }, ((duration + delay) * 1000) + 25)();\n        }\n\n        // trigger page reflow so new elements can animate\n        elm.clientLeft;\n\n        styler.css(elm, cssValues);\n\n        if (duration <= 0) {\n            langx.debounce(function() {\n                if (fired) {\n                    return;\n                }\n                wrappedCallback.call(that);\n            }, 0)();\n        }\n\n        if (hasScrollTop) {\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\n        }\n\n        return this;\n    }\n\n    function show(elm, speed, callback) {\n        styler.show(elm);\n        if (speed) {\n            if (!callback && langx.isFunction(speed)) {\n                callback = speed;\n                speed = \"normal\";\n            }\n            styler.css(elm, \"opacity\", 0)\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\n        }\n        return this;\n    }\n\n\n    function hide(elm, speed, callback) {\n        if (speed) {\n            if (!callback && langx.isFunction(speed)) {\n                callback = speed;\n                speed = \"normal\";\n            }\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\n                styler.hide(elm);\n                if (callback) {\n                    callback.call(elm);\n                }\n            });\n        } else {\n            styler.hide(elm);\n        }\n        return this;\n    }\n\n    function scrollToTop(elm, pos, speed, callback) {\n        var scrollFrom = parseInt(elm.scrollTop),\n            i = 0,\n            runEvery = 5, // run every 5ms\n            freq = speed * 1000 / runEvery,\n            scrollTo = parseInt(pos);\n\n        var interval = setInterval(function() {\n            i++;\n\n            if(i<=freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\n\n            if (i >= freq + 1) {\n                clearInterval(interval);\n                if (callback) langx.debounce(callback, 1000)();\n            }\n        }, runEvery);\n    }\n\n    function toggle(elm, speed, callback) {\n        if (styler.isInvisible(elm)) {\n            show(elm, speed, callback);\n        } else {\n            hide(elm, speed, callback);\n        }\n        return this;\n    }\n\n    function fadeTo(elm, speed, opacity, callback) {\n        animate(elm, { opacity: opacity }, speed, callback);\n        return this;\n    }\n\n    function fadeIn(elm, speed, callback) {\n        var target = styler.css(elm, \"opacity\");\n        if (target > 0) {\n            styler.css(elm, \"opacity\", 0);\n        } else {\n            target = 1;\n        }\n        styler.show(elm);\n\n        fadeTo(elm, speed, target, callback);\n\n        return this;\n    }\n\n    function fadeOut(elm, speed, callback) {\n\n        fadeTo(elm, speed, 0, function() {\n            styler.hide(elm);\n            if (callback) {\n                callback.call(elm);\n            }\n\n        });\n\n        return this;\n    }\n\n    function fadeToggle(elm, speed, callback) {\n        if (styler.isInvisible(elm)) {\n            fadeIn(elm, speed, callback);\n        } else {\n            fadeOut(elm, speed, callback);\n        }\n        return this;\n    }\n\n    function fx() {\n        return fx;\n    }\n\n    langx.mixin(fx, {\n        off: false,\n\n        speeds: {\n            normal: 400,\n            fast: 200,\n            slow: 600\n        },\n\n        animate: animate,\n        fadeIn: fadeIn,\n        fadeOut: fadeOut,\n        fadeTo: fadeTo,\n        fadeToggle: fadeToggle,\n        hide: hide,\n        scrollToTop: scrollToTop,\n        show: show,\n        toggle: toggle\n    });\n\n    return skylark.fx = fx;\n});\n\ndefine('skylark-utils/http',[\n    \"./skylark\",\n    \"./langx\"\n],function(skylark, langx){\n    var Deferred = langx.Deferred,\n        blankRE = /^\\s*$/,\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\n        xmlTypeRE = /^(?:text|application)\\/xml/i;\n\n\n    function empty() {}\n\n    var ajaxSettings = {\n        // Default type of request\n        type: 'GET',\n        // Callback that is executed before request\n        beforeSend: empty,\n        // Callback that is executed if the request succeeds\n        success: empty,\n        // Callback that is executed the the server drops error\n        error: empty,\n        // Callback that is executed on request complete (both: error and success)\n        complete: empty,\n        // The context for the callbacks\n        context: null,\n        // Whether to trigger \"global\" Ajax events\n        global: true,\n        // Transport\n        xhr: function() {\n            return new window.XMLHttpRequest();\n        },\n        // MIME types mapping\n        // IIS returns Javascript as \"application/x-javascript\"\n        accepts: {\n            script: 'text/javascript, application/javascript, application/x-javascript',\n            json: 'application/json',\n            xml: 'application/xml, text/xml',\n            html: 'text/html',\n            text: 'text/plain'\n        },\n        // Whether the request is to another domain\n        crossDomain: false,\n        // Default timeout\n        timeout: 0,\n        // Whether data should be serialized to string\n        processData: true,\n        // Whether the browser should be allowed to cache GET responses\n        cache: true\n    }\n\n    function mimeToDataType(mime) {\n        if (mime) {\n            mime = mime.split(';', 2)[0];\n        }\n        return mime && (mime == 'text/html' ? 'html' :\n            mime == 'application/json' ? 'json' :\n            scriptTypeRE.test(mime) ? 'script' :\n            xmlTypeRE.test(mime) && 'xml') || 'text';\n    }\n\n    function appendQuery(url, query) {\n        if (query == '') {\n            return url;\n        }\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?');\n    }\n\n    function serialize(params, obj, traditional, scope) {\n        var type, array = langx.isArray(obj),\n            hash = langx.isPlainObject(obj)\n        langx.each(obj, function(key, value) {\n            type = langx.type(value);\n            if (scope) {\n                key = traditional ? scope :\n                        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']' ;\n            }\n            // handle data in serializeArray() format\n            if (!scope && array) {\n                params.add(value.name, value.value);\n            // recurse into nested objects\n            } else if (type == \"array\" || (!traditional && type == \"object\")) {\n                serialize(params, value, traditional, key);\n            } else {\n                params.add(key, value);\n            }\n        })\n    }    \n\n    function param(obj, traditional) {\n        var params = []\n        params.add = function(key, value) {\n            if (langx.isFunction(value)) {\n                value = value();\n            }\n            if (value == null) {\n                value = \"\";\n            }\n            this.push(escape(key) + '=' + escape(value));\n        }\n        \n        serialize(params, obj, traditional);\n\n        return params.join('&').replace(/%20/g, '+')\n    }\n\n    // serialize payload and append it to the URL for GET requests\n    function serializeData(options) {\n        if (options.processData && options.data && !langx.isString(options.data)) {\n            options.data = $.param(options.data, options.traditional)\n        }\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\n            options.url = appendQuery(options.url, options.data);\n            options.data = undefined;\n        }\n    }\n\n    function ajaxSuccess(data, xhr, settings, deferred) {\n        var context = settings.context,\n            status = 'success'\n        settings.success.call(context, data, status, xhr)\n        //if (deferred) deferred.resolveWith(context, [data, status, xhr])\n        //triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n        ajaxComplete(status, xhr, settings)\n    }\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\n    function ajaxError(error, type, xhr, settings, deferred) {\n        var context = settings.context\n        settings.error.call(context, xhr, type, error)\n        //if (deferred) deferred.rejectWith(context, [xhr, type, error])\n        //triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\n        ajaxComplete(type, xhr, settings)\n    }\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\n    function ajaxComplete(status, xhr, settings) {\n        var context = settings.context\n        settings.complete.call(context, xhr, status)\n        //triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n        //ajaxStop(settings)\n    }    \n\n    function ajax(options) {\n        var settings = langx.mixin({}, options),\n            deferred = new Deferred();\n\n        langx.safeMixin(settings,ajaxSettings);\n\n        //ajaxStart(settings)\n        if (!settings.crossDomain) {\n        //    settings.crossDomain = !langx.isSameOrigin(settings.url);\n        }\n\n        serializeData(settings);\n        var dataType = settings.dataType;\n\n        var mime = settings.accepts[dataType],\n            headers = {},\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n            xhr = settings.xhr(),\n            nativeSetHeader = xhr.setRequestHeader,\n            abortTimeout;\n\n        //if (deferred) deferred.promise(xhr)\n\n        if (!settings.crossDomain) {\n            setHeader('X-Requested-With', 'XMLHttpRequest');\n        }\n        setHeader('Accept', mime || '*/*')\n        if (mime = settings.mimeType || mime) {\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\n        }\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET')) {\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\n        }\n\n        if (settings.headers) {\n            for (name in settings.headers) {\n                setHeader(name, settings.headers[name]);\n            }    \n        }\n        xhr.setRequestHeader = setHeader;\n\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == 4) {\n                xhr.onreadystatechange = empty\n                clearTimeout(abortTimeout)\n                var result, error = false\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\n                    result = xhr.responseText\n\n                    try {\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\n                        if (dataType == 'script') {\n                            (1, eval)(result);\n                        } else if (dataType == 'xml') {\n                            result = xhr.responseXML\n                        } else if (dataType == 'json') {\n                            result = blankRE.test(result) ? null : JSON.parse(result);\n                        }\n                    } catch (e) { \n                        error = e \n                    }\n\n                    if (error) {\n                        ajaxError(error, 'parsererror', xhr, settings, deferred);\n                    } else {\n                        ajaxSuccess(result, xhr, settings, deferred);\n                    }\n                } else {\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred);\n                }\n            }\n        }\n\n        /*\n        if (ajaxBeforeSend(xhr, settings) === false) {\n            xhr.abort()\n            ajaxError(null, 'abort', xhr, settings, deferred)\n            return xhr\n        }\n\n        if (settings.xhrFields)\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\n        */\n        var async = 'async' in settings ? settings.async : true\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\n\n        for (name in headers) {\n            nativeSetHeader.apply(xhr, headers[name]);\n        }\n\n        if (settings.timeout > 0) {\n            abortTimeout = setTimeout(function() {\n                xhr.onreadystatechange = empty;\n                xhr.abort();\n                ajaxError(null, 'timeout', xhr, settings, deferred);\n            }, settings.timeout);\n        }\n\n        // avoid sending empty string (#319)\n        xhr.send(settings.data ? settings.data : null)\n        return xhr;\n    }\n\n\n    function get( /* url, data, success, dataType */ ) {\n        return ajax(parseArguments.apply(null, arguments))\n    }\n\n    function post( /* url, data, success, dataType */ ) {\n        var options = parseArguments.apply(null, arguments);\n        options.type = 'POST';\n        return ajax(options);\n    }\n\n    function getJSON( /* url, data, success */ ) {\n        var options = parseArguments.apply(null, arguments);\n        options.dataType = 'json';\n        return ajax(options);\n    }    \n\n\n    function http(){\n      return http;\n    }\n\n    langx.mixin(http, {\n        ajax: ajax,\n\n        get: get,\n        \n        gtJSON: getJSON,\n\n        post: post\n\n    });\n\n    return skylark.http = http;\n});\n\ndefine('skylark-utils/mover',[\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\",\n    \"./datax\",\n    \"./geom\",\n    \"./eventer\",\n    \"./styler\"\n],function(skylark, langx,noder,datax,geom,eventer,styler){\n    var on = eventer.on,\n        off = eventer.off,\n        attr = datax.attr,\n        removeAttr = datax.removeAttr,\n        offset = geom.pagePosition,\n        addClass = styler.addClass,\n        height = geom.height,\n        some = Array.prototype.some,\n        map = Array.prototype.map;\n\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\n        // summary:\n        //      Given a list of spots to put node, put it at the first spot where it fits,\n        //      of if it doesn't fit anywhere then the place with the least overflow\n        // choices: Array\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\n        //      Above example says to put the top-left corner of the node at (10,20)\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\n        //      It also passes in the available size for the popup, which is useful for tooltips to\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\n        //      what the best placement is.\n        // aroundNodeCoords: Object\n        //      Size of aroundNode, ex: {w: 200, h: 50}\n\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\n        // viewport over document\n\n        var doc = noder.ownerDoc(node),\n            win = noder.ownerWindow(doc),\n            view = geom.size(win);\n\n        view.left = 0;\n        view.top = 0;\n\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\n            doc.body.appendChild(node);\n        }\n\n        var best = null;\n\n        some.apply(choices, function(choice){\n            var corner = choice.corner;\n            var pos = choice.pos;\n            var overflow = 0;\n\n            // calculate amount of space available given specified position of node\n            var spaceAvailable = {\n                w: {\n                    'L': view.left + view.width - pos.x,\n                    'R': pos.x - view.left,\n                    'M': view.width\n                }[corner.charAt(1)],\n\n                h: {\n                    'T': view.top + view.height - pos.y,\n                    'B': pos.y - view.top,\n                    'M': view.height\n                }[corner.charAt(0)]\n            };\n\n            if(layoutNode){\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\n                overflow = typeof res == \"undefined\" ? 0 : res;\n            }\n\n            var bb = geom.size(node);\n\n            // coordinates and size of node with specified corner placed at pos,\n            // and clipped by viewport\n            var\n                startXpos = {\n                    'L': pos.x,\n                    'R': pos.x - bb.width,\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\n                }[corner.charAt(1)],\n\n                startYpos = {\n                    'T': pos.y,\n                    'B': pos.y - bb.height,\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\n                }[corner.charAt(0)],\n\n                startX = Math.max(view.left, startXpos),\n                startY = Math.max(view.top, startYpos),\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\n                width = endX - startX,\n                height = endY - startY;\n\n            overflow += (bb.width - width) + (bb.height - height);\n\n            if(best == null || overflow < best.overflow){\n                best = {\n                    corner: corner,\n                    aroundCorner: choice.aroundCorner,\n                    left: startX,\n                    top: startY,\n                    width: width,\n                    height: height,\n                    overflow: overflow,\n                    spaceAvailable: spaceAvailable\n                };\n            }\n\n            return !overflow;\n        });\n\n        // In case the best position is not the last one we checked, need to call\n        // layoutNode() again.\n        if(best.overflow && layoutNode){\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\n        }\n\n\n        geom.boundingPosition(node,best);\n\n        return best;\n    }\n\n    function at(node, pos, corners, padding, layoutNode){\n        var choices = map.apply(corners, function(corner){\n            var c = {\n                corner: corner,\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\n                pos: {x: pos.x,y: pos.y}\n            };\n            if(padding){\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\n            }\n            return c;\n        });\n\n        return _place(node, choices, layoutNode);\n    }\n\n    function around(\n        /*DomNode*/     node,\n        /*DomNode|__Rectangle*/ anchor,\n        /*String[]*/    positions,\n        /*Boolean*/     leftToRight,\n        /*Function?*/   layoutNode){\n\n        // summary:\n        //      Position node adjacent or kitty-corner to anchor\n        //      such that it's fully visible in viewport.\n        // description:\n        //      Place node such that corner of node touches a corner of\n        //      aroundNode, and that node is fully visible.\n        // anchor:\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\n        // positions:\n        //      Ordered list of positions to try matching up.\n        //\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\n        //          in the case of RTL scripts like Hebrew and Arabic\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\n        //          in the case of RTL scripts like Hebrew and Arabic\n        //      - above-centered: drop down is centered above anchor node\n        //      - above: drop down goes above anchor node, left sides aligned\n        //      - above-alt: drop down goes above anchor node, right sides aligned\n        //      - below-centered: drop down is centered above anchor node\n        //      - below: drop down goes below anchor node\n        //      - below-alt: drop down goes below anchor node, right sides aligned\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\n        // leftToRight:\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\n        //      positions slightly.\n        // example:\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\n        //      This will try to position node such that node's top-left corner is at the same position\n        //      as the bottom left corner of the aroundNode (ie, put node below\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\n        //      the bottom-right corner of node where the top right corner of aroundNode is\n        //      (ie, put node above aroundNode, with right edges aligned)\n        //\n\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\n        var aroundNodePos;\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\n            aroundNodePos = domGeometry.position(anchor, true);\n\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\n            // width of either anchor or popup because in both cases the border may be on an inner node.\n            if(/^(above|below)/.test(positions[0])){\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\n                    nodeBorder =  domGeometry.getBorderExtents(node),\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\n            }\n        }else{\n            aroundNodePos = anchor;\n        }\n\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\n        if(anchor.parentNode){\n            // ignore nodes between position:relative and position:absolute\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\n            var parent = anchor.parentNode;\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\n                var parentPos = domGeometry.position(parent, true),\n                    pcs = domStyle.getComputedStyle(parent);\n                if(/relative|absolute/.test(pcs.position)){\n                    sawPosAbsolute = false;\n                }\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\n                }\n                if(pcs.position == \"absolute\"){\n                    sawPosAbsolute = true;\n                }\n                parent = parent.parentNode;\n            }\n        }           \n\n        var x = aroundNodePos.x,\n            y = aroundNodePos.y,\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\n\n        // Convert positions arguments into choices argument for _place()\n        var choices = [];\n        function push(aroundCorner, corner){\n            choices.push({\n                aroundCorner: aroundCorner,\n                corner: corner,\n                pos: {\n                    x: {\n                        'L': x,\n                        'R': x + width,\n                        'M': x + (width >> 1)\n                    }[aroundCorner.charAt(1)],\n                    y: {\n                        'T': y,\n                        'B': y + height,\n                        'M': y + (height >> 1)\n                    }[aroundCorner.charAt(0)]\n                }\n            })\n        }\n        array.forEach(positions, function(pos){\n            var ltr =  leftToRight;\n            switch(pos){\n                case \"above-centered\":\n                    push(\"TM\", \"BM\");\n                    break;\n                case \"below-centered\":\n                    push(\"BM\", \"TM\");\n                    break;\n                case \"after-centered\":\n                    ltr = !ltr;\n                    // fall through\n                case \"before-centered\":\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\n                    break;\n                case \"after\":\n                    ltr = !ltr;\n                    // fall through\n                case \"before\":\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\n                    break;\n                case \"below-alt\":\n                    ltr = !ltr;\n                    // fall through\n                case \"below\":\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\n                    break;\n                case \"above-alt\":\n                    ltr = !ltr;\n                    // fall through\n                case \"above\":\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\n                    break;\n                default:\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\n                    // Not meant to be used directly.  Remove for 2.0.\n                    push(pos.aroundCorner, pos.corner);\n            }\n        });\n\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\n        position.aroundNodePos = aroundNodePos;\n\n        return position;\n    }\n\n    function movable(elm, params) {\n        function updateWithTouchData(e) {\n            var keys, i;\n\n            if (e.changedTouches) {\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\n                for (i = 0; i < keys.length; i++) {\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\n                }\n            }\n        }\n\n        params = params || {};\n        var handleEl = params.handle || elm,\n            constraints = params.constraints,\n            overlayDiv,\n            doc = params.document || document,\n            downButton,\n            start,\n            stop,\n            drag,\n            startX,\n            startY,\n            originalPos,\n            size,\n            startedCallback = params.started,\n            movingCallback = params.moving,\n            stoppedCallback = params.stopped,\n\n            start = function(e) {\n                var docSize = geom.getDocumentSize(doc),\n                    cursor;\n\n                updateWithTouchData(e);\n\n                e.preventDefault();\n                downButton = e.button;\n                //handleEl = getHandleEl();\n                startX = e.screenX;\n                startY = e.screenY;\n\n                originalPos = geom.relativePosition(elm);\n                size = geom.size(elm);\n\n                // Grab cursor from handle so we can place it on overlay\n                cursor = styler.css(handleEl, \"curosr\");\n\n                overlayDiv = noder.createElement(\"div\");\n                styler.css(overlayDiv, {\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    width: docSize.width,\n                    height: docSize.height,\n                    zIndex: 0x7FFFFFFF,\n                    opacity: 0.0001,\n                    cursor: cursor\n                });\n                noder.append(doc.body, overlayDiv);\n\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\n\n                if (startedCallback) {\n                    startedCallback(e);\n                }\n            },\n\n            move = function(e) {\n                updateWithTouchData(e);\n\n                if (e.button !== 0) {\n                    return stop(e);\n                }\n\n                e.deltaX = e.screenX - startX;\n                e.deltaY = e.screenY - startY;\n\n                var l = originalPos.left + e.deltaX,\n                    t = originalPos.top + e.deltaY;\n                if (constraints) {\n\n                    if (l < constraints.minX) {\n                        l = constraints.minX;\n                    }\n\n                    if (l > constraints.maxX) {\n                        l = constraints.maxX;\n                    }\n\n                    if (t < constraints.minY) {\n                        t = constraints.minY;\n                    }\n\n                    if (t > constraints.maxY) {\n                        t = constraints.maxY;\n                    }\n                }\n                geom.relativePosition(elm, {\n                    left: l,\n                    top: t\n                })\n\n                e.preventDefault();\n                if (movingCallback) {\n                    movingCallback(e);\n                }\n            },\n\n            stop = function(e) {\n                updateWithTouchData(e);\n\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\n\n                noder.remove(overlayDiv);\n\n                if (stoppedCallback) {\n                    stoppedCallback(e);\n                }\n            };\n\n        eventer.on(handleEl, \"mousedown touchstart\", start);\n\n        return {\n            // destroys the dragger.\n            remove: function() {\n                eventer.off(handleEl);\n            }\n        }\n    }\n\n    function mover(){\n      return mover;\n    }\n\n    langx.mixin(mover, {\n        around : around,\n\n        at: at, \n\n        movable: movable\n\n    });\n\n    return skylark.mover = mover;\n});\n\ndefine('skylark-utils/query',[\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\",\n    \"./datax\",\n    \"./eventer\",\n    \"./finder\",\n    \"./geom\",\n    \"./styler\",\n    \"./fx\"\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\n    var some = Array.prototype.some,\n        push = Array.prototype.push,\n        every = Array.prototype.every,\n        concat = Array.prototype.concat,\n        slice = Array.prototype.slice,\n        map = Array.prototype.map,\n        filter = Array.prototype.filter,\n        forEach = Array.prototype.forEach,\n        isQ;\n\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\n\n    var funcArg = langx.funcArg,\n        isArrayLike = langx.isArrayLike,\n        isString = langx.isString,\n        uniq = langx.uniq,\n        isFunction = langx.isFunction;\n\n    var type = langx.type,\n        isArray = langx.isArray,\n\n        isWindow = langx.isWindow,\n\n        isDocument = langx.isDocument,\n\n        isObject = langx.isObject,\n\n        isPlainObject = langx.isPlainObject,\n\n        compact = langx.compact,\n\n        flatten = langx.flatten,\n\n        camelCase = langx.camelCase,\n\n        dasherize = langx.dasherize,\n        children = finder.children;\n\n    function wrapper_map(func, context) {\n        return function() {\n            var self = this,\n                params = slice.call(arguments);\n            var result = $.map(self, function(elem, idx) {\n                return func.apply(context, [elem].concat(params));\n            });\n            return $(uniq(result));\n        }\n    }\n\n    function wrapper_selector(func, context, last) {\n        return function(selector) {\n            var self = this,\n                params = slice.call(arguments);\n            var result = this.map(function(idx, elem) {\n                return func.apply(context, last ? [elem] : [elem, selector]);\n            });\n            if (last && selector) {\n                return result.filter(selector);\n            } else {\n                return result;\n            }\n        }\n    }\n\n    function wrapper_selector_until(func, context, last) {\n        return function(util,selector) {\n            var self = this,\n                params = slice.call(arguments);\n            if (selector === undefined) {\n                selector = util;\n                util = undefined;\n            }\n            var result = this.map(function(idx, elem) {\n                return func.apply(context, last ? [elem,util] : [elem, selector,util]);\n            });\n            if (last && selector) {\n                return result.filter(selector);\n            } else {\n                return result;\n            }\n        }\n    }\n\n\n    function wrapper_every_act(func, context) {\n        return function() {\n            var self = this,\n                params = slice.call(arguments);\n            this.each(function(idx) {\n                func.apply(context, [this].concat(params));\n            });\n            return self;\n        }\n    }\n\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\n        return function(arg1) {\n            var self = this,\n                params = slice.call(arguments);\n            forEach.call(self, function(elem, idx) {\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\n            });\n            return self;\n        }\n    }\n\n    function wrapper_some_chk(func, context) {\n        return function() {\n            var self = this,\n                params = slice.call(arguments);\n            return some.call(self, function(elem) {\n                return func.apply(context, [elem].concat(params));\n            });\n        }\n    }\n\n    function wrapper_name_value(func, context, oldValueFunc) {\n        return function(name, value) {\n            var self = this,\n                params = slice.call(arguments);\n\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\n                forEach.call(self, function(elem, idx) {\n                    var newValue;\n                    if (oldValueFunc) {\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\n                    } else {\n                        newValue = value\n                    }\n                    func.apply(context, [elem].concat(params));\n                });\n                return self;\n            } else {\n                if (self[0]) {\n                    return func.apply(context, [self[0], name]);\n                }\n            }\n\n        }\n    }\n\n    function wrapper_value(func, context, oldValueFunc) {\n        return function(value) {\n            var self = this;\n\n            if (langx.isDefined(value)) {\n                forEach.call(self, function(elem, idx) {\n                    var newValue;\n                    if (oldValueFunc) {\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\n                    } else {\n                        newValue = value\n                    }\n                    func.apply(context, [elem, newValue]);\n                });\n                return self;\n            } else {\n                if (self[0]) {\n                    return func.apply(context, [self[0]]);\n                }\n            }\n\n        }\n    }\n\n    var NodeList = langx.klass({\n        klassName: \"SkNodeList\",\n        init: function(selector, context) {\n            var self = this,\n                match, nodes, node, props;\n\n            if (selector) {\n                self.context = context = context || noder.doc();\n\n                if (isString(selector)) {\n                    // a html string or a css selector is expected\n                    self.selector = selector;\n\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\n                        match = [null, selector, null];\n                    } else {\n                        match = rquickExpr.exec(selector);\n                    }\n\n                    if (match) {\n                        if (match[1]) {\n                            // if selector is html\n                            nodes = noder.createFragment(selector);\n\n                            if (langx.isPlainObject(context)) {\n                                props = context;\n                            }\n\n                        } else {\n                            node = finder.byId(match[2], noder.ownerDoc(context));\n\n                            if (node) {\n                                // if selector is id\n                                nodes = [node];\n                            }\n\n                        }\n                    } else {\n                        // if selector is css selector\n                        nodes = finder.descendants(context, selector);\n                    }\n                } else {\n                    if (isArray(selector)) {\n                        // a dom node array is expected\n                        nodes = selector;\n                    } else {\n                        // a dom node is expected\n                        nodes = [selector];\n                    }\n                    //self.add(selector, false);\n                }\n            }\n\n\n            if (nodes) {\n                push.apply(self, nodes);\n\n                if (props) {\n                    self.attr(props);\n                }\n            }\n\n            return self;\n        }\n    }, Array);\n\n    var query = (function() {\n        isQ = function(object) {\n            return object instanceof NodeList;\n        }\n        init = function(selector, context) {\n            return new NodeList(selector, context);\n        }\n\n        var $ = function(selector, context) {\n            if (isFunction(selector)) {\n                eventer.ready(function() {\n                    selector($);\n                });\n            } else if (isQ(selector)) {\n                return selector;\n            } else {\n                if (context && isQ(context) && isString(selector)) {\n                    return context.find(selector);\n                }\n                return init(selector, context);\n            }\n        };\n\n        $.fn = NodeList.prototype;\n        langx.mixin($.fn, {\n            // `map` and `slice` in the jQuery API work differently\n            // from their array counterparts\n\n            map: function(fn) {\n                return $(langx.map(this, function(el, i) {\n                    return fn.call(el, i, el)\n                }))\n            },\n\n            slice: function() { \n                return $(slice.apply(this, arguments))\n            },\n\n            get: function(idx) {\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\n            },\n\n            toArray: function() {\n                return slice.call(this);\n            },\n\n            size: function() {\n                return this.length\n            },\n\n            remove: wrapper_every_act(noder.remove, noder),\n\n            each: function(callback) {\n                langx.each(this, callback);\n                return this;\n            },\n\n            filter: function(selector) {\n                if (isFunction(selector)) return this.not(this.not(selector))\n                return $(filter.call(this, function(element) {\n                    return finder.matches(element, selector)\n                }))\n            },\n\n            add: function(selector, context) {\n                return $(uniq(this.concat($(selector, context))))\n            },\n\n            is: function(selector) {\n                return this.length > 0 && finder.matches(this[0], selector)\n            },\n\n            not: function(selector) {\n                var nodes = []\n                if (isFunction(selector) && selector.call !== undefined)\n                    this.each(function(idx) {\n                        if (!selector.call(this, idx)) nodes.push(this)\n                    })\n                else {\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\n                    this.forEach(function(el) {\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\n                    })\n                }\n                return $(nodes)\n            },\n\n            has: function(selector) {\n                return this.filter(function() {\n                    return isObject(selector) ?\n                        noder.contains(this, selector) :\n                        $(this).find(selector).size()\n                })\n            },\n\n            eq: function(idx) {\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\n            },\n\n            first: function() {\n                return this.eq(0);\n            },\n\n            last: function() {\n                return this.eq(-1);\n            },\n\n            find: wrapper_selector(finder.descendants, finder),\n\n            closest: function(selector, context) {\n                var node = this[0],\n                    collection = false\n                if (typeof selector == 'object') collection = $(selector)\n                while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\n                    node = node !== context && !isDocument(node) && node.parentNode\n                return $(node)\n            },\n\n\n            parents: wrapper_selector(finder.ancestors, finder),\n\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\n\n\n            parent: wrapper_selector(finder.parent, finder),\n\n            children: wrapper_selector(finder.children, finder),\n\n            contents: wrapper_map(noder.contents, noder),\n\n            siblings: wrapper_selector(finder.siblings, finder),\n\n            empty: wrapper_every_act(noder.empty, noder),\n\n            // `pluck` is borrowed from Prototype.js\n            pluck: function(property) {\n                return langx.map(this, function(el) {\n                    return el[property]\n                })\n            },\n\n            show: wrapper_every_act(fx.show, fx),\n\n            replaceWith: function(newContent) {\n                return this.before(newContent).remove();\n            },\n\n            wrap: function(structure) {\n                var func = isFunction(structure)\n                if (this[0] && !func)\n                    var dom = $(structure).get(0),\n                        clone = dom.parentNode || this.length > 1\n\n                return this.each(function(index) {\n                    $(this).wrapAll(\n                        func ? structure.call(this, index) :\n                        clone ? dom.cloneNode(true) : dom\n                    )\n                })\n            },\n\n            wrapAll: function(wrappingElement) {\n                if (this[0]) {\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\n                    var children;\n                    // drill down to the inmost element\n                    while ((children = wrappingElement.children()).length) {\n                        wrappingElement = children.first();\n                    }\n                    $(wrappingElement).append(this);\n                }\n                return this\n            },\n\n            wrapInner: function(wrappingElement) {\n                var func = isFunction(wrappingElement)\n                return this.each(function(index) {\n                    var self = $(this),\n                        contents = self.contents(),\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\n                })\n            },\n\n            unwrap: function(selector) {\n                if (this.parent().children().length === 0) {\n                    // remove dom without text\n                    this.parent(selector).not(\"body\").each(function() {\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\n                    });\n                } else {\n                    this.parent().each(function() {\n                        $(this).replaceWith($(this).children())\n                    });\n                }\n                return this\n            },\n\n            clone: function() {\n                return this.map(function() {\n                    return this.cloneNode(true)\n                })\n            },\n\n            hide: wrapper_every_act(fx.hide, fx),\n\n            toggle: function(setting) {\n                return this.each(function() {\n                    var el = $(this);\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\n                })\n            },\n\n            prev: function(selector) {\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\n            },\n\n            next: function(selector) {\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\n            },\n\n            html: wrapper_value(noder.html, noder, noder.html),\n\n            text: wrapper_value(datax.text, datax, datax.text),\n\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\n\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\n\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\n\n            data: wrapper_name_value(datax.data, datax, datax.data),\n\n            removeData: wrapper_every_act(datax.removeData, datax),\n\n            val: wrapper_value(datax.val, datax, datax.val),\n\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\n\n            style: wrapper_name_value(styler.css, styler),\n\n            css: wrapper_name_value(styler.css, styler),\n\n            index: function(elem) {\n                if (elem) {\n                    return this.indexOf($(elem)[0]);\n                } else {\n                    return this.parent().children().indexOf(this[0]);\n                }\n            },\n\n            //hasClass(name)\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\n\n            //addClass(name)\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\n\n            //removeClass(name)\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\n\n            //toogleClass(name,when)\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\n\n            scrollTop: wrapper_value(geom.scrollTop, geom),\n\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\n\n            position: function() {\n                if (!this.length) return\n\n                var elem = this[0];\n\n                return geom.relativePosition(elem);\n            },\n\n            offsetParent: wrapper_map(geom.offsetParent, geom),\n        });\n\n        // for now\n        $.fn.detach = $.fn.remove;\n\n\n        $.fn.size = wrapper_value(geom.size, geom);\n\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\n\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\n\n        ['width', 'height'].forEach(function(dimension) {\n            var offset, Dimension = dimension.replace(/./, function(m) {\n                return m[0].toUpperCase()\n            });\n\n            $.fn['outer' + Dimension] = function(margin, value) {\n                if (arguments.length) {\n                    if (typeof margin !== 'boolean') {\n                        value = margin;\n                        margin = false;\n                    }\n                } else {\n                    margin = false;\n                    value = undefined;\n                }\n\n                if (value === undefined) {\n                    var el = this[0];\n                    if (!el) {\n                        return undefined;\n                    }\n                    var cb = geom.size(el);\n                    if (margin) {\n                        var me = geom.marginExtents(el);\n                        cb.width = cb.width + me.left + me.right;\n                        cb.height = cb.height + me.top + me.bottom;\n                    }\n                    return dimension === \"width\" ? cb.width : cb.height;\n                } else {\n                    return this.each(function(idx, el) {\n                        var mb = {};\n                        var me = geom.marginExtents(el);\n                        if (dimension === \"width\") {\n                            mb.width = value;\n                            if (margin) {\n                                mb.width = mb.width - me.left - me.right\n                            }\n                        } else {\n                            mb.height = value;\n                            if (margin) {\n                                mb.height = mb.height - me.top - me.bottom;\n                            }\n                        }\n                        geom.size(el, mb);\n                    })\n\n                }\n            };\n        })\n\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\n\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\n\n\n        var traverseNode = noder.traverse;\n\n        function wrapper_node_operation(func, context, oldValueFunc) {\n            return function(html) {\n                var argType, nodes = langx.map(arguments, function(arg) {\n                    argType = type(arg)\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\n                        arg : noder.createFragment(arg)\n                });\n                if (nodes.length < 1) {\n                    return this\n                }\n                this.each(function(idx) {\n                    func.apply(context, [this, nodes, idx > 0]);\n                });\n                return this;\n            }\n        }\n\n\n        $.fn.after = wrapper_node_operation(noder.after, noder);\n\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\n\n        $.fn.before = wrapper_node_operation(noder.before, noder);\n\n        $.fn.append = wrapper_node_operation(noder.append, noder);\n\n        $.fn.insertAfter = function(html) {\n            $(html).after(this);\n            return this;\n        };\n\n        $.fn.insertBefore = function(html) {\n            $(html).before(this);\n            return this;\n        };\n\n        $.fn.appendTo = function(html) {\n            $(html).append(this);\n            return this;\n        };\n\n        $.fn.prependTo = function(html) {\n            $(html).prepend(this);\n            return this;\n        };\n\n        return $\n    })();\n\n    (function($) {\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\n\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\n\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\n\n\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\n            $.fn[event] = function(data, callback) {\n                return (0 in arguments) ?\n                    this.on(event, data, callback) :\n                    this.trigger(event)\n            }\n        });\n\n\n        $.fn.one = function(event, selector, data, callback) {\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\n                callback = data;\n                data = selector;\n                selector = null;\n            }\n\n            if (langx.isFunction(data)) {\n                callback = data;\n                data = null;\n            }\n\n            return this.on(event, selector, data, callback, 1)\n        };\n\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\n\n        $.fn.show = wrapper_every_act(fx.show, fx);\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\n    })(query);\n\n\n    (function($) {\n        $.fn.end = function() {\n            return this.prevObject || $()\n        }\n\n        $.fn.andSelf = function() {\n            return this.add(this.prevObject || $())\n        }\n\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\n            var fn = $.fn[property]\n            $.fn[property] = function() {\n                var ret = fn.apply(this, arguments)\n                ret.prevObject = this\n                return ret\n            }\n        })\n    })(query);\n\n\n    (function($) {\n        $.fn.query = $.fn.find;\n\n        $.fn.place = function(refNode, position) {\n            // summary:\n            //      places elements of this node list relative to the first element matched\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\n            // queryOrNode:\n            //      may be a string representing any valid CSS3 selector or a DOM node.\n            //      In the selector case, only the first matching element will be used\n            //      for relative positioning.\n            // position:\n            //      can be one of:\n            //\n            //      -   \"last\" (default)\n            //      -   \"first\"\n            //      -   \"before\"\n            //      -   \"after\"\n            //      -   \"only\"\n            //      -   \"replace\"\n            //\n            //      or an offset in the childNodes\n            if (langx.isString(refNode)) {\n                refNode = finder.descendant(refNode);\n            } else if (isQ(refNode)) {\n                refNode = refNode[0];\n            }\n            return this.each(function(i, node) {\n                switch (position) {\n                    case \"before\":\n                        noder.before(refNode, node);\n                        break;\n                    case \"after\":\n                        noder.after(refNode, node);\n                        break;\n                    case \"replace\":\n                        noder.replace(refNode, node);\n                        break;\n                    case \"only\":\n                        noder.empty(refNode);\n                        noder.append(refNode, node);\n                        break;\n                    case \"first\":\n                        noder.prepend(refNode, node);\n                        break;\n                        // else fallthrough...\n                    default: // aka: last\n                        noder.append(refNode, node);\n                }\n            });\n        };\n\n        $.fn.addContent = function(content, position) {\n            if (content.template) {\n                content = langx.substitute(content.template, content);\n            }\n            return this.append(content);\n        };\n\n        $.fn.replaceClass = function(newClass, oldClass) {\n            this.removeClass(oldClass);\n            this.addClass(newClass);\n            return this;\n        };\n\n    })(query);\n\n\n    return skylark.query = query;\n});\ndefine('skylark-utils/scripter',[\n    \"./skylark\",\n    \"./langx\",\n    \"./noder\",\n    \"./finder\"\n], function(skylark, langx, noder, finder) {\n\n    var head = document.getElementsByTagName('head')[0],\n        scriptsByUrl = {},\n        scriptElementsById = {},\n        count = 0;\n\n    function scripter() {\n        return scripter;\n    }\n\n    langx.mixin(scripter, {\n\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\n            var script = scriptsByUrl[url];\n            if (!script) {\n                script = scriptsByUrl[url] = {\n                    state: 0, //0:unload,1:loaded,-1:loaderror\n                    loadedCallbacks: [],\n                    errorCallbacks: []\n                }\n            }\n\n            script.loadedCallbacks.push(loadedCallback);\n            script.errorCallbacks.push(errorCallback);\n\n            if (script.state === 1) {\n                script.node.onload();\n            } else if (script.state === -1) {\n                script.node.onerror();\n            } else {\n                var node = script.node = document.createElement(\"script\"),\n                    id = script.id = (count++);\n\n                node.type = \"text/javascript\";\n                node.async = false;\n                node.defer = false;\n                startTime = new Date().getTime();\n                head.appendChild(node);\n\n                node.onload = function() {\n                        script.state = 1;\n\n                        var callbacks = script.loadedCallbacks,\n                            i = callbacks.length;\n\n                        while (i--) {\n                            callbacks[i]();\n                        }\n                        script.loadedCallbacks = [];\n                        script.errorCallbacks = [];\n                    },\n                    node.onerror = function() {\n                        script.state = -1;\n                        var callbacks = script.errorCallbacks,\n                            i = callbacks.length;\n\n                        while (i--) {\n                            callbacks[i]();\n                        }\n                        script.loadedCallbacks = [];\n                        script.errorCallbacks = [];\n                    };\n                node.src = url;\n\n                scriptElementsById[id] = node;\n            }\n            return script.id;\n        },\n\n        deleteJavaScript: function(id) {\n            var node = scriptElementsById[id];\n            if (node) {\n                var url = node.src;\n                noder.remove(node);\n                delete scriptElementsById[id];\n                delete scriptsByUrl[url];\n            }\n        }\n    });\n\n    return skylark.scripter = scripter;\n});\n\ndefine('skylark-utils/_storages/cookies',[\n    \"../langx\"\n], function(langx) {\n    function cookies() {\n        return cookies;\n    }\n\n    langx.mixin(cookies, {\n\t\tget : function(name) {\n\t\t    if (!sKey || !this.has(name)) { return null; }\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\n\n\t\t},\n\n\t\thas : function(name) {\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\n\t\t},\n\n\n\t\tlist : function() {\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\n\t\t    for (var i = 0; i < cookies.length; i++) { \n\t\t    \tcookies[i] = unescape(cookies[i]); \n\t\t    }\n\t\t    return cookies;\n\t\t},\n\n\t\tremove : function(name,path) {\n\t\t    if (!name || !this.has(name)) { \n\t\t    \treturn; \n\t\t   \t}\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\n\t\t},\n\n\t\tset: function (name, value, expires, path, domain, secure) {\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\n\t\t    var sExpires = \"\";\n\t\t    if (expires) {\n\t\t      switch (expires.constructor) {\n\t\t        case Number:\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\n\t\t          break;\n\t\t        case String:\n\t\t          sExpires = \"; expires=\" + expires;\n\t\t          break;\n\t\t        case Date:\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\n\t\t          break;\n\t\t      }\n\t\t    }\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\n\t\t  }\t\n    });\n\n\n    return  cookies;\n\n});\n\n\n/**\n *\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\n * http://www.psteam.co.jp/qface/license\n * \n * @Author: liwenfeng\n * @Date: 2014/02/28\n */\ndefine('skylark-utils/_storages/localfs',[\n    \"../langx\"\n], function(langx){\n\tvar Deferred = langx.Deferred,\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\n\n\n\tfunction errorHandler(e) {\n\t  var msg = '';\n\n\t  switch (e.code) {\n\t    case FileError.QUOTA_EXCEEDED_ERR:\n\t      msg = 'QUOTA_EXCEEDED_ERR';\n\t      break;\n\t    case FileError.NOT_FOUND_ERR:\n\t      msg = 'NOT_FOUND_ERR';\n\t      break;\n\t    case FileError.SECURITY_ERR:\n\t      msg = 'SECURITY_ERR';\n\t      break;\n\t    case FileError.INVALID_MODIFICATION_ERR:\n\t      msg = 'INVALID_MODIFICATION_ERR';\n\t      break;\n\t    case FileError.INVALID_STATE_ERR:\n\t      msg = 'INVALID_STATE_ERR';\n\t      break;\n\t    default:\n\t      msg = 'Unknown Error';\n\t      break;\n\t  };\n\n\t  return msg;\n\t}\n\t\n\tvar FileSystem = langx.Evented.inherit({\n\t\t_fs : null,\n\t\t_isPersisted : true,\n\t\t_cwd : null,\n\n\t\tinit:\tfunction (fs) {\n\t\t\tthis._fs = fs;\n\t\t\tthis._cwd = fs.root;\n\t\t},\n\t\t\t\n\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\n\t\t      fileEntry.file(function (file) {\n\t\t        var reader = new FileReader();\n\t\t        reader.onloadend = function () {\n\t\t          callback(null, this.result);\n\t\t        };\n\t\t        reader.readAsArrayBuffer(file);\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t},\n\n\t\treadfileAsDataURL :  function (path,callback,errback) {\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\n\t\t      fileEntry.file(function (file) {\n\t\t        var reader = new FileReader();\n\t\t        reader.onloadend = function () {\n\t\t          callback(null, this.result);\n\t\t        };\n\t\t        reader.readAsDataURL(file);\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t},\n\n\t\treadfileAsText :  function (path,callback,errback) {\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\n\t\t      fileEntry.file(function (file) {\n\t\t        var reader = new FileReader();\n\t\t        reader.onloadend = function () {\n\t\t          callback(null, this.result);\n\t\t        };\n\t\t        reader.readAsText(file);\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t},\n\n\t\twritefile : function (path, contents, callback,errback) {\n\t\t    var self = this,\n\t\t    \tfolders = path.split('/');\n\t\t    folders = folders.slice(0, folders.length - 1);\n\n\t\t    this.mkdir(folders.join('/'),function(){\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\n\t\t\t        var truncated = false;\n\t\t\t        fileWriter.onwriteend = function () {\n\t\t\t          if (!truncated) {\n\t\t\t            truncated = true;\n\t\t\t            this.truncate(this.position);\n\t\t\t            return;\n\t\t\t          }\n\t\t\t          callback && callback();\n\t\t\t        };\n\t\t\t        fileWriter.onerror = errback;\n\t\t\t        // TODO: find a way to write as binary too\n\t\t\t        var blob = contents;\n\t\t\t        if (!blob instanceof Blob) {\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\n\t\t\t        } \n\t\t\t        fileWriter.write(blob);\n\t\t\t      }, errback);\n\t\t\t    }, errback);\n\n\t\t    });\n\t\t},\n\n\t\trmfile : function (path, callback,errback) {\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\n\t\t      fileEntry.remove(function () {\n\t\t        callback();\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t},\n\n\t\treaddir : function (path, callback,errback) {\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\n\t\t      var dirReader = dirEntry.createReader();\n\t\t      var entries = [];\n\t\t      readEntries();\n\t\t      function readEntries() {\n\t\t        dirReader.readEntries(function (results) {\n\t\t          if (!results.length) {\n\t\t            callback(null, entries);\n\t\t          }\n\t\t          else {\n\t\t            entries = entries.concat(\n\t\t            \tArray.prototype.slice.call(results).map(\n\t\t            \t\tfunction (entry) {\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\n\t\t            \t\t}\n\t\t            \t)\n\t\t            );\n\t\t            readEntries();\n\t\t          }\n\t\t        }, errback);\n\t\t      }\n\t\t    }, errback);\n\t\t},\n\n\t\tmkdir : function (path, callback,errback) {\n\t\t    var folderParts = path.split('/');\n\n\t\t    var createDir = function(rootDir, folders) {\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\n\t\t      if (folders[0] == '.' || folders[0] == '') {\n\t\t        folders = folders.slice(1);\n\t\t      }\n\n\t\t      if (folders.length ==0) {\n\t\t      \tcallback(rootDir);\n\t\t      \treturn;\n\t\t      }\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\n\t\t        function (dirEntry) {\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\n\t\t            // Recursively add the new subfolder if we have more to create and\n\t\t            // There was more than one folder to create.\n\t\t            if (folders.length && folderParts.length != 1) {\n\t\t              createDir(dirEntry, folders.slice(1));\n\t\t            } else {\n\t\t              // Return the last directory that was created.\n\t\t              if (callback) callback(dirEntry);\n\t\t            }\n\t\t          } else {\n\t\t            var e = new Error(path + ' is not a directory');\n\t\t            if (errback) {\n\t\t              errback(e);\n\t\t            } else {\n\t\t              throw e;\n\t\t            }\n\t\t          }\n\t\t        },\n\t\t        function(e) {\n\t\t            if (errback) {\n\t\t              errback(e);\n\t\t            } else {\n\t\t              throw e;\n\t\t            }\n\t\t        }\n\t\t      );\n\t\t    };\n\n\t\t    createDir(this._cwd, folderParts);\n\n\t\t},\n\n\t\trmdir : function (path, callback,errback) {\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\n\t\t      dirEntry.removeRecursively(function () {\n\t\t        callback();\n\t\t      }, errback);\n\t\t    }, errback);\n\t\t  },\n\n\t\tcopy : function (src, dest, callback) {\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\n\t\t        fileEntry.copyTo(dirEntry, function () {\n\t\t          callback();\n\t\t        }, callback);\n\t\t      }, callback);\n\t\t    }, callback);\n\t\t},\n\n\t\tmove : function(src, dest, callback) {\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\n\t\t        fileEntry.moveTo(dirEntry, function () {\n\t\t          callback();\n\t\t        }, callback);\n\t\t      }, callback);\n\t\t    }, callback);\n\t\t},\n\n\t\tchdir : function (path, callback) {\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\n\t\t      cwd = dirEntry;\n\t\t      if (fs.onchdir) {\n\t\t        fs.onchdir(cwd.fullPath);\n\t\t      }\n\t\t      callback();\n\t\t    }, callback);\n\t\t},\n\n\t\timportFromHost : function(files) {\n\t\t    // Duplicate each file the user selected to the app's fs.\n\t\t    var deferred = new Deferred();\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\n\t\t        (function(f) {\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\n\t\t\t          }, errorHandler);\n\t\t\t        }, errorHandler);\n\t\t     \t})(file);\n \t   \t \t}\n  \t\t    return deferred.promise;\n\t\t  },\n\n\t\t  exportToHost : function() {\n\n\t\t  }\n\t\n\t});\n\t\n\n\n    function localfs() {\n        return localfs;\n    }\n\n    langx.mixin(localfs, {\n        isSupported : function() {\n            return !!requestFileSystem;\n        },\n        request : function(size,isPersisted){\n        \tsize = size || 1024 * 1024 * 10;\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\n        \t\td = new Deferred();\n            requestFileSystem(typ, size, function(_fs) {\n                var fs = new FileSystem(_fs,!!isPersisted);\n                d.resolve(fs);\n            }, function(e) {\n            \td.reject(e);\n            });\n\n            return d.promise;\n        },\n\n        FileSystem : FileSystem\n    });\n    \n\treturn localfs;\n});\ndefine('skylark-utils/_storages/localStorage',[\n    \"../langx\"\n], function(langx) {\n    var storage  = null;\n\n    try {\n        storage = window[\"localStorage\"];\n    } catch (e){\n\n    }\n\n    function localStorage() {\n        return localStorage;\n    }\n\n    langx.mixin(localStorage, {\n        isSupported : function() {\n            return !!storage;\n        },\n\n        set : function(key, val) {\n            if (val === undefined) { \n                return this.remove(key) \n            }\n            storage.setItem(key, langx.serializeValue(val));\n            return val\n        },\n\n        get : function(key, defaultVal) {\n            var val = langx.deserializeValue(storage.getItem(key))\n            return (val === undefined ? defaultVal : val)\n        },\n\n        remove : function(key) { \n            storage.removeItem(key) \n        },\n\n        clear : function() { \n            storage.clear() \n        },\n\n        forEach : function(callback) {\n            for (var i=0; i<storage.length; i++) {\n                var key = storage.key(i)\n                callback(key, store.get(key))\n            }\n        }\n    });\n\n    return  localStorage;\n\n});\n\n\ndefine('skylark-utils/_storages/sessionStorage',[\n    \"../langx\"\n], function(langx) {\n    var storage  = null;\n\n    try {\n        storage = window[\"sessiionStorage\"];\n    } catch (e){\n\n    }\n\n    function sessiionStorage() {\n        return sessiionStorage;\n    }\n\n    langx.mixin(sessiionStorage, {\n        isSupported : function() {\n            return !!storage;\n        },\n\n        set : function(key, val) {\n            if (val === undefined) { \n                return this.remove(key) \n            }\n            storage.setItem(key, langx.serializeValue(val));\n            return val\n        },\n\n        get : function(key, defaultVal) {\n            var val = langx.deserializeValue(storage.getItem(key))\n            return (val === undefined ? defaultVal : val)\n        },\n\n        remove : function(key) { \n            storage.removeItem(key) \n        },\n\n        clear : function() { \n            storage.clear() \n        },\n\n        forEach : function(callback) {\n            for (var i=0; i<storage.length; i++) {\n                var key = storage.key(i)\n                callback(key, store.get(key))\n            }\n        }\n    });\n\n    return  sessiionStorage;\n\n});\n\n\ndefine('skylark-utils/storages',[\n    \"./skylark\",\n    \"./langx\",\n    \"./_storages/cookies\",\n    \"./_storages/localfs\",\n    \"./_storages/localStorage\",\n    \"./_storages/sessionStorage\"\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\n    function storages() {\n        return storages;\n    }\n\n    langx.mixin(storages, {\n        cookies: cookies,\n        localfs : localfs,\n        localStorage : localStorage,\n        sessionStorage : sessionStorage\n    });\n\n\n    return skylark.storages = storages;\n});\n\ndefine('skylark-utils/touchx',[], function() {\n\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\n\n    /**\n     * Object used to hold the data that is being dragged during drag and drop operations.\n     *\n     * It may hold one or more data items of different types. For more information about\n     * drag and drop operations and data transfer objects, see\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\n     *\n     * This object is created automatically by the @see:DragDropTouch singleton and is\n     * accessible through the @see:dataTransfer property of all drag events.\n     */\n    var DataTransfer = (function() {\n        function DataTransfer() {\n            this._dropEffect = 'move';\n            this._effectAllowed = 'all';\n            this._data = {};\n        }\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\n            /**\n             * Gets or sets the type of drag-and-drop operation currently selected.\n             * The value must be 'none',  'copy',  'link', or 'move'.\n             */\n            get: function() {\n                return this._dropEffect;\n            },\n            set: function(value) {\n                this._dropEffect = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\n            /**\n             * Gets or sets the types of operations that are possible.\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\n             */\n            get: function() {\n                return this._effectAllowed;\n            },\n            set: function(value) {\n                this._effectAllowed = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\n            /**\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\n             */\n            get: function() {\n                return Object.keys(this._data);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Removes the data associated with a given type.\n         *\n         * The type argument is optional. If the type is empty or not specified, the data\n         * associated with all types is removed. If data for the specified type does not exist,\n         * or the data transfer contains no data, this method will have no effect.\n         *\n         * @param type Type of data to remove.\n         */\n        DataTransfer.prototype.clearData = function(type) {\n            if (type != null) {\n                delete this._data[type];\n            } else {\n                this._data = null;\n            }\n        };\n        /**\n         * Retrieves the data for a given type, or an empty string if data for that type does\n         * not exist or the data transfer contains no data.\n         *\n         * @param type Type of data to retrieve.\n         */\n        DataTransfer.prototype.getData = function(type) {\n            return this._data[type] || '';\n        };\n        /**\n         * Set the data for a given type.\n         *\n         * For a list of recommended drag types, please see\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\n         *\n         * @param type Type of data to add.\n         * @param value Data to add.\n         */\n        DataTransfer.prototype.setData = function(type, value) {\n            this._data[type] = value;\n        };\n        /**\n         * Set the image to be used for dragging if a custom one is desired.\n         *\n         * @param img An image element to use as the drag feedback image.\n         * @param offsetX The horizontal offset within the image.\n         * @param offsetY The vertical offset within the image.\n         */\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\n            var ddt = DragDropTouch._instance;\n            ddt._imgCustom = img;\n            ddt._imgOffset = { x: offsetX, y: offsetY };\n        };\n        return DataTransfer;\n    }());\n\n    /**\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\n     *\n     * The @see:DragDropTouch class listens to touch events and raises the\n     * appropriate HTML5 drag/drop events as if the events had been caused\n     * by mouse actions.\n     *\n     * The purpose of this class is to enable using existing, standard HTML5\n     * drag/drop code on mobile devices running IOS or Android.\n     *\n     * To use, include the DragDropTouch.js file on the page. The class will\n     * automatically start monitoring touch events and will raise the HTML5\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\n     * should be handled by the application.\n     *\n     * For details and examples on HTML drag and drop, see\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\n     */\n    var DragDropTouch = (function() {\n        /**\n         * Initializes the single instance of the @see:DragDropTouch class.\n         */\n        function DragDropTouch() {\n            this._lastClick = 0;\n            // enforce singleton pattern\n            if (DragDropTouch._instance) {\n                throw 'DragDropTouch instance already created.';\n            }\n            // detect passive event support\n            // https://github.com/Modernizr/Modernizr/issues/1894\n            var supportsPassive = false;\n            document.addEventListener('test', null, {\n                get passive() {\n                    supportsPassive = true;\n                    return true;\n                }\n            });\n            // listen to touch events\n            if ('ontouchstart' in document) {\n                var d = document,\n                    ts = this._touchstart.bind(this),\n                    tm = this._touchmove.bind(this),\n                    te = this._touchend.bind(this),\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\n                d.addEventListener('touchstart', ts, opt);\n                d.addEventListener('touchmove', tm, opt);\n                d.addEventListener('touchend', te);\n                d.addEventListener('touchcancel', te);\n            }\n        }\n        /**\n         * Gets a reference to the @see:DragDropTouch singleton.\n         */\n        DragDropTouch.getInstance = function() {\n            return DragDropTouch._instance;\n        };\n        // ** event handlers\n        DragDropTouch.prototype._touchstart = function(e) {\n            var _this = this;\n            if (this._shouldHandle(e)) {\n                // raise double-click and prevent zooming\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\n                        e.preventDefault();\n                        this._reset();\n                        return;\n                    }\n                }\n                // clear all variables\n                this._reset();\n                // get nearest draggable element\n                var src = this._closestDraggable(e.target);\n                if (src) {\n                    // give caller a chance to handle the hover/move events\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\n                        // get ready to start dragging\n                        this._dragSource = src;\n                        this._ptDown = this._getPoint(e);\n                        this._lastTouch = e;\n                        e.preventDefault();\n                        // show context menu if the user hasn't started dragging after a while\n                        setTimeout(function() {\n                            if (_this._dragSource == src && _this._img == null) {\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\n                                    _this._reset();\n                                }\n                            }\n                        }, DragDropTouch._CTXMENU);\n                    }\n                }\n            }\n        };\n        DragDropTouch.prototype._touchmove = function(e) {\n            if (this._shouldHandle(e)) {\n                // see if target wants to handle move\n                var target = this._getTarget(e);\n                if (this._dispatchEvent(e, 'mousemove', target)) {\n                    this._lastTouch = e;\n                    e.preventDefault();\n                    return;\n                }\n                // start dragging\n                if (this._dragSource && !this._img) {\n                    var delta = this._getDelta(e);\n                    if (delta > DragDropTouch._THRESHOLD) {\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\n                        this._createImage(e);\n                        this._dispatchEvent(e, 'dragenter', target);\n                    }\n                }\n                // continue dragging\n                if (this._img) {\n                    this._lastTouch = e;\n                    e.preventDefault(); // prevent scrolling\n                    if (target != this._lastTarget) {\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\n                        this._dispatchEvent(e, 'dragenter', target);\n                        this._lastTarget = target;\n                    }\n                    this._moveImage(e);\n                    this._dispatchEvent(e, 'dragover', target);\n                }\n            }\n        };\n        DragDropTouch.prototype._touchend = function(e) {\n            if (this._shouldHandle(e)) {\n                // see if target wants to handle up\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\n                    e.preventDefault();\n                    return;\n                }\n                // user clicked the element but didn't drag, so clear the source and simulate a click\n                if (!this._img) {\n                    this._dragSource = null;\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\n                    this._lastClick = Date.now();\n                }\n                // finish dragging\n                this._destroyImage();\n                if (this._dragSource) {\n                    if (e.type.indexOf('cancel') < 0) {\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\n                    }\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\n                    this._reset();\n                }\n            }\n        };\n        // ** utilities\n        // ignore events that have been handled or that involve more than one touch\n        DragDropTouch.prototype._shouldHandle = function(e) {\n            return e &&\n                !e.defaultPrevented &&\n                e.touches && e.touches.length < 2;\n        };\n        // clear all members\n        DragDropTouch.prototype._reset = function() {\n            this._destroyImage();\n            this._dragSource = null;\n            this._lastTouch = null;\n            this._lastTarget = null;\n            this._ptDown = null;\n            this._dataTransfer = new DataTransfer();\n        };\n        // get point for a touch event\n        DragDropTouch.prototype._getPoint = function(e, page) {\n            if (e && e.touches) {\n                e = e.touches[0];\n            }\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\n        };\n        // get distance between the current touch event and the first one\n        DragDropTouch.prototype._getDelta = function(e) {\n            var p = this._getPoint(e);\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\n        };\n        // get the element at a given touch event\n        DragDropTouch.prototype._getTarget = function(e) {\n            var pt = this._getPoint(e),\n                el = document.elementFromPoint(pt.x, pt.y);\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\n                el = el.parentElement;\n            }\n            return el;\n        };\n        // create drag image from source element\n        DragDropTouch.prototype._createImage = function(e) {\n            // just in case...\n            if (this._img) {\n                this._destroyImage();\n            }\n            // create drag image from custom element or drag source\n            var src = this._imgCustom || this._dragSource;\n            this._img = src.cloneNode(true);\n            this._copyStyle(src, this._img);\n            this._img.style.top = this._img.style.left = '-9999px';\n            // if creating from drag source, apply offset and opacity\n            if (!this._imgCustom) {\n                var rc = src.getBoundingClientRect(),\n                    pt = this._getPoint(e);\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\n            }\n            // add image to document\n            this._moveImage(e);\n            document.body.appendChild(this._img);\n        };\n        // dispose of drag image element\n        DragDropTouch.prototype._destroyImage = function() {\n            if (this._img && this._img.parentElement) {\n                this._img.parentElement.removeChild(this._img);\n            }\n            this._img = null;\n            this._imgCustom = null;\n        };\n        // move the drag image element\n        DragDropTouch.prototype._moveImage = function(e) {\n            var _this = this;\n            if (this._img) {\n                requestAnimationFrame(function() {\n                    var pt = _this._getPoint(e, true),\n                        s = _this._img.style;\n                    s.position = 'absolute';\n                    s.pointerEvents = 'none';\n                    s.zIndex = '999999';\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\n                });\n            }\n        };\n        // copy properties from an object to another\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\n            for (var i = 0; i < props.length; i++) {\n                var p = props[i];\n                dst[p] = src[p];\n            }\n        };\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\n            // remove potentially troublesome attributes\n            DragDropTouch._rmvAtts.forEach(function(att) {\n                dst.removeAttribute(att);\n            });\n            // copy canvas content\n            if (src instanceof HTMLCanvasElement) {\n                var cSrc = src,\n                    cDst = dst;\n                cDst.width = cSrc.width;\n                cDst.height = cSrc.height;\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\n            }\n            // copy style (without transitions)\n            var cs = getComputedStyle(src);\n            for (var i = 0; i < cs.length; i++) {\n                var key = cs[i];\n                if (key.indexOf('transition') < 0) {\n                    dst.style[key] = cs[key];\n                }\n            }\n            dst.style.pointerEvents = 'none';\n            // and repeat for all children\n            for (var i = 0; i < src.children.length; i++) {\n                this._copyStyle(src.children[i], dst.children[i]);\n            }\n        };\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\n            if (e && target) {\n                var evt = document.createEvent('Event'),\n                    t = e.touches ? e.touches[0] : e;\n                evt.initEvent(type, true, true);\n                evt.button = 0;\n                evt.which = evt.buttons = 1;\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\n                this._copyProps(evt, t, DragDropTouch._ptProps);\n                evt.dataTransfer = this._dataTransfer;\n                target.dispatchEvent(evt);\n                return evt.defaultPrevented;\n            }\n            return false;\n        };\n        // gets an element's closest draggable ancestor\n        DragDropTouch.prototype._closestDraggable = function(e) {\n            for (; e; e = e.parentElement) {\n                if (e.hasAttribute('draggable') && e.draggable) {\n                    return e;\n                }\n            }\n            return null;\n        };\n        return DragDropTouch;\n    }());\n\n    /*private*/\n    DragDropTouch._instance = new DragDropTouch(); // singleton\n    // constants\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\n    // copy styles/attributes from drag source to drag image element\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\n    // synthesize and dispatch an event\n    // returns true if the event has been handled (e.preventDefault == true)\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\n\n    return DragDropTouch;\n});\n\ndefine('skylark-utils/velm',[\n    \"./skylark\",\n    \"./langx\",\n    \"./datax\",\n    \"./dnd\",\n    \"./eventer\",\n    \"./filer\",\n    \"./finder\",\n    \"./fx\",\n    \"./geom\",\n    \"./mover\",\n    \"./noder\",\n    \"./styler\"\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\n    var map = Array.prototype.map,\n        slice = Array.prototype.slice;\n\n    var VisualElement = langx.klass({\n        klassName: \"VisualElement\",\n\n        \"init\": function(node) {\n            if (langx.isString(node)) {\n                node = document.getElementById(node);\n            }\n            this.domNode = node;\n        }\n    });\n\n    var root = new VisualElement(document.body),\n        velm = function(node) {\n            if (node) {\n                return new VisualElement(node);\n            } else {\n                return root;\n            }\n        };\n\n    function _delegator(fn, context) {\n        return function() {\n            var self = this,\n                elem = self.domNode,\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\n\n            if (ret) {\n                if (ret === context) {\n                    return self;\n                } else {\n                    if (ret instanceof HTMLElement) {\n                        ret = new VisualElement(ret);\n                    } else if (langx.isArrayLike(ret)) {\n                        ret = map.call(ret, function(el) {\n                            if (el instanceof HTMLElement) {\n                                return new VisualElement(ret);\n                            } else {\n                                return el;\n                            }\n                        })\n                    }\n                }\n            }\n            return ret;\n        };\n    }\n\n    langx.mixin(velm, {\n        batch: function(nodes, action, args) {\n            nodes.forEach(function(node) {\n                var elm = (node instanceof VisualElement) ? node : velm(node);\n                elm[action].apply(elm, args);\n            });\n\n            return this;\n        },\n\n        root: new VisualElement(document.body),\n\n        VisualElement: VisualElement,\n\n        delegate: function(names, context) {\n            var props = {};\n\n            names.forEach(function(name) {\n                props[name] = _delegator(context[name], context);\n            });\n\n            VisualElement.partial(props);\n        }\n    });\n\n    // from ./datax\n    velm.delegate([\n        \"attr\",\n        \"data\",\n        \"prop\",\n        \"removeAttr\",\n        \"removeData\",\n        \"text\",\n        \"val\"\n    ], datax);\n\n    // from ./dnd\n    velm.delegate([\n        \"draggable\",\n        \"droppable\"\n    ], dnd);\n\n\n    // from ./eventer\n    velm.delegate([\n        \"off\",\n        \"on\",\n        \"one\",\n        \"shortcuts\",\n        \"trigger\"\n    ], eventer);\n\n    // from ./filer\n    velm.delegate([\n        \"picker\",\n        \"dropzone\"\n    ], filer);\n\n    // from ./finder\n    velm.delegate([\n        \"ancestor\",\n        \"ancestors\",\n        \"children\",\n        \"descendant\",\n        \"find\",\n        \"findAll\",\n        \"firstChild\",\n        \"lastChild\",\n        \"matches\",\n        \"nextSibling\",\n        \"nextSiblings\",\n        \"parent\",\n        \"previousSibling\",\n        \"previousSiblings\",\n        \"siblings\"\n    ], finder);\n\n    velm.find = function(selector) {\n        if (selector === \"body\") {\n            return this.root;\n        } else {\n            return this.root.descendant(selector);\n        }\n    };\n\n    // from ./fx\n    velm.delegate([\n        \"animate\",\n        \"fadeIn\",\n        \"fadeOut\",\n        \"fadeTo\",\n        \"fadeToggle\",\n        \"hide\",\n        \"scrollToTop\",\n        \"show\",\n        \"toggle\"\n    ], fx);\n\n\n    // from ./geom\n    velm.delegate([\n        \"borderExtents\",\n        \"boundingPosition\",\n        \"boundingRect\",\n        \"clientHeight\",\n        \"clientSize\",\n        \"clientWidth\",\n        \"contentRect\",\n        \"height\",\n        \"marginExtents\",\n        \"offsetParent\",\n        \"paddingExtents\",\n        \"pagePosition\",\n        \"pageRect\",\n        \"relativePosition\",\n        \"relativeRect\",\n        \"scrollIntoView\",\n        \"scrollLeft\",\n        \"scrollTop\",\n        \"size\",\n        \"width\"\n    ], geom);\n\n    // from ./mover\n    velm.delegate([\n        \"movable\"\n    ], dnd);\n\n\n    // from ./noder\n    velm.delegate([\n        \"after\",\n        \"append\",\n        \"before\",\n        \"clone\",\n        \"contains\",\n        \"contents\",\n        \"empty\",\n        \"html\",\n        \"isChildOf\",\n        \"ownerDoc\",\n        \"prepend\",\n        \"remove\",\n        \"replace\",\n        \"reverse\",\n        \"throb\",\n        \"traverse\",\n        \"wrapper\",\n        \"wrapperInner\",\n        \"unwrap\"\n    ], noder);\n\n    // from ./styler\n    velm.delegate([\n        \"addClass\",\n        \"className\",\n        \"css\",\n        \"hasClass\",\n        \"hide\",\n        \"isInvisible\",\n        \"removeClass\",\n        \"show\",\n        \"toggleClass\"\n    ], styler);\n    return skylark.velm = velm;\n});\n\ndefine('skylark-utils/main',[\n    \"./skylark\",\n    \"./browser\",\n    \"./css\",\n    \"./datax\",\n    \"./dnd\",\n    \"./devices\",\n    \"./eventer\",\n    \"./filer\",\n    \"./finder\",\n    \"./fx\",\n    \"./geom\",\n    \"./http\",\n    \"./mover\",\n    \"./noder\",\n    \"./query\",\n    \"./scripter\",\n    \"./storages\",\n    \"./styler\",\n    \"./touchx\",\n    \"./langx\",\n    \"./velm\"\n], function(skylark) {\n    return skylark;\n})\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}