{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","isIE","exec","navigator","userAgent","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","disabled","elm","arguments","this","dom","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","cls","isString","re","property","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","after","placing","refNode","parent","nextSibling","insertBefore","append","before","contents","contentDocument","childNodes","tag","setAttribute","createFragment","html","singleTagRE","test","$1","fragmentRE","containers","container","innerHTML","slice","clone","deep","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","rxhtmlTag","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","children","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","isWindow","_createStyleSheet","external","options","type","count","media","create","rel","async","head","sheetsById","createStyleSheet","sheetId","addSheetRules","deleteSheetRule","rule","sheet","deleteRuleFunc","rulesPropName","_rule","deleteRule","defaultSheetId","removeStyleSheet","insertRule","selector","index","insertSheetRule","addRules","rules","insertRuleFunc","toString","isAtRule","str","startsWith","json","adjust","parentName","depth","strNode","values","atFlg","SPACE","repeat","isArray","n","adjusted","getElementsByTagName","defaultSheet","removeRule","_insertRule","addRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","idx","$","enabled","eq","even","focus","activeElement","href","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","defer","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","space","tab","up","keys","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","dragHandle","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","e1","over","dropped","manager","eventName","handle","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","dropzone","droppedCallback","enterdCount","types","items","webkitGetAsEntry","getAsEntry","webentry","then","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","headers","contentRange","FormData","blob","uploadName","encodeURI","contentType","getUploadedBytes","jqXHR","range","getResponseHeader","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","context","currentLoaded","_progress","chunkSize","ajax","done","textStatus","progress","lengthComputable","total","resolveWith","fail","errorThrown","rejectWith","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","processData","Blob","webkitSlice","mozSlice","Xhr","request","url","_bitrateTimer","jqXhr","entry","path","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","evt","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","resetClipAuto","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","v","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","makeArray","unshift","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","func","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isObject","NodeList","compact","charAt","wrapper_node_operation","argType","arg","object","get","toArray","is","isHtmlNode","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","watch","imgs","totalCount","successed","successedCount","failered","faileredCount","img","isLoaded","progressedCount","progressed","isCompleted","naturalWidth","addBackgroundImage","elm1","reURL","Image","childImgs","background","preload","urls","images","viewer","loadedCallback","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","models","methodMap","patch","read","sync","method","entity","defaults","emulateHTTP","emulateJSON","dataType","urlError","attrs","toJSON","_method","beforeSend","xhr","setRequestHeader","Entity","Stateful","isMatch","fetch","success","resp","serverAttrs","set","wrapError","save","validate","wait","_validate","isNew","destroy","stopListening","collection","idAttribute","encodeURIComponent","Collection","entities","comparator","_reset","silent","setOptions","merge","addOptions","array","at","min","tail","partial","initialize","singular","removed","_removeEntitys","changes","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","existing","hasChanged","cid","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","constructor","validationError","_onEntityEvent","prevId","previousAttributes","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","errorCallback","script","state","loadedCallbacks","errorCallbacks","startTime","callbacks","deleteJavaScript","cookies","sKey","unescape","cookie","list","expires","domain","secure","sExpires","Number","vEnd","Infinity","String","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","write","rmfile","readdir","getDirectory","dirEntry","results","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","move","moveTo","chdir","onchdir","fullPath","importFromHost","deferred","f","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","t","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","widgets","defineWidgetClass","delegateEventSplitter","Widget","uniqueId","_ensureElement","$el","render","_removeElement","unlistenTo","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, noder) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n    \r\n// in development start\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n// in development end\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, datax, finder, geom, eventer, styler) {\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n        klassName: \"DndManager\",\r\n\r\n        init: function() {\r\n\r\n        },\r\n\r\n        prepare: function(draggable) {\r\n            var e = eventer.create(\"preparing\", {\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle\r\n            });\r\n            draggable.trigger(e);\r\n            draggable.dragSource = e.dragSource;\r\n        },\r\n\r\n        start: function(draggable, event) {\r\n\r\n            var p = geom.pagePosition(draggable.dragSource);\r\n            this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n            this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n            var e = eventer.create(\"started\", {\r\n                elm: draggable.elm,\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle,\r\n                ghost: null,\r\n\r\n                transfer: {}\r\n            });\r\n\r\n            draggable.trigger(e);\r\n\r\n\r\n            this.dragging = draggable;\r\n\r\n            if (draggable.draggingClass) {\r\n                styler.addClass(draggable.dragSource, draggable.draggingClass);\r\n            }\r\n\r\n            this.draggingGhost = e.ghost;\r\n            if (!this.draggingGhost) {\r\n                this.draggingGhost = draggable.elm;\r\n            }\r\n\r\n            this.draggingTransfer = e.transfer;\r\n            if (this.draggingTransfer) {\r\n\r\n                langx.each(this.draggingTransfer, function(key, value) {\r\n                    event.dataTransfer.setData(key, value);\r\n                });\r\n            }\r\n\r\n            event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n            event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n            var e1 = eventer.create(\"dndStarted\", {\r\n                elm: e.elm,\r\n                dragSource: e.dragSource,\r\n                dragHandle: e.dragHandle,\r\n                ghost: e.ghost,\r\n                transfer: e.transfer\r\n            });\r\n\r\n            this.trigger(e1);\r\n        },\r\n\r\n        over: function() {\r\n\r\n        },\r\n\r\n        end: function(dropped) {\r\n            var dragging = this.dragging;\r\n            if (dragging) {\r\n                if (dragging.draggingClass) {\r\n                    styler.removeClass(dragging.dragSource, dragging.draggingClass);\r\n                }\r\n            }\r\n\r\n            var e = eventer.create(\"dndEnded\", {});\r\n            this.trigger(e);\r\n\r\n\r\n            this.dragging = null;\r\n            this.draggingTransfer = null;\r\n            this.draggingGhost = null;\r\n            this.draggingOffsetX = null;\r\n            this.draggingOffsetY = null;\r\n        }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n        klassName: \"Draggable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this;\r\n\r\n            self.elm = elm;\r\n            self.draggingClass = params.draggingClass || \"dragging\",\r\n                self.params = langx.clone(params);\r\n\r\n            [\"preparing\", \"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n\r\n            eventer.on(elm, {\r\n                \"mousedown\": function(e) {\r\n                    var params = self.params;\r\n                    if (params.handle) {\r\n                        self.dragHandle = finder.closest(e.target, params.handle);\r\n                        if (!self.dragHandle) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (params.source) {\r\n                        self.dragSource = finder.closest(e.target, params.source);\r\n                    } else {\r\n                        self.dragSource = self.elm;\r\n                    }\r\n                    manager.prepare(self);\r\n                    if (self.dragSource) {\r\n                        datax.attr(self.dragSource, \"draggable\", 'true');\r\n                    }\r\n                },\r\n\r\n                \"mouseup\": function(e) {\r\n                    if (self.dragSource) {\r\n                        //datax.attr(self.dragSource, \"draggable\", 'false');\r\n                        self.dragSource = null;\r\n                        self.dragHandle = null;\r\n                    }\r\n                },\r\n\r\n                \"dragstart\": function(e) {\r\n                    datax.attr(self.dragSource, \"draggable\", 'false');\r\n                    manager.start(self, e);\r\n                },\r\n\r\n                \"dragend\": function(e) {\r\n                    eventer.stop(e);\r\n\r\n                    if (!manager.dragging) {\r\n                        return;\r\n                    }\r\n\r\n                    manager.end(false);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n        klassName: \"Droppable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this,\r\n                draggingClass = params.draggingClass || \"dragging\",\r\n                hoverClass,\r\n                activeClass,\r\n                acceptable = true;\r\n\r\n            self.elm = elm;\r\n            self._params = params;\r\n\r\n            [\"started\", \"entered\", \"leaved\", \"dropped\", \"overing\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n            eventer.on(elm, {\r\n                \"dragover\": function(e) {\r\n                    e.stopPropagation()\r\n\r\n                    if (!acceptable) {\r\n                        return\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"overing\", {\r\n                        overElm: e.target,\r\n                        transfer: manager.draggingTransfer,\r\n                        acceptable: true\r\n                    });\r\n                    self.trigger(e2);\r\n\r\n                    if (e2.acceptable) {\r\n                        e.preventDefault() // allow drop\r\n\r\n                        e.dataTransfer.dropEffect = \"copyMove\";\r\n                    }\r\n\r\n                },\r\n\r\n                \"dragenter\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    var e2 = eventer.create(\"entered\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n                },\r\n\r\n                \"dragleave\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n                    if (!acceptable) return false\r\n\r\n                    var e2 = eventer.create(\"leaved\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.removeClass(elm, hoverClass);\r\n                    }\r\n                },\r\n\r\n                \"drop\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    eventer.stop(e); // stops the browser from redirecting.\r\n\r\n                    if (!manager.dragging) return\r\n\r\n                    // manager.dragging.elm.removeClass('dragging');\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"dropped\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    manager.end(true)\r\n                }\r\n            });\r\n\r\n            manager.on(\"dndStarted\", function(e) {\r\n                var e2 = eventer.create(\"started\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                acceptable = e2.acceptable;\r\n                hoverClass = e2.hoverClass;\r\n                activeClass = e2.activeClass;\r\n\r\n                if (activeClass && acceptable) {\r\n                    styler.addClass(elm, activeClass);\r\n                }\r\n\r\n            }).on(\"dndEnded\", function(e) {\r\n                var e2 = eventer.create(\"ended\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                if (hoverClass && acceptable) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n                if (activeClass && acceptable) {\r\n                    styler.removeClass(elm, activeClass);\r\n                }\r\n\r\n                acceptable = false;\r\n                activeClass = null;\r\n                hoverClass = null;\r\n            });\r\n\r\n        }\r\n    });\r\n\r\n\r\n    /*   \r\n     * Make the specified element be in a moveable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function draggable(elm, params) {\r\n        return new Draggable(elm, params);\r\n    }\r\n\r\n    /*   \r\n     * Make the specified element be in a droppable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function droppable(elm, params) {\r\n        return new Droppable(elm, params);\r\n    }\r\n\r\n\r\n    function dnd() {\r\n        return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n        //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable: draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable: droppable,\r\n\r\n        manager: manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer, styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n    /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange: null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function(message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function(key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function(form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function(e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function() {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        }, params);\r\n\r\n        var blobSlice = function() {\r\n                var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n                return slice.apply(this, arguments);\r\n            },\r\n            ajax = function(data) {\r\n                return langx.Xhr.request(data.url, data);\r\n            };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function(index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });\r\n                }\r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function(index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function(now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context, [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function() {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function(result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context, [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function(jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context, [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function() {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n\r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer, {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select: select,\r\n\r\n        upload: upload,\r\n\r\n        readFile: function(file, params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n\r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n\r\n            if (params.asArrayBuffer) {\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);\r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile: function(data, name) {\r\n            if (window.navigator.msSaveBlob) {\r\n                if (langx.isString(data)) {\r\n                    data = dataURItoBlob(data);\r\n                }\r\n                window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n    return skylark.velm = velm;\r\n});\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !langx.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(el,options) {\r\n\t    \t//for supporting init(options,el)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // query delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widgets\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}