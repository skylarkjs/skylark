{"version":3,"sources":["skylarkjs.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","xhrGet","url","callback","xhr","XMLHttpRequest","onreadystatechange","this","readyState","response","responseText","open","send","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","cb","requireOne","hasOwnProperty","Error","module","args","forEach","apply","window","onedep","modules","config","baseUrl","skylarkjs","skylark","http","res","console","error","cfg","JSON","parse","runtime","initApp","spa","_cfg","contextPath","app","go","path","force","prepare","then","run","spaModule","_start","isArray","object","constructor","Array","isArrayLike","obj","isString","isHtmlNode","isFunction","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmptyObject","name","value","type","Node","isNumber","isObject","isPlainObject","isWindow","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","class2type","toLowerCase","String","toString","call","types","compact","array","filter","item","each","key","undef","flatten","result","j","inArray","indexOf","makeArray","offset","startWith","concat","slice","elements","values","uniq","idx","first","items","n","createAssigner","keysFunc","defaults","arguments","index","source","keys","l","allKeys","has","isEqual","a","b","eq","isMatch","attrs","_mixin","target","deep","safe","undefined","_parseMixinArgs","params","shift","sources","mixin","removeItem","splice","fallback","prop","safeMixin","_","clone","src","checkCloneMethod","copy","deepEq","SymbolProto","Symbol","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","arrays","objects","f1","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","_constructor","fn","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","unshift","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","inherit","klass","SimpleQueryEngine","query","arr","thisObject","out","cache","buildFn","execute","results","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","test","matches","QueryResults","addIterativeMethod","method","Deferred","when","isPromise","delegate","ArrayStore","queryEngine","idProperty","get","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","advise","dispatcher","advice","receiveArguments","signal","previous","around","advised","next","nextId","aspect","methodName","existing","executionId","before","after","newResults","defer","requestAnimationFrame","setTimeoutout","noop","proxy","context","proxyFn","TypeError","debounce","wait","timeout","later","clearTimeout","setTimeout","TMP","returnTrue","returnFalse","funcs","wrapPromise","p","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","Promise","__ctx__","handler","PGLISTENERS","pipe","always","done","fail","self","promise","resolve","reject","_resolve","_reject","resolveWith","_resolved","listener","reason","rejectWith","_rejected","errback","progback","all","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","func","series","waterful","Evented","on","events","selector","one","_hub","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","dasherize","str","replace","deserializeValue","trim","substitute","template","transform","getObject","match","retVal","getValue","_k","reverse","v","format","camelCase","toUpperCase","lowerFirst","charAt","serializeValue","stringify","upperFirst","getAbsoluteUrl","document","createElement","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","eval","responseXML","Blob","xhrObj","reponse","statusText","evt","hdr","setRequestHeader","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","uniqueId","cidPrefix","collection","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","createEvent","funcArg","arg","payload","getQueryParams","segs","queryParam","nv","toPixel","parseFloat","uid","_uid","prefix","idCounter","langx","URL","webkitURL","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","router","useHistoryApi","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","noCache","finded","_cache","_routes","routeName","hub","homePath","_homePath","setting","settings","routes","Route","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","content","forceRefresh","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","plugins","_plugins","_config","pluginName","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","cssPropName","isIE","navigator","userAgent","support","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","disabled","elm","dom","defaultDisplay","nodeName","element","display","elementDisplay","body","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","rxhtmlTag","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","warn","children","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","_createStyleSheet","external","media","rel","head","sheetsById","createStyleSheet","sheetId","addSheetRules","deleteSheetRule","rule","sheet","deleteRuleFunc","rulesPropName","_rule","deleteRule","defaultSheetId","removeStyleSheet","insertRule","insertSheetRule","addRules","rules","insertRuleFunc","isAtRule","adjust","parentName","depth","strNode","atFlg","SPACE","repeat","adjusted","getElementsByTagName","defaultSheet","removeRule","_insertRule","addRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","$","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","stopPropagation","evented","Event","_args","readyRE","shortcuts","registry","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","shortcutKeys","shortcutKey","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","home","page_down","page_up","period","space","tab","up","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","dragSource","dragHandle","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","e1","over","dropped","manager","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","dropzone","droppedCallback","enterdCount","webkitGetAsEntry","getAsEntry","webentry","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","contentRange","blob","uploadName","encodeURI","getUploadedBytes","jqXHR","range","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","currentLoaded","_progress","chunkSize","ajax","textStatus","lengthComputable","errorThrown","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","webkitSlice","mozSlice","_bitrateTimer","jqXhr","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","createObjectURL","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","resetClipAuto","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","margin","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","replaceClass","newClass","oldClass","watch","imgs","totalCount","successed","successedCount","failered","faileredCount","img","isLoaded","progressedCount","progressed","isCompleted","naturalWidth","addBackgroundImage","elm1","reURL","Image","childImgs","background","preload","urls","images","viewer","loadedCallback","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","models","methodMap","read","sync","entity","emulateHTTP","emulateJSON","urlError","_method","Entity","fetch","resp","serverAttrs","wrapError","save","destroy","stopListening","encodeURIComponent","Collection","entities","comparator","_reset","setOptions","merge","addOptions","at","min","tail","initialize","singular","removed","_removeEntitys","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","errorCallback","loadedCallbacks","errorCallbacks","startTime","callbacks","deleteJavaScript","_delegator","domNode","HTMLElement","VisualElement","batch","action","widgets","defineWidgetClass","delegateEventSplitter","Widget","_ensureElement","$el","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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","file":"../skylarkjs.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylarkjs/skylark',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n\t    each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/objects',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        }\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function(handler) {\r\n            this.then(handler);\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return wrapPromise(Promise.all(array));\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./arrays\"\r\n],function(Deferred,arrays){\r\n    var each = arrays.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(klass,objects,types){\r\n\tvar slice = Array.prototype.slice,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n\t\tisFunction = types.isFunction,\r\n\t\tisString = types.isString,\r\n\t\tisEmptyObject = types.isEmptyObject,\r\n\t\tmixin = objects.mixin;\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\treturn Evented;\r\n\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = arrays.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./klass\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,Deferred,Evented,funcs,klass,objects,Restful,Stateful,strings,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,funcs,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.6-beta\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylarkjs/router',[\r\n    \"skylark-router/router\"\r\n], function(router) {\r\n    return router;\r\n});\r\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        baseUrl : function() {\r\n            return router.baseUrl();\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylarkjs/spa',[\r\n    \"skylark-spa/spa\"\r\n], function(spa) {\r\n    return spa;\r\n});\r\n\ndefine('skylarkjs/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylarkjs/core',[\r\n    \"./skylark\",\r\n    \"./router\",\r\n    \"./spa\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylarkjs/browser',[\r\n    \"skylark-utils/browser\"\r\n], function(browser) {\r\n    return browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, noder) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylarkjs/css',[\r\n    \"skylark-utils/css\"\r\n], function(css) {\r\n    return css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\ndefine('skylarkjs/datax',[\r\n    \"skylark-utils/datax\"\r\n], function(datax) {\r\n    return datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n    \r\n// in development start\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n// in development end\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, datax, finder, geom, eventer, styler) {\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n        klassName: \"DndManager\",\r\n\r\n        init: function() {\r\n\r\n        },\r\n\r\n        prepare: function(draggable) {\r\n            var e = eventer.create(\"preparing\", {\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle\r\n            });\r\n            draggable.trigger(e);\r\n            draggable.dragSource = e.dragSource;\r\n        },\r\n\r\n        start: function(draggable, event) {\r\n\r\n            var p = geom.pagePosition(draggable.dragSource);\r\n            this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n            this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n            var e = eventer.create(\"started\", {\r\n                elm: draggable.elm,\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle,\r\n                ghost: null,\r\n\r\n                transfer: {}\r\n            });\r\n\r\n            draggable.trigger(e);\r\n\r\n\r\n            this.dragging = draggable;\r\n\r\n            if (draggable.draggingClass) {\r\n                styler.addClass(draggable.dragSource, draggable.draggingClass);\r\n            }\r\n\r\n            this.draggingGhost = e.ghost;\r\n            if (!this.draggingGhost) {\r\n                this.draggingGhost = draggable.elm;\r\n            }\r\n\r\n            this.draggingTransfer = e.transfer;\r\n            if (this.draggingTransfer) {\r\n\r\n                langx.each(this.draggingTransfer, function(key, value) {\r\n                    event.dataTransfer.setData(key, value);\r\n                });\r\n            }\r\n\r\n            event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n            event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n            var e1 = eventer.create(\"dndStarted\", {\r\n                elm: e.elm,\r\n                dragSource: e.dragSource,\r\n                dragHandle: e.dragHandle,\r\n                ghost: e.ghost,\r\n                transfer: e.transfer\r\n            });\r\n\r\n            this.trigger(e1);\r\n        },\r\n\r\n        over: function() {\r\n\r\n        },\r\n\r\n        end: function(dropped) {\r\n            var dragging = this.dragging;\r\n            if (dragging) {\r\n                if (dragging.draggingClass) {\r\n                    styler.removeClass(dragging.dragSource, dragging.draggingClass);\r\n                }\r\n            }\r\n\r\n            var e = eventer.create(\"dndEnded\", {});\r\n            this.trigger(e);\r\n\r\n\r\n            this.dragging = null;\r\n            this.draggingTransfer = null;\r\n            this.draggingGhost = null;\r\n            this.draggingOffsetX = null;\r\n            this.draggingOffsetY = null;\r\n        }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n        klassName: \"Draggable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this;\r\n\r\n            self.elm = elm;\r\n            self.draggingClass = params.draggingClass || \"dragging\",\r\n                self.params = langx.clone(params);\r\n\r\n            [\"preparing\", \"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n\r\n            eventer.on(elm, {\r\n                \"mousedown\": function(e) {\r\n                    var params = self.params;\r\n                    if (params.handle) {\r\n                        self.dragHandle = finder.closest(e.target, params.handle);\r\n                        if (!self.dragHandle) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (params.source) {\r\n                        self.dragSource = finder.closest(e.target, params.source);\r\n                    } else {\r\n                        self.dragSource = self.elm;\r\n                    }\r\n                    manager.prepare(self);\r\n                    if (self.dragSource) {\r\n                        datax.attr(self.dragSource, \"draggable\", 'true');\r\n                    }\r\n                },\r\n\r\n                \"mouseup\": function(e) {\r\n                    if (self.dragSource) {\r\n                        //datax.attr(self.dragSource, \"draggable\", 'false');\r\n                        self.dragSource = null;\r\n                        self.dragHandle = null;\r\n                    }\r\n                },\r\n\r\n                \"dragstart\": function(e) {\r\n                    datax.attr(self.dragSource, \"draggable\", 'false');\r\n                    manager.start(self, e);\r\n                },\r\n\r\n                \"dragend\": function(e) {\r\n                    eventer.stop(e);\r\n\r\n                    if (!manager.dragging) {\r\n                        return;\r\n                    }\r\n\r\n                    manager.end(false);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n        klassName: \"Droppable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this,\r\n                draggingClass = params.draggingClass || \"dragging\",\r\n                hoverClass,\r\n                activeClass,\r\n                acceptable = true;\r\n\r\n            self.elm = elm;\r\n            self._params = params;\r\n\r\n            [\"started\", \"entered\", \"leaved\", \"dropped\", \"overing\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n            eventer.on(elm, {\r\n                \"dragover\": function(e) {\r\n                    e.stopPropagation()\r\n\r\n                    if (!acceptable) {\r\n                        return\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"overing\", {\r\n                        overElm: e.target,\r\n                        transfer: manager.draggingTransfer,\r\n                        acceptable: true\r\n                    });\r\n                    self.trigger(e2);\r\n\r\n                    if (e2.acceptable) {\r\n                        e.preventDefault() // allow drop\r\n\r\n                        e.dataTransfer.dropEffect = \"copyMove\";\r\n                    }\r\n\r\n                },\r\n\r\n                \"dragenter\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    var e2 = eventer.create(\"entered\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n                },\r\n\r\n                \"dragleave\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n                    if (!acceptable) return false\r\n\r\n                    var e2 = eventer.create(\"leaved\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.removeClass(elm, hoverClass);\r\n                    }\r\n                },\r\n\r\n                \"drop\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    eventer.stop(e); // stops the browser from redirecting.\r\n\r\n                    if (!manager.dragging) return\r\n\r\n                    // manager.dragging.elm.removeClass('dragging');\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"dropped\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    manager.end(true)\r\n                }\r\n            });\r\n\r\n            manager.on(\"dndStarted\", function(e) {\r\n                var e2 = eventer.create(\"started\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                acceptable = e2.acceptable;\r\n                hoverClass = e2.hoverClass;\r\n                activeClass = e2.activeClass;\r\n\r\n                if (activeClass && acceptable) {\r\n                    styler.addClass(elm, activeClass);\r\n                }\r\n\r\n            }).on(\"dndEnded\", function(e) {\r\n                var e2 = eventer.create(\"ended\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                if (hoverClass && acceptable) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n                if (activeClass && acceptable) {\r\n                    styler.removeClass(elm, activeClass);\r\n                }\r\n\r\n                acceptable = false;\r\n                activeClass = null;\r\n                hoverClass = null;\r\n            });\r\n\r\n        }\r\n    });\r\n\r\n\r\n    /*   \r\n     * Make the specified element be in a moveable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function draggable(elm, params) {\r\n        return new Draggable(elm, params);\r\n    }\r\n\r\n    /*   \r\n     * Make the specified element be in a droppable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function droppable(elm, params) {\r\n        return new Droppable(elm, params);\r\n    }\r\n\r\n\r\n    function dnd() {\r\n        return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n        //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable: draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable: droppable,\r\n\r\n        manager: manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\ndefine('skylarkjs/dnd',[\r\n    \"skylark-utils/dnd\"\r\n], function(dnd) {\r\n    return dnd;\r\n});\r\n\ndefine('skylarkjs/eventer',[\r\n    \"skylark-utils/eventer\"\r\n], function(eventer) {\r\n    return eventer;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer, styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n    /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange: null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function(message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function(key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function(form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function(e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function() {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        }, params);\r\n\r\n        var blobSlice = function() {\r\n                var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n                return slice.apply(this, arguments);\r\n            },\r\n            ajax = function(data) {\r\n                return langx.Xhr.request(data.url, data);\r\n            };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function(index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });\r\n                }\r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function(index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function(now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context, [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function() {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function(result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context, [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function(jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context, [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function() {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n\r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer, {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select: select,\r\n\r\n        upload: upload,\r\n\r\n        readFile: function(file, params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n\r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n\r\n            if (params.asArrayBuffer) {\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);\r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile: function(data, name) {\r\n            if (window.navigator.msSaveBlob) {\r\n                if (langx.isString(data)) {\r\n                    data = dataURItoBlob(data);\r\n                }\r\n                window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\ndefine('skylarkjs/filer',[\r\n    \"skylark-utils/filer\"\r\n], function(filer) {\r\n    return filer;\r\n});\r\n\ndefine('skylarkjs/finder',[\r\n    \"skylark-utils/finder\"\r\n], function(finder) {\r\n    return finder;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylarkjs/fx',[\r\n    \"skylark-utils/fx\"\r\n], function(fx) {\r\n    return fx;\r\n});\r\n\ndefine('skylarkjs/geom',[\r\n    \"skylark-utils/geom\"\r\n], function(geom) {\r\n    return geom;\r\n});\r\n\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylarkjs/images',[\r\n    \"skylark-utils/images\"\r\n], function(images) {\r\n    return images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylarkjs/models',[\r\n    \"skylark-utils/models\"\r\n], function(models) {\r\n    return models;\r\n});\r\n\ndefine('skylarkjs/noder',[\r\n    \"skylark-utils/noder\"\r\n], function(noder) {\r\n    return noder;\r\n});\r\n\ndefine('skylarkjs/query',[\r\n    \"skylark-utils/query\"\r\n], function(query) {\r\n    return query;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\ndefine('skylarkjs/scripter',[\r\n    \"skylark-utils/scripter\"\r\n], function(scripter) {\r\n    return scripter;\r\n});\r\n\ndefine('skylarkjs/styler',[\r\n    \"skylark-utils/styler\"\r\n], function(styler) {\r\n    return styler;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n    return skylark.velm = velm;\r\n});\ndefine('skylarkjs/velm',[\r\n    \"skylark-utils/velm\"\r\n], function(velm) {\r\n    return velm;\r\n});\r\n\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !langx.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(el,options) {\r\n\t    \t//for supporting init(options,el)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // query delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylarkjs/widgets',[\r\n    \"skylark-utils/widgets\"\r\n], function(widgets) {\r\n    return widgets;\r\n});\r\n\ndefine('skylarkjs/main',[\r\n    \"./core\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./langx\",\r\n    \"./models\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./velm\",\r\n    \"./widgets\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylarkjs', ['skylarkjs/main'], function (main) { return main; });\n\n"]}