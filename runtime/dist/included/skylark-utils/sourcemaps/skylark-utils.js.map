{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","maybeAddPx","name","value","cssNumber","dasherize","classRE","classReCache","RegExp","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","document","createElement","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","match","property","arguments","computedStyle","style","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","mixin","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","toLowerCase","contents","contentDocument","childNodes","html","innerHTML","empty","isNumber","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","tag","parent","setAttribute","append","createFragment","singleTagRE","test","$1","fragmentRE","containers","container","dom","slice","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","after","placing","refNode","nextSibling","insertBefore","before","prepend","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","offsetWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","obj","pageXOffset","pageYOffset","pageRect","round","offset","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","isWindow","innerWidth","innerHeight","isDocument","geom","toPixel","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","matched","lowerFirst","cssPropName","location","support","velm","ancestor","selector","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","type","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","parseSelector","checkbox","checked","idx","$","disabled","enabled","eq","focus","activeElement","href","tabindex","gt","has","sel","hidden","lt","not","radio","selected","visible","item","isArrayFilter","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","delete","create","special","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","func","context","elem","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","klassName","charAt","exec","wrapper_node_operation","argType","arg","object","el","get","toArray","is","excludes","parents","parentsUntil","replaceWith","newContent","wrap","structure","index","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","Deferred","tuples","Callbacks","once","memory","state","promise","always","deferred","done","fail","then","fns","defer","tuple","returned","resolve","reject","progress","notify","values","list","stateString","disable","lock","fireWith","triggerAndReturn","eventName","triggerGlobal","settings","global","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","status","success","resolveWith","ajaxComplete","ajaxError","rejectWith","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","url","serializeData","processData","param","traditional","ajax","urlAnchor","ajaxSettings","crossDomain","originAnchor","protocol","host","toString","dataType","hasPlaceholder","Date","now","jsonp","ajaxJSONP","abortTimeout","accepts","headers","setHeader","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseText","eval","responseXML","blankRE","statusText","xhrFields","async","open","username","password","timeout","send","parseArguments","serialize","scope","array","hash","addToPrefiltersOrTransports","dataTypeExpression","dataTypes","rnotwhite","jQuery","unshift","ajaxExtend","src","flatOptions","extend","firing","firingStart","firingLength","firingIndex","fire","stopOnFalse","start","_","unique","splice","locked","sub","progressValues","progressContexts","resolveContexts","resolveValues","remain","updateFn","ctx","notifyWith","jsonpID","rscript","responseData","_callbackName","jsonpCallback","callbackName","script","originalCallback","errorType","triggerHandler","head","XMLHttpRequest","json","xml","post","getJSON","response","escape","encodeURIComponent","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup","construct","_createStyleSheet","link","count","rel","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","prepare","dragSource","handleElm","p","draggingOffsetX","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","_params","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","localStream","isSupported","video","audio","d","stream","URL","createObjectURL","localMediaStream","onloadedmetadata","err","vibrate","webkitVibrate","mozVibrate","msVibrate","devices","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","Blob","CustomEvent","images","elementNodeTypes","1","9","11","ImagesLoaded","onAlways","elements","makeArray","getImages","bind","addElementImages","addImage","background","addElementBackgroundImages","childImgs","img","reURL","backgroundImage","addBackground","loadingImage","LoadingImage","Background","onProgress","_this","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","Image","handleEvent","method","unbindEvents","imagesLoaded","inst","loaded","models","methodMap","patch","read","sync","entity","defaults","emulateHTTP","emulateJSON","urlError","attrs","toJSON","_method","textStatus","errorThrown","Entity","Stateful","isMatch","fetch","resp","serverAttrs","set","wrapError","save","validate","wait","_validate","isNew","destroy","stopListening","collection","idAttribute","Collection","entities","comparator","_reset","silent","setOptions","addOptions","insert","at","min","tail","partial","initialize","singular","removed","_removeEntitys","changes","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","existing","hasChanged","cid","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","constructor","validationError","_onEntityEvent","prevId","previousAttributes","_place","choices","layoutNode","aroundNodeCoords","win","view","String","best","choice","corner","spaceAvailable","w","L","R","M","h","T","B","res","aroundCorner","bb","startXpos","startYpos","startX","startY","endX","endY","corners","padding","c","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","l","b","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","keys","changedTouches","downButton","originalPos","handleEl","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","resizable","defaultOptions","touchActionNone","direction","border","grabber","startSize","currentSize","isHtmlNode","resizer","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","cookies","sKey","unescape","cookie","path","expires","domain","secure","sExpires","Number","vEnd","Infinity","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","results","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","f","exportToHost","request","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","widget","delegateEventSplitter","Widget","uniqueId","_ensureElement","$el","render","_removeElement","unlistenTo","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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A7KA/R,GAAAsE,MAAAsN,GACAgoC,MAAA,SAAAl1C,EAAAm1C,EAAAn6C,GAMA,MALAgF,GAAA/E,QAAA,SAAAe,GACA,GAAAmB,GAAAnB,YAAAi5C,GAAAj5C,EAAAkR,EAAAlR,EACAmB,GAAAg4C,GAAAj6C,MAAAiC,EAAAnC,KAGAsC,MAGA+P,KAAA,GAAA4nC,GAAAv4C,SAAAE,MAEAq4C,cAAAA,EAEAxT,QAAA,SAAAjmC,EAAA8J,GACA,GAAAjH,KAEAA,GAAA7C,GAAA8J,EAEA2vC,EAAAxT,QAAApjC,IAGA+2C,SAAA,SAAA13C,EAAA+nB,GACA,GAAApnB,KAEAX,GAAAzC,QAAA,SAAAO,GACA6C,EAAA7C,GAAAs5C,EAAArvB,EAAAjqB,GAAAiqB,KAGAwvB,EAAAxT,QAAApjC,MAKA6O,EAAAkoC,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAn+B,GAGA/J,EAAAkoC,UACA,YACA,aACAze,GAIAzpB,EAAAkoC,UACA,MACA,KACA,MACA,YACA,WACAx5B,GAGA1O,EAAAkoC,UACA,SACA,YACA1a,GAGAxtB,EAAAkoC,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACA7/B,GAEArI,EAAAmB,KAAA,SAAAjB,GACA,MAAA,SAAAA,EACA9P,KAAA+P,KAEA/P,KAAA+P,KAAAc,WAAAf,IAKAF,EAAAkoC,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAzyB,GAIAzV,EAAAkoC,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACA3pC,GAGAyB,EAAAkoC,UACA,WACAze,GAIAzpB,EAAAkoC,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAtvC,GAGAoH,EAAAkoC,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAh4C,GAEA/B,EAAA6R,KAAAA,IAGAhT,EAAA,wBACA,YACA,UACA,UACA,WACA,SACA,YACA,WACA,SAAAmB,EAAAC,EAAAwK,EAAA1I,EAAAqO,EAAAmQ,EAAA1N,GAIA,QAAAmnC,KACA,MAAAA,GAHA,GAAAC,GAAA,iBAMAC,EAAAj6C,EAAAu7B,QAAAC,SACA/W,KAAA,SAAAsH,EAAAlH,GACA7kB,EAAA+tC,WAAAhiB,KACAlH,EAAAkH,EACAA,EAAA,MAEAA,IACA/pB,KAAA+pB,GAAAA,GAEAlH,GACA7kB,EAAAsE,MAAAtC,KAAA6iB,GAEA7iB,KAAAolC,MACAplC,KAAAolC,IAAApnC,EAAAk6C,SAAA,MAEAl4C,KAAAm4C,kBAIAjmC,QAAA,MAIA8C,EAAA,SAAAlF,GACA,MAAA9P,MAAAo4C,IAAArnC,KAAAjB,IAMAuoC,OAAA,WACA,MAAAr4C,OAKA8G,OAAA,WAGA,MAFA9G,MAAAs4C,iBACAt4C,KAAAu4C,aACAv4C,MAMAs4C,eAAA,WACAt4C,KAAAo4C,IAAAtxC,UAKA0xC,WAAA,SAAAv5C,GAIA,MAHAe,MAAAy4C,mBACAz4C,KAAA04C,YAAAz5C,GACAe,KAAA24C,iBACA34C,MAQA04C,YAAA,SAAA3uB,GACA/pB,KAAAo4C,IAAAL,EAAA/iC,EAAA+U,GACA/pB,KAAA+pB,GAAA/pB,KAAAo4C,IAAA,IAgBAO,eAAA,SAAAn9B,GAEA,GADAA,IAAAA,EAAAxd,EAAAwlB,OAAAxjB,KAAA,YACAwb,EAAA,MAAAxb,KACAA,MAAAy4C,kBACA,KAAA,GAAAt3C,KAAAqa,GAAA,CACA,GAAA2lB,GAAA3lB,EAAAra,EAEA,IADAnD,EAAA0d,WAAAylB,KAAAA,EAAAnhC,KAAAmhC,IACAA,EAAA,CACA,GAAA3gC,GAAAW,EAAAX,MAAAw3C,EACAh4C,MAAA83C,SAAAt3C,EAAA,GAAAA,EAAA,GAAAxC,EAAAod,MAAA+lB,EAAAnhC,QAEA,MAAAA,OAMA83C,SAAA,SAAA3pB,EAAAre,EAAAqU,GAEA,MADAnkB,MAAAo4C,IAAAt8B,GAAAqS,EAAA,kBAAAnuB,KAAAue,IAAAzO,EAAAqU,GACAnkB,MAMAy4C,iBAAA,WAEA,MADAz4C,MAAAo4C,KAAAp4C,KAAAo4C,IAAA78B,IAAA,kBAAAvb,KAAAue,KACAve,MAKA44C,WAAA,SAAAzqB,EAAAre,EAAAqU,GAEA,MADAnkB,MAAAo4C,IAAA78B,IAAA4S,EAAA,kBAAAnuB,KAAAue,IAAAzO,EAAAqU,GACAnkB,MAKA64C,eAAA,SAAA3mC,EAAAgwB,GACA,MAAA15B,GAAAnJ,cAAA6S,EAAAgwB,IAOAiW,eAAA,WACA,GAAAn4C,KAAA+pB,GAOA/pB,KAAAw4C,WAAAx6C,EAAAwlB,OAAAxjB,KAAA,WAPA,CACA,GAAAkiC,GAAAlkC,EAAAsE,SAAAtE,EAAAwlB,OAAAxjB,KAAA,cACAA,MAAA7C,KAAA+kC,EAAA/kC,GAAAa,EAAAwlB,OAAAxjB,KAAA,OACAA,KAAAvB,YAAAyjC,EAAA,SAAAlkC,EAAAwlB,OAAAxjB,KAAA,cACAA,KAAAw4C,WAAAx4C,KAAA64C,eAAA76C,EAAAwlB,OAAAxjB,KAAA,WAAAkiC,IACAliC,KAAA84C,eAAA5W,KAQA4W,eAAA,SAAAllC,GACA5T,KAAAo4C,IAAAv0C,KAAA+P,KAYA,OAPA5V,GAAAsE,MAAAy1C,GACA/iC,EAAApE,EAEAqnC,OAAAA,IAIAl6C,EAAAg6C,OAAAA,IAGAn7C,EAAA,sBACA,YACA,SACA,YACA,QACA,UACA,QACA,YACA,YACA,UACA,WACA,OACA,SACA,WACA,WACA,UACA,UACA,UACA,YACA,aACA,aACA,aACA,WACA,WACA,UACA,SACA,YACA,SAAAmB,GACA,MAAAA,KAGAnB,EAAA,iBAAA,sBAAA,SAAAm8C,GAAA,MAAAA,MA8EE/4C","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        'checkbox': function(elm){\r\n            return elm.type === \"checkbox\";\r\n        },\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'radio': function(elm){\r\n            return elm.type === \"radio\";\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        local.pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/ajax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    var Callbacks = function(options) {\r\n        options = langx.mixin({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                langx.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        langx.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = langx.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? langx.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    //     This module is borrow from zepto.deferred.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    //\r\n    //     Some code (c) 2005, 2013 jQuery Foundation, Inc. and other contributors\r\n\r\n    var slice = Array.prototype.slice\r\n\r\n    function Deferred(func) {\r\n        var tuples = [\r\n                // action, add listener, listener list, final state\r\n                [\"resolve\", \"done\", Callbacks({ once: 1, memory: 1 }), \"resolved\"],\r\n                [\"reject\", \"fail\", Callbacks({ once: 1, memory: 1 }), \"rejected\"],\r\n                [\"notify\", \"progress\", Callbacks({ memory: 1 })]\r\n            ],\r\n            state = \"pending\",\r\n            promise = {\r\n                state: function() {\r\n                    return state\r\n                },\r\n                always: function() {\r\n                    deferred.done(arguments).fail(arguments)\r\n                    return this\r\n                },\r\n                then: function( /* fnDone [, fnFailed [, fnProgress]] */ ) {\r\n                    var fns = arguments\r\n                    return Deferred(function(defer) {\r\n                        langx.each(tuples, function(i, tuple) {\r\n                            var fn = $.isFunction(fns[i]) && fns[i]\r\n                            deferred[tuple[1]](function() {\r\n                                var returned = fn && fn.apply(this, arguments)\r\n                                if (returned && langx.isFunction(returned.promise)) {\r\n                                    returned.promise()\r\n                                        .done(defer.resolve)\r\n                                        .fail(defer.reject)\r\n                                        .progress(defer.notify)\r\n                                } else {\r\n                                    var context = this === promise ? defer.promise() : this,\r\n                                        values = fn ? [returned] : arguments\r\n                                    defer[tuple[0] + \"With\"](context, values)\r\n                                }\r\n                            })\r\n                        })\r\n                        fns = null\r\n                    }).promise()\r\n                },\r\n\r\n                promise: function(obj) {\r\n                    return obj != null ? langx.mixin(obj, promise) : promise\r\n                }\r\n            },\r\n            deferred = {}\r\n\r\n        langx.each(tuples, function(i, tuple) {\r\n            var list = tuple[2],\r\n                stateString = tuple[3]\r\n\r\n            promise[tuple[1]] = list.add\r\n\r\n            if (stateString) {\r\n                list.add(function() {\r\n                    state = stateString\r\n                }, tuples[i ^ 1][2].disable, tuples[2][2].lock)\r\n            }\r\n\r\n            deferred[tuple[0]] = function() {\r\n                deferred[tuple[0] + \"With\"](this === deferred ? promise : this, arguments)\r\n                return this\r\n            }\r\n            deferred[tuple[0] + \"With\"] = list.fireWith\r\n        })\r\n\r\n        promise.promise(deferred)\r\n        if (func) func.call(deferred, deferred)\r\n        return deferred\r\n    }\r\n\r\n    var when = function(sub) {\r\n        var resolveValues = slice.call(arguments),\r\n            len = resolveValues.length,\r\n            i = 0,\r\n            remain = len !== 1 || (sub && langx.isFunction(sub.promise)) ? len : 0,\r\n            deferred = remain === 1 ? sub : Deferred(),\r\n            progressValues, progressContexts, resolveContexts,\r\n            updateFn = function(i, ctx, val) {\r\n                return function(value) {\r\n                    ctx[i] = this\r\n                    val[i] = arguments.length > 1 ? slice.call(arguments) : value\r\n                    if (val === progressValues) {\r\n                        deferred.notifyWith(ctx, val)\r\n                    } else if (!(--remain)) {\r\n                        deferred.resolveWith(ctx, val)\r\n                    }\r\n                }\r\n            }\r\n\r\n        if (len > 1) {\r\n            progressValues = new Array(len)\r\n            progressContexts = new Array(len)\r\n            resolveContexts = new Array(len)\r\n            for (; i < len; ++i) {\r\n                if (resolveValues[i] && langx.isFunction(resolveValues[i].promise)) {\r\n                    resolveValues[i].promise()\r\n                        .done(updateFn(i, resolveContexts, resolveValues))\r\n                        .fail(deferred.reject)\r\n                        .progress(updateFn(i, progressContexts, progressValues))\r\n                } else {\r\n                    --remain\r\n                }\r\n            }\r\n        }\r\n        if (!remain) deferred.resolveWith(resolveContexts, resolveValues)\r\n        return deferred.promise()\r\n    };\r\n\r\n    //     zepto.ajax.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    var jsonpID = 0,\r\n        document = window.document,\r\n        key,\r\n        name,\r\n        rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n        jsonType = 'application/json',\r\n        htmlType = 'text/html',\r\n        blankRE = /^\\s*$/,\r\n        originAnchor = document.createElement('a');\r\n\r\n    originAnchor.href = window.location.href;\r\n\r\n    // trigger a custom event and return false if it was cancelled\r\n    function triggerAndReturn(context, eventName, data) {\r\n        var event = eventer.create(eventName);\r\n        $(context).trigger(event, data)\r\n        return !event.isDefaultPrevented()\r\n    }\r\n\r\n    // trigger an Ajax \"global\" event\r\n    function triggerGlobal(settings, context, eventName, data) {\r\n        if (settings.global) return triggerAndReturn(context || document, eventName, data)\r\n    }\r\n\r\n    // Number of active Ajax requests\r\n    var active = 0;\r\n\r\n    function ajaxStart(settings) {\r\n        if (settings.global && active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\r\n    }\r\n\r\n    function ajaxStop(settings) {\r\n        if (settings.global && !(--active)) triggerGlobal(settings, null, 'ajaxStop')\r\n    }\r\n\r\n    // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\r\n    function ajaxBeforeSend(xhr, settings) {\r\n        var context = settings.context\r\n        if (settings.beforeSend.call(context, xhr, settings) === false ||\r\n            triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\r\n            return false\r\n\r\n        triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        ajaxStop(settings)\r\n    }\r\n\r\n    // Empty function, used as default callback\r\n    function empty() {}\r\n\r\n    var ajaxJSONP = function(options, deferred) {\r\n        if (!('type' in options)) return ajax(options)\r\n\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = (langx.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                ajaxError(null, errorType || 'error', xhr, options, deferred)\r\n            } else {\r\n                ajaxSuccess(responseData[0], xhr, options, deferred)\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && langx.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        if (ajaxBeforeSend(xhr, options) === false) {\r\n            abort('abort')\r\n            return xhr\r\n        }\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return xhr;\r\n    };\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest()\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: jsonType,\r\n            xml: 'application/xml, text/xml',\r\n            html: htmlType,\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    };\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) mime = mime.split(';', 2)[0]\r\n        return mime && (mime == htmlType ? 'html' :\r\n            mime == jsonType ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text'\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && langx.type(options.data) != \"string\")\r\n            options.data = param(options.data, options.traditional)\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\r\n            options.url = appendQuery(options.url, options.data), options.data = undefined\r\n    }\r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options || {}),\r\n            deferred = Deferred(),\r\n            urlAnchor\r\n        for (key in ajaxSettings)\r\n            if (settings[key] === undefined) settings[key] = ajaxSettings[key]\r\n\r\n        ajaxStart(settings)\r\n\r\n        if (!settings.crossDomain) {\r\n            urlAnchor = document.createElement('a')\r\n            urlAnchor.href = settings.url\r\n            urlAnchor.href = urlAnchor.href\r\n            settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\r\n        }\r\n\r\n        if (!settings.url) settings.url = window.location.toString()\r\n        serializeData(settings)\r\n\r\n        var dataType = settings.dataType,\r\n            hasPlaceholder = /\\?.+=\\?/.test(settings.url)\r\n        if (hasPlaceholder) dataType = 'jsonp'\r\n\r\n        if (settings.cache === false || (\r\n                (!options || options.cache !== true) &&\r\n                ('script' == dataType || 'jsonp' == dataType)\r\n            ))\r\n            settings.url = appendQuery(settings.url, '_=' + Date.now())\r\n\r\n        if ('jsonp' == dataType) {\r\n            if (!hasPlaceholder)\r\n                settings.url = appendQuery(settings.url,\r\n                    settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\r\n            return ajaxJSONP(settings, deferred)\r\n        }\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n\r\n        if (settings.headers)\r\n            for (name in settings.headers) setHeader(name, settings.headers[name])\r\n        xhr.setRequestHeader = setHeader\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script')(1, eval)(result)\r\n                        else if (dataType == 'xml') result = xhr.responseXML\r\n                        else if (dataType == 'json') result = blankRE.test(result) ? null : JSON.parse(result)\r\n                    } catch (e) { error = e }\r\n\r\n                    if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\r\n                    else ajaxSuccess(result, xhr, settings, deferred)\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) nativeSetHeader.apply(xhr, headers[name])\r\n\r\n        if (settings.timeout > 0) abortTimeout = setTimeout(function() {\r\n            xhr.onreadystatechange = empty\r\n            xhr.abort()\r\n            ajaxError(null, 'timeout', xhr, settings, deferred)\r\n        }, settings.timeout)\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr\r\n    }\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if (langx.isFunction(data)) dataType = success, success = data, data = undefined\r\n        if (!langx.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    var get = function( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    };\r\n\r\n    var post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return ajax(options)\r\n    };\r\n\r\n    var getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return ajax(options)\r\n    }\r\n\r\n    query.fn.load = function(url, data, success) {\r\n        if (!this.length) return this\r\n        var self = this,\r\n            parts = url.split(/\\s/),\r\n            selector,\r\n            options = parseArguments(url, data, success),\r\n            callback = options.success\r\n        if (parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        ajax(options)\r\n        return this\r\n    }\r\n\r\n    var escape = encodeURIComponent\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value)\r\n            if (scope) key = traditional ? scope :\r\n                scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) params.add(value.name, value.value)\r\n            // recurse into nested objects\r\n            else if (type == \"array\" || (!traditional && type == \"object\"))\r\n                serialize(params, value, traditional, key)\r\n            else params.add(key, value)\r\n        })\r\n    }\r\n\r\n    var param = function(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) value = value()\r\n            if (value == null) value = \"\"\r\n            this.push(escape(key) + '=' + escape(value))\r\n        }\r\n        serialize(params, obj, traditional)\r\n        return params.join('&').replace(/%20/g, '+')\r\n    };\r\n\r\n    var\r\n        /* Prefilters\r\n         * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n         * 2) These are called:\r\n         *    - BEFORE asking for a transport\r\n         *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n         * 3) key is the dataType\r\n         * 4) the catchall symbol \"*\" can be used\r\n         * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n         */\r\n        prefilters = {},\r\n\r\n        /* Transports bindings\r\n         * 1) key is the dataType\r\n         * 2) the catchall symbol \"*\" can be used\r\n         * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n         */\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    var ajaxTransport = addToPrefiltersOrTransports(transports);\r\n\r\n    // A special extend for ajax options\r\n    // that takes \"flat\" options (not to be deep extended)\r\n    // Fixes #9887\r\n    function ajaxExtend(target, src) {\r\n        var key, deep,\r\n            flatOptions = ajaxSettings.flatOptions || {};\r\n\r\n        for (key in src) {\r\n            if (src[key] !== undefined) {\r\n                (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\r\n            }\r\n        }\r\n        if (deep) {\r\n            jQuery.extend(true, target, deep);\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    // Creates a full fledged settings object into target\r\n    // with both ajaxSettings and settings fields.\r\n    // If target is omitted, writes into ajaxSettings.\r\n    var ajaxSetup = function(target, settings) {\r\n        return settings ?\r\n\r\n            // Building a settings object\r\n            ajaxExtend(ajaxExtend(target, ajaxSettings), settings) :\r\n\r\n            // Extending ajaxSettings\r\n            ajaxExtend(ajaxSettings, target);\r\n    };\r\n\r\n    // Base inspection function for prefilters and transports\r\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\r\n\r\n        var inspected = {},\r\n            seekingTransport = (structure === transports);\r\n\r\n        function inspect(dataType) {\r\n            var selected;\r\n            inspected[dataType] = true;\r\n            jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\r\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\r\n                if (typeof dataTypeOrTransport === \"string\" &&\r\n                    !seekingTransport && !inspected[dataTypeOrTransport]) {\r\n\r\n                    options.dataTypes.unshift(dataTypeOrTransport);\r\n                    inspect(dataTypeOrTransport);\r\n                    return false;\r\n                } else if (seekingTransport) {\r\n                    return !(selected = dataTypeOrTransport);\r\n                }\r\n            });\r\n            return selected;\r\n        }\r\n\r\n        return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\r\n    }\r\n\r\n\r\n    langx.mixin(ajax, {\r\n    \tajaxJSONP : ajaxJSONP,\r\n    \tajaxPrefilter : ajaxPrefilter,\r\n    \tajaxTransport: ajaxTransport,\r\n    \tajaxSettings : ajaxSettings,\r\n    \tajaxSetup : ajaxSetup,\r\n\r\n    \tCallbacks:Callbacks,\r\n\r\n    \tDeferred: Deferred,\r\n\r\n    \tget : get,\r\n    \tgetJSON : getJSON,\r\n    \tparam: param,\r\n    \tpost: post,\r\n\r\n    \twhen: when\r\n\r\n    });\r\n\r\n\r\n    return skylark.ajax = ajax;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./query\"\r\n], function(skylark,langx,$) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n  /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // coerce ImagesLoaded() without new, to be new ImagesLoaded()\r\n      if ( !( this instanceof ImagesLoaded ) ) {\r\n        return new ImagesLoaded( elem, options, onAlways );\r\n      }\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new Background( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger( eventName);\r\n      this.trigger( 'always');\r\n\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n\r\n    // ----- events ----- //\r\n\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- Background -------------------------- //\r\n  var Background = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n\r\n   $.fn.imagesLoaded = function( options, callback ) {\r\n      var inst = new ImagesLoaded( this, options, callback );\r\n\r\n      var d = new langx.Deferred();\r\n      \r\n      inst.on(\"progress\",function(e){\r\n        d.progress(e);\r\n      });\r\n\r\n      inst.on(\"done\",function(e){\r\n        d.resolve(e);\r\n      });\r\n\r\n      inst.on(\"fail\",function(e){\r\n        d.reject(e);\r\n      });\r\n\r\n      return d.promise;\r\n   };\r\n\r\n    function images() {\r\n        return images;\r\n    }\r\n\r\n    langx.mixin(images, {\r\n      loaded : ImagesLoaded\r\n    });\r\n\r\n    return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./ajax\"\r\n], function(skylark,langx,ajax) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = ajax(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/resizer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return skylark.resizer = resizer;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/selector',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return skylark.selector = selector;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widget',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    function widget() {\r\n        return widget;\r\n    }\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n        init :function(el,options) {\r\n            if (!langx.isHtmlNode(el)) {\r\n                options = el;\r\n                el = null;\r\n            }\r\n            if (el) {\r\n            \tthis.el = el;\r\n        \t}\r\n            if (options) {\r\n                langx.mixin(this,options);\r\n            }\r\n            if (!this.cid) {\r\n                this.cid = langx.uniqueId('w');\r\n            }\r\n            this._ensureElement();\r\n        },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    }\r\n  \t});\r\n\r\n\r\n    langx.mixin(widget, {\r\n    \t$ : query,\r\n\r\n    \tWidget : Widget\r\n    });\r\n\r\n\r\n    return skylark.widget = widget;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./ajax\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./resizer\",\r\n    \"./scripter\",\r\n    \"./selector\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widget\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}