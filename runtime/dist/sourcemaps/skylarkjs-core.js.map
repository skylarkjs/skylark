{"version":3,"sources":["skylarkjs-core.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","xhrGet","url","callback","xhr","XMLHttpRequest","onreadystatechange","this","readyState","response","responseText","open","send","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","cb","requireOne","hasOwnProperty","Error","module","args","forEach","apply","window","onedep","modules","config","baseUrl","skylarkjs","skylark","http","res","console","error","cfg","JSON","parse","runtime","initApp","spa","_cfg","contextPath","app","go","path","force","prepare","then","run","spaModule","_start","isArray","object","constructor","Array","isArrayLike","obj","isString","isHtmlNode","isFunction","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmptyObject","name","value","type","Node","isNumber","isObject","isPlainObject","isWindow","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","class2type","toLowerCase","String","toString","call","types","compact","array","filter","item","each","key","undef","flatten","result","j","inArray","indexOf","makeArray","offset","startWith","concat","slice","elements","values","uniq","idx","first","items","n","createAssigner","keysFunc","defaults","arguments","index","source","keys","l","allKeys","has","isEqual","a","b","eq","isMatch","attrs","_mixin","target","deep","safe","undefined","_parseMixinArgs","params","shift","sources","mixin","removeItem","splice","fallback","prop","safeMixin","_","clone","src","checkCloneMethod","copy","deepEq","SymbolProto","Symbol","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","arrays","objects","f1","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","_constructor","fn","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","unshift","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","inherit","klass","SimpleQueryEngine","query","arr","thisObject","out","cache","buildFn","execute","results","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","test","matches","QueryResults","addIterativeMethod","method","Deferred","when","isPromise","delegate","ArrayStore","queryEngine","idProperty","get","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","advise","dispatcher","advice","receiveArguments","signal","previous","around","advised","next","nextId","aspect","methodName","existing","executionId","before","after","newResults","defer","requestAnimationFrame","setTimeoutout","noop","proxy","context","proxyFn","TypeError","debounce","wait","timeout","later","clearTimeout","setTimeout","TMP","returnTrue","returnFalse","funcs","wrapPromise","p","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","Promise","__ctx__","handler","PGLISTENERS","pipe","always","done","fail","self","promise","resolve","reject","_resolve","_reject","resolveWith","_resolved","listener","reason","rejectWith","_rejected","errback","progback","all","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","func","series","waterful","Evented","on","events","selector","one","_hub","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","dasherize","str","replace","deserializeValue","trim","substitute","template","transform","getObject","match","retVal","getValue","_k","reverse","v","format","camelCase","toUpperCase","lowerFirst","charAt","serializeValue","stringify","upperFirst","getAbsoluteUrl","document","createElement","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","eval","responseXML","Blob","xhrObj","reponse","statusText","evt","hdr","setRequestHeader","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","uniqueId","cidPrefix","collection","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","createEvent","funcArg","arg","payload","getQueryParams","segs","queryParam","nv","toPixel","parseFloat","uid","_uid","prefix","idCounter","langx","URL","webkitURL","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","router","useHistoryApi","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","noCache","finded","_cache","_routes","routeName","hub","homePath","_homePath","setting","settings","routes","Route","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","content","forceRefresh","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","plugins","_plugins","_config","pluginName","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","main"],"mappings":"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","file":"../skylarkjs-core.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylarkjs/skylark',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n\t    each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/objects',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        }\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function(handler) {\r\n            this.then(handler);\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return wrapPromise(Promise.all(array));\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./arrays\"\r\n],function(Deferred,arrays){\r\n    var each = arrays.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(klass,objects,types){\r\n\tvar slice = Array.prototype.slice,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n\t\tisFunction = types.isFunction,\r\n\t\tisString = types.isString,\r\n\t\tisEmptyObject = types.isEmptyObject,\r\n\t\tmixin = objects.mixin;\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\treturn Evented;\r\n\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = arrays.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./klass\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,Deferred,Evented,funcs,klass,objects,Restful,Stateful,strings,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,funcs,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.6-beta\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylarkjs/router',[\r\n    \"skylark-router/router\"\r\n], function(router) {\r\n    return router;\r\n});\r\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        baseUrl : function() {\r\n            return router.baseUrl();\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylarkjs/spa',[\r\n    \"skylark-spa/spa\"\r\n], function(spa) {\r\n    return spa;\r\n});\r\n\ndefine('skylarkjs/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylarkjs/core',[\r\n    \"./skylark\",\r\n    \"./router\",\r\n    \"./spa\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylarkjs', ['skylarkjs/core'], function (main) { return main; });\n\n"]}