{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","disabled","elm","arguments","this","dom","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","cls","isString","re","property","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","after","placing","refNode","parent","nextSibling","insertBefore","append","before","contents","contentDocument","childNodes","tag","setAttribute","createFragment","html","singleTagRE","test","$1","fragmentRE","containers","container","innerHTML","slice","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","children","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","isWindow","_createStyleSheet","external","options","type","count","media","create","rel","async","head","sheetsById","createStyleSheet","sheetId","addSheetRules","deleteSheetRule","rule","sheet","deleteRuleFunc","rulesPropName","_rule","deleteRule","defaultSheetId","removeStyleSheet","insertRule","selector","index","insertSheetRule","addRules","rules","insertRuleFunc","toString","isAtRule","str","startsWith","json","adjust","parentName","depth","strNode","values","atFlg","SPACE","repeat","isArray","n","adjusted","getElementsByTagName","defaultSheet","removeRule","_insertRule","addRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","idx","$","enabled","eq","even","focus","activeElement","href","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","cleanData","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","defer","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","space","tab","up","keys","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","dragHandle","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","e1","over","dropped","manager","eventName","handle","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","dropzone","droppedCallback","enterdCount","types","items","webkitGetAsEntry","getAsEntry","webentry","then","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","headers","contentRange","FormData","blob","uploadName","encodeURI","contentType","getUploadedBytes","jqXHR","range","getResponseHeader","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","context","currentLoaded","_progress","chunkSize","ajax","done","textStatus","progress","lengthComputable","total","resolveWith","fail","errorThrown","rejectWith","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","processData","Blob","webkitSlice","mozSlice","Xhr","request","url","_bitrateTimer","jqXhr","entry","path","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","evt","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","makeArray","unshift","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","func","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isObject","NodeList","compact","charAt","exec","wrapper_node_operation","argType","arg","object","get","toArray","is","isHtmlNode","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","watch","imgs","totalCount","successed","successedCount","failered","faileredCount","img","isLoaded","progressedCount","progressed","isCompleted","naturalWidth","addBackgroundImage","elm1","reURL","Image","childImgs","background","preload","urls","images","viewer","loadedCallback","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","models","methodMap","patch","read","sync","method","entity","defaults","emulateHTTP","emulateJSON","dataType","urlError","attrs","toJSON","_method","beforeSend","xhr","setRequestHeader","Entity","Stateful","isMatch","fetch","success","resp","serverAttrs","set","wrapError","save","validate","wait","_validate","isNew","destroy","stopListening","collection","idAttribute","encodeURIComponent","Collection","entities","comparator","_reset","silent","setOptions","merge","addOptions","array","at","min","tail","partial","initialize","singular","removed","_removeEntitys","changes","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","existing","hasChanged","cid","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","constructor","validationError","_onEntityEvent","prevId","previousAttributes","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","errorCallback","script","state","loadedCallbacks","errorCallbacks","startTime","callbacks","deleteJavaScript","cookies","sKey","unescape","cookie","list","expires","domain","secure","sExpires","Number","vEnd","Infinity","String","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","write","rmfile","readdir","getDirectory","dirEntry","results","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","move","moveTo","chdir","onchdir","fullPath","importFromHost","deferred","f","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","t","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","Velm","widgets","defineWidgetClass","delegateEventSplitter","Widget","uniqueId","_ensureElement","$el","render","_removeElement","unlistenTo","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, noder) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } +\r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, datax, finder, geom, eventer, styler) {\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n        klassName: \"DndManager\",\r\n\r\n        init: function() {\r\n\r\n        },\r\n\r\n        prepare: function(draggable) {\r\n            var e = eventer.create(\"preparing\", {\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle\r\n            });\r\n            draggable.trigger(e);\r\n            draggable.dragSource = e.dragSource;\r\n        },\r\n\r\n        start: function(draggable, event) {\r\n\r\n            var p = geom.pagePosition(draggable.dragSource);\r\n            this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n            this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n            var e = eventer.create(\"started\", {\r\n                elm: draggable.elm,\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle,\r\n                ghost: null,\r\n\r\n                transfer: {}\r\n            });\r\n\r\n            draggable.trigger(e);\r\n\r\n\r\n            this.dragging = draggable;\r\n\r\n            if (draggable.draggingClass) {\r\n                styler.addClass(draggable.dragSource, draggable.draggingClass);\r\n            }\r\n\r\n            this.draggingGhost = e.ghost;\r\n            if (!this.draggingGhost) {\r\n                this.draggingGhost = draggable.elm;\r\n            }\r\n\r\n            this.draggingTransfer = e.transfer;\r\n            if (this.draggingTransfer) {\r\n\r\n                langx.each(this.draggingTransfer, function(key, value) {\r\n                    event.dataTransfer.setData(key, value);\r\n                });\r\n            }\r\n\r\n            event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n            event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n            var e1 = eventer.create(\"dndStarted\", {\r\n                elm: e.elm,\r\n                dragSource: e.dragSource,\r\n                dragHandle: e.dragHandle,\r\n                ghost: e.ghost,\r\n                transfer: e.transfer\r\n            });\r\n\r\n            this.trigger(e1);\r\n        },\r\n\r\n        over: function() {\r\n\r\n        },\r\n\r\n        end: function(dropped) {\r\n            var dragging = this.dragging;\r\n            if (dragging) {\r\n                if (dragging.draggingClass) {\r\n                    styler.removeClass(dragging.dragSource, dragging.draggingClass);\r\n                }\r\n            }\r\n\r\n            var e = eventer.create(\"dndEnded\", {});\r\n            this.trigger(e);\r\n\r\n\r\n            this.dragging = null;\r\n            this.draggingTransfer = null;\r\n            this.draggingGhost = null;\r\n            this.draggingOffsetX = null;\r\n            this.draggingOffsetY = null;\r\n        }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n        klassName: \"Draggable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this;\r\n\r\n            self.elm = elm;\r\n            self.draggingClass = params.draggingClass || \"dragging\",\r\n                self.params = langx.clone(params);\r\n\r\n            [\"preparing\", \"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n\r\n            eventer.on(elm, {\r\n                \"mousedown\": function(e) {\r\n                    var params = self.params;\r\n                    if (params.handle) {\r\n                        self.dragHandle = finder.closest(e.target, params.handle);\r\n                        if (!self.dragHandle) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (params.source) {\r\n                        self.dragSource = finder.closest(e.target, params.source);\r\n                    } else {\r\n                        self.dragSource = self.elm;\r\n                    }\r\n                    manager.prepare(self);\r\n                    if (self.dragSource) {\r\n                        datax.attr(self.dragSource, \"draggable\", 'true');\r\n                    }\r\n                },\r\n\r\n                \"mouseup\": function(e) {\r\n                    if (self.dragSource) {\r\n                        //datax.attr(self.dragSource, \"draggable\", 'false');\r\n                        self.dragSource = null;\r\n                        self.dragHandle = null;\r\n                    }\r\n                },\r\n\r\n                \"dragstart\": function(e) {\r\n                    datax.attr(self.dragSource, \"draggable\", 'false');\r\n                    manager.start(self, e);\r\n                },\r\n\r\n                \"dragend\": function(e) {\r\n                    eventer.stop(e);\r\n\r\n                    if (!manager.dragging) {\r\n                        return;\r\n                    }\r\n\r\n                    manager.end(false);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n        klassName: \"Droppable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this,\r\n                draggingClass = params.draggingClass || \"dragging\",\r\n                hoverClass,\r\n                activeClass,\r\n                acceptable = true;\r\n\r\n            self.elm = elm;\r\n            self._params = params;\r\n\r\n            [\"started\", \"entered\", \"leaved\", \"dropped\", \"overing\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n            eventer.on(elm, {\r\n                \"dragover\": function(e) {\r\n                    e.stopPropagation()\r\n\r\n                    if (!acceptable) {\r\n                        return\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"overing\", {\r\n                        overElm: e.target,\r\n                        transfer: manager.draggingTransfer,\r\n                        acceptable: true\r\n                    });\r\n                    self.trigger(e2);\r\n\r\n                    if (e2.acceptable) {\r\n                        e.preventDefault() // allow drop\r\n\r\n                        e.dataTransfer.dropEffect = \"copyMove\";\r\n                    }\r\n\r\n                },\r\n\r\n                \"dragenter\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    var e2 = eventer.create(\"entered\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n                },\r\n\r\n                \"dragleave\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n                    if (!acceptable) return false\r\n\r\n                    var e2 = eventer.create(\"leaved\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.removeClass(elm, hoverClass);\r\n                    }\r\n                },\r\n\r\n                \"drop\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    eventer.stop(e); // stops the browser from redirecting.\r\n\r\n                    if (!manager.dragging) return\r\n\r\n                    // manager.dragging.elm.removeClass('dragging');\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"dropped\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    manager.end(true)\r\n                }\r\n            });\r\n\r\n            manager.on(\"dndStarted\", function(e) {\r\n                var e2 = eventer.create(\"started\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                acceptable = e2.acceptable;\r\n                hoverClass = e2.hoverClass;\r\n                activeClass = e2.activeClass;\r\n\r\n                if (activeClass && acceptable) {\r\n                    styler.addClass(elm, activeClass);\r\n                }\r\n\r\n            }).on(\"dndEnded\", function(e) {\r\n                var e2 = eventer.create(\"ended\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                if (hoverClass && acceptable) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n                if (activeClass && acceptable) {\r\n                    styler.removeClass(elm, activeClass);\r\n                }\r\n\r\n                acceptable = false;\r\n                activeClass = null;\r\n                hoverClass = null;\r\n            });\r\n\r\n        }\r\n    });\r\n\r\n\r\n    /*   \r\n     * Make the specified element be in a moveable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function draggable(elm, params) {\r\n        return new Draggable(elm, params);\r\n    }\r\n\r\n    /*   \r\n     * Make the specified element be in a droppable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function droppable(elm, params) {\r\n        return new Droppable(elm, params);\r\n    }\r\n\r\n\r\n    function dnd() {\r\n        return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n        //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable: draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable: droppable,\r\n\r\n        manager: manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer, styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n    /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange: null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function(message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function(key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function(form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function(e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function() {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        }, params);\r\n\r\n        var blobSlice = function() {\r\n                var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n                return slice.apply(this, arguments);\r\n            },\r\n            ajax = function(data) {\r\n                return langx.Xhr.request(data.url, data);\r\n            };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function(index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });\r\n                }\r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function(index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function(now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context, [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function() {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function(result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context, [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function(jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context, [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function() {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n\r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer, {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select: select,\r\n\r\n        upload: upload,\r\n\r\n        readFile: function(file, params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n\r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n\r\n            if (params.asArrayBuffer) {\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);\r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile: function(data, name) {\r\n            if (window.navigator.msSaveBlob) {\r\n                if (langx.isString(data)) {\r\n                    data = dataURItoBlob(data);\r\n                }\r\n                window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display the matched elements.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide the matched elements.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the current vertical position of the scroll bar for the first element in the set of matched elements or set the vertical position of the scroll bar for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide the matched elements.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of the matched elements.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display the matched elements by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide the matched elements by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide the matched elements by animating their opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display the matched elements with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide the matched elements with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide the matched elements with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        Velm.prototype[ method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        Velm.prototype[ method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n    return skylark.velm = velm;\r\n});\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !langx.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(el,options) {\r\n\t    \t//for supporting init(options,el)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // query delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widgets\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}