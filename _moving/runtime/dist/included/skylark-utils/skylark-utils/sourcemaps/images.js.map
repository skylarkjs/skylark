{"version":3,"sources":["images.js"],"names":["define","skylark","langx","eventer","noder","finder","geom","styler","datax","transforms","$","watch","imgs","complete","d","resolve","total","totalCount","successed","successedCount","failered","faileredCount","progress","img","isLoaded","progressedCount","progressed","check","length","forEach","isCompleted","on","load","error","isArray","Deferred","defer","promise","undefined","naturalWidth","loaded","elm","options","addBackgroundImage","elm1","reURL","matches","exec","css","url","Image","src","push","nodeName","childImgs","findAll","i","background","children","preload","urls","isString","images","viewer","el","onload","top","clientSize","height","offsetHeight","left","width","offsetWidth","reset","visibility","loadedCallback","onerror","_init","style","position","border","padding","margin","append","_load","_dispose","remove","ret","dispose","name","args","makeArray","arguments","unshift","apply","fn","imagesLoaded","this","imagesViewer","transform","mixin"],"mappings":"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","file":"../images.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n"]}