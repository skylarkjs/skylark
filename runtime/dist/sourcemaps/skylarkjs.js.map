{"version":3,"sources":["skylarkjs.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","xhrGet","url","callback","xhr","XMLHttpRequest","onreadystatechange","this","readyState","response","responseText","open","send","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","cb","requireOne","hasOwnProperty","Error","module","args","forEach","apply","window","onedep","modules","config","baseUrl","skylarkjs","skylark","http","res","console","error","cfg","JSON","parse","runtime","contextPath","initApp","spa","app","go","path","force","prepare","then","run","spaModule","clone","src","copy","undefined","isArray","isPlainObject","key","debounce","fn","wait","timeout","later","arguments","clearTimeout","setTimeout","compact","array","filter","call","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","e","each","obj","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","location","href","segs","params","queryParam","nv","inArray","indexOf","object","constructor","Array","isString","nodeName","isBoolean","isDocument","nodeType","DOCUMENT_NODE","type","isObject","isWindow","Object","getPrototypeOf","prototype","isDefined","isHtmlNode","Node","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","makeArray","offset","startWith","concat","slice","elements","values","nextTick","requestAnimationFrame","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","target","source","deep","safe","_parseMixinArgs","shift","sources","mixin","safeMixin","substitute","template","transform","thisObject","getObject","match","retVal","getValue","keys","_k","reverse","v","format","toString","uid","_uid","uniq","langx","createClass","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","superFn","tmp","overrided","ret","parent","_constructor","init","klassName","Function","create","__proto__","partial","inherit","delegate","TMP","Deferred","promise","Promise","resolve","reject","_resolve","_reject","bind","reason","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","progress","err","d","data","immediate","Evented","on","events","selector","ctx","one","self","_hub","trigger","CustomEvent","eventName","listeners","len","reCompact","listener","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","a","document","createElement","class2type","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","createEvent","current","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","previous","router","useHistoryApi","state","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","hash","noCache","finded","_cache","_routes","routeName","hub","homePath","_homePath","setting","settings","routes","Route","start","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","query","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","val","content","forceRefresh","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","plugins","_plugins","_config","pluginName","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","cssPropName","support","maybeAddPx","cssNumber","classRE","classReCache","className","node","svg","baseVal","defaultDisplay","element","display","elementDisplay","body","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","cls","re","property","computedStyle","prop","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","ensureNodes","nodes","copyByClone","cloneNode","chkName","contents","contentDocument","childNodes","html","empty","isIE","getAttribs","attr","setAttrib","getAttrib","tag","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","after","placing","refNode","nextSibling","insertBefore","before","prepend","append","overlay","overlayDiv","position","top","left","width","height","zIndex","remove","oldNode","replaceChild","throb","timer","time","throbber","textNode","update","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","index","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","rootIsSelector","matches","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","attributes","operator","cache","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","checkbox","checked","disabled","enabled","eq","focus","activeElement","tabindex","gt","has","sel","hidden","lt","not","radio","selected","visible","offsetWidth","isArrayFilter","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","setAttribute","removeAttribute","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","relativeRect","scrollIntoView","align","getOffset","rootElm","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","sort","createProxy","originalEvent","ignoreProperties","$this","handler","findHandler","unregister","ready","register","stop","keyCode","stopPropagation","evented","Event","_args","readyRE","shortcuts","registry","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","add","shortcutKeys","shortcutKey","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","l","related","relatedTarget","warn","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","delete","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","dragSource","handleElm","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","Blob","createObjectURL","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","animationDelay","fast","slow","mimeToDataType","mime","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","ajaxSuccess","status","success","ajaxComplete","ajaxError","ajax","ajaxSettings","crossDomain","abortTimeout","dataType","accepts","headers","setHeader","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","getResponseHeader","eval","responseXML","blankRE","statusText","username","password","get","parseArguments","post","getJSON","beforeSend","global","script","json","xml","gtJSON","_place","choices","layoutNode","aroundNodeCoords","win","view","best","some","choice","corner","overflow","spaceAvailable","w","L","R","M","h","T","B","aroundCorner","bb","startXpos","min","startYpos","startX","startY","endX","endY","at","corners","padding","c","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","b","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","wrapper_map","func","elem","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","el","toArray","is","excludes","collection","parents","parentsUntil","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","detach","Dimension","margin","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","place","addContent","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","_delegator","domNode","HTMLElement","VisualElement","batch","action","main"],"mappings":"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ACA,aACA,OACA,OACAkgB,GAGAvI,EAAA3X,UACA,YACA,aACA0tB,GAIA/V,EAAA3X,UACA,MACA,KACA,MACA,YACA,WACA8nB,GAGAnQ,EAAA3X,UACA,SACA,YACAiwB,GAGAtY,EAAA3X,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACA2e,GAEAhH,EAAAc,KAAA,SAAA3W,GACA,MAAA,SAAAA,EACApO,KAAAmkB,KAEAnkB,KAAAmkB,KAAAW,WAAA1W,IAKA6V,EAAA3X,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAyyB,GAIA9a,EAAA3X,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAqlB,GAGA1N,EAAA3X,UACA,WACA0tB,GAIA/V,EAAA3X,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAqT,GAGAsE,EAAA3X,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAqN,GACA5X,EAAAkiB,KAAAA,IAGA3jB,EAAA,kBACA,sBACA,SAAA2jB,GACA,MAAAA,KAGA3jB,EAAA,kBACA,SACA,YACA,QACA,UACA,QACA,YACA,UACA,WACA,OACA,SACA,SACA,UACA,UACA,UACA,aACA,WACA,UACA,SAAAyB,GACA,MAAAA,KAGAzB,EAAA,aAAA,kBAAA,SAAAosC,GAAA,MAAAA,MAgJE1sC","file":"../skylarkjs.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylarkjs/skylark',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter;\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                proto[name] = typeof props[name] == \"function\" && !noOverrided && typeof _super[name] == \"function\" ?\r\n                    (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"ctor._constructor.apply(inst, arguments);\" +\r\n                    \"return inst;\" +\r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, options) {\r\n                    return createClass(props, this, options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n\r\n    function clone( /*anything*/ src) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    var Deferred = function() {\r\n        this.promise = new Promise(function(resolve, reject) {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        }.bind(this));\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item) > -1;\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !(obj.nodeName && obj.nodeName == \"#text\") && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function nextTick(fn) {\r\n        requestAnimationFrame(fn);\r\n        return this;\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        nextTick: nextTick,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: window.URL || window.webkitURL\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.5\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylarkjs/router',[\r\n    \"skylark-router/router\"\r\n], function(router) {\r\n    return router;\r\n});\r\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylarkjs/spa',[\r\n    \"skylark-spa/spa\"\r\n], function(spa) {\r\n    return spa;\r\n});\r\n\ndefine('skylarkjs/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylarkjs/core',[\r\n    \"./skylark\",\r\n    \"./router\",\r\n    \"./spa\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylarkjs/browser',[\r\n    \"skylark-utils/browser\"\r\n], function(browser) {\r\n    return browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            langx.mixin(node, props);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylarkjs/css',[\r\n    \"skylark-utils/css\"\r\n], function(css) {\r\n    return css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        'checkbox': function(elm){\r\n            return elm.type === \"checkbox\";\r\n        },\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return local.querySelector(elm, sel).length > 0;\r\n        },\r\n\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return local.match(elm, sel);\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'radio': function(elm){\r\n            return elm.type === \"radio\";\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        local.pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n                ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector);\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylarkjs/datax',[\r\n    \"skylark-utils/datax\"\r\n], function(datax) {\r\n    return datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type;\r\n                type = props.type;\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                var listener = events[event];\r\n\r\n                if (listener) {\r\n                    listener.remove(fn, langx.mixin({\r\n                        ns: parsed.ns\r\n                    }, options));\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        (evented.dispatchEvent || evented.trigger).call(evented, e);\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylarkjs/dnd',[\r\n    \"skylark-utils/dnd\"\r\n], function(dnd) {\r\n    return dnd;\r\n});\r\n\ndefine('skylarkjs/eventer',[\r\n    \"skylark-utils/eventer\"\r\n], function(eventer) {\r\n    return eventer;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylarkjs/filer',[\r\n    \"skylark-utils/filer\"\r\n], function(filer) {\r\n    return filer;\r\n});\r\n\ndefine('skylarkjs/finder',[\r\n    \"skylark-utils/finder\"\r\n], function(finder) {\r\n    return finder;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if(i<=freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(this);\r\n            if (complete) {\r\n                complete.call(this);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing,allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing,callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing,callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\r\n\ndefine('skylarkjs/fx',[\r\n    \"skylark-utils/fx\"\r\n], function(fx) {\r\n    return fx;\r\n});\r\n\ndefine('skylarkjs/geom',[\r\n    \"skylark-utils/geom\"\r\n], function(geom) {\r\n    return geom;\r\n});\r\n\ndefine('skylark-utils/http',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n],function(skylark, langx){\r\n    var Deferred = langx.Deferred,\r\n        blankRE = /^\\s*$/,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i;\r\n\r\n\r\n    function empty() {}\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest();\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: 'application/json',\r\n            xml: 'application/xml, text/xml',\r\n            html: 'text/html',\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    }\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) {\r\n            mime = mime.split(';', 2)[0];\r\n        }\r\n        return mime && (mime == 'text/html' ? 'html' :\r\n            mime == 'application/json' ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text';\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') {\r\n            return url;\r\n        }\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?');\r\n    }\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value);\r\n            if (scope) {\r\n                key = traditional ? scope :\r\n                        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']' ;\r\n            }\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) {\r\n                params.add(value.name, value.value);\r\n            // recurse into nested objects\r\n            } else if (type == \"array\" || (!traditional && type == \"object\")) {\r\n                serialize(params, value, traditional, key);\r\n            } else {\r\n                params.add(key, value);\r\n            }\r\n        })\r\n    }    \r\n\r\n    function param(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) {\r\n                value = value();\r\n            }\r\n            if (value == null) {\r\n                value = \"\";\r\n            }\r\n            this.push(escape(key) + '=' + escape(value));\r\n        }\r\n        \r\n        serialize(params, obj, traditional);\r\n\r\n        return params.join('&').replace(/%20/g, '+')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && !langx.isString(options.data)) {\r\n            options.data = $.param(options.data, options.traditional)\r\n        }\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n            options.url = appendQuery(options.url, options.data);\r\n            options.data = undefined;\r\n        }\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        //if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        //triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        //if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        //triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        //triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        //ajaxStop(settings)\r\n    }    \r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options),\r\n            deferred = new Deferred();\r\n\r\n        langx.safeMixin(settings,ajaxSettings);\r\n\r\n        //ajaxStart(settings)\r\n        if (!settings.crossDomain) {\r\n        //    settings.crossDomain = !langx.isSameOrigin(settings.url);\r\n        }\r\n\r\n        serializeData(settings);\r\n        var dataType = settings.dataType;\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout;\r\n\r\n        //if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) {\r\n            setHeader('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET')) {\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n        }\r\n\r\n        if (settings.headers) {\r\n            for (name in settings.headers) {\r\n                setHeader(name, settings.headers[name]);\r\n            }    \r\n        }\r\n        xhr.setRequestHeader = setHeader;\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script') {\r\n                            (1, eval)(result);\r\n                        } else if (dataType == 'xml') {\r\n                            result = xhr.responseXML\r\n                        } else if (dataType == 'json') {\r\n                            result = blankRE.test(result) ? null : JSON.parse(result);\r\n                        }\r\n                    } catch (e) { \r\n                        error = e \r\n                    }\r\n\r\n                    if (error) {\r\n                        ajaxError(error, 'parsererror', xhr, settings, deferred);\r\n                    } else {\r\n                        ajaxSuccess(result, xhr, settings, deferred);\r\n                    }\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred);\r\n                }\r\n            }\r\n        }\r\n\r\n        /*\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n        */\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) {\r\n            nativeSetHeader.apply(xhr, headers[name]);\r\n        }\r\n\r\n        if (settings.timeout > 0) {\r\n            abortTimeout = setTimeout(function() {\r\n                xhr.onreadystatechange = empty;\r\n                xhr.abort();\r\n                ajaxError(null, 'timeout', xhr, settings, deferred);\r\n            }, settings.timeout);\r\n        }\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr;\r\n    }\r\n\r\n\r\n    function get( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    function post( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.type = 'POST';\r\n        return ajax(options);\r\n    }\r\n\r\n    function getJSON( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.dataType = 'json';\r\n        return ajax(options);\r\n    }    \r\n\r\n\r\n    function http(){\r\n      return http;\r\n    }\r\n\r\n    langx.mixin(http, {\r\n        ajax: ajax,\r\n\r\n        get: get,\r\n        \r\n        gtJSON: getJSON,\r\n\r\n        post: post\r\n\r\n    });\r\n\r\n    return skylark.http = http;\r\n});\r\n\ndefine('skylarkjs/http',[\r\n    \"skylark-utils/http\"\r\n], function(http) {\r\n    return http;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                var l = originalPos.left + e.deltaX,\r\n                    t = originalPos.top + e.deltaY;\r\n                if (constraints) {\r\n\r\n                    if (l < constraints.minX) {\r\n                        l = constraints.minX;\r\n                    }\r\n\r\n                    if (l > constraints.maxX) {\r\n                        l = constraints.maxX;\r\n                    }\r\n\r\n                    if (t < constraints.minY) {\r\n                        t = constraints.minY;\r\n                    }\r\n\r\n                    if (t > constraints.maxY) {\r\n                        t = constraints.maxY;\r\n                    }\r\n                }\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylarkjs/mover',[\r\n    \"skylark-utils/mover\"\r\n], function(mover) {\r\n    return mover;\r\n});\r\n\ndefine('skylarkjs/noder',[\r\n    \"skylark-utils/noder\"\r\n], function(noder) {\r\n    return noder;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem] : [elem, selector]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util,selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem,util] : [elem, selector,util]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    self.attr(props);\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                }))\r\n            },\r\n\r\n            slice: function() { \r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: function(selector, context) {\r\n                var node = this[0],\r\n                    collection = false\r\n                if (typeof selector == 'object') collection = $(selector)\r\n                while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                    node = node !== context && !isDocument(node) && node.parentNode\r\n                return $(node)\r\n            },\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom),\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylarkjs/query',[\r\n    \"skylark-utils/query\"\r\n], function(query) {\r\n    return query;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylarkjs/scripter',[\r\n    \"skylark-utils/scripter\"\r\n], function(scripter) {\r\n    return scripter;\r\n});\r\n\ndefine('skylarkjs/styler',[\r\n    \"skylark-utils/styler\"\r\n], function(styler) {\r\n    return styler;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylarkjs/velm',[\r\n    \"skylark-utils/velm\"\r\n], function(velm) {\r\n    return velm;\r\n});\r\n\ndefine('skylarkjs/main',[\r\n    \"./core\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./http\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./velm\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylarkjs', ['skylarkjs/main'], function (main) { return main; });\n\n"]}