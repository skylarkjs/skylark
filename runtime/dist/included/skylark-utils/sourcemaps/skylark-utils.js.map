{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","property","arguments","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","contents","contentDocument","childNodes","html","innerHTML","empty","isNumber","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","tag","parent","setAttribute","append","createFragment","singleTagRE","test","$1","fragmentRE","containers","container","dom","slice","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","after","placing","refNode","nextSibling","insertBefore","before","prepend","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","type","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","selector","index","addRule","createStyleSheet","loadStyleSheet","url","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","href","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","filter","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","rootIsSelector","matches","ancestors","ret","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","checkbox","checked","idx","disabled","enabled","eq","focus","activeElement","tabindex","gt","has","sel","hidden","lt","not","radio","selected","visible","offsetWidth","item","isArrayFilter","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","obj","pageXOffset","pageYOffset","pageRect","round","offset","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","isWindow","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","result","l","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","delete","create","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","handleElm","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","_params","eventName","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","src","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","selectFile","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","Blob","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","mimeToDataType","mime","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","ajaxSuccess","xhr","settings","deferred","context","status","success","ajaxComplete","ajaxError","ajax","ajaxSettings","crossDomain","abortTimeout","dataType","accepts","headers","setHeader","protocol","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseText","eval","responseXML","blankRE","statusText","open","username","password","timeout","send","get","parseArguments","post","getJSON","http","beforeSend","global","XMLHttpRequest","script","json","xml","gtJSON","images","elementNodeTypes","1","9","11","ImagesLoaded","elem","onAlways","elements","makeArray","getImages","bind","addElementImages","addImage","background","addElementBackgroundImages","childImgs","img","reURL","exec","backgroundImage","addBackground","loadingImage","LoadingImage","Background","onProgress","_this","progress","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","Image","handleEvent","method","unbindEvents","loaded","_place","choices","layoutNode","aroundNodeCoords","win","view","String","best","some","choice","corner","spaceAvailable","w","L","R","M","charAt","h","T","B","res","aroundCorner","bb","startXpos","min","startYpos","startX","startY","endX","endY","at","corners","padding","c","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","b","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","array","ltr","movable","updateWithTouchData","keys","changedTouches","downButton","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","wrapper_map","func","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","wrapper_node_operation","argType","arg","object","el","toArray","is","excludes","parents","parentsUntil","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","Dimension","m","margin","cb","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","cookies","sKey","unescape","cookie","escape","list","path","set","expires","domain","secure","sExpires","constructor","Number","vEnd","Infinity","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","results","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","f","exportToHost","request","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","_shouldHandle","now","_DBLCLICK","_dispatchEvent","_reset","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","toString","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","partial","delegate","widget","delegateEventSplitter","Widget","isHtmlNode","cid","uniqueId","_ensureElement","$el","render","_removeElement","unlistenTo","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","attrs","_setAttributes","main"],"mappings":"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,EAAAs+B,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACA70B,GAGAzJ,EAAAs+B,UACA,YACA,aACA9kB,GAIAxZ,EAAAs+B,UACA,MACA,KACA,MACA,YACA,WACAprB,GAGAlT,EAAAs+B,UACA,SACA,YACApgB,GAGAle,EAAAs+B,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAt2B,GAEAhI,EAAAiB,KAAA,SAAA1D,GACA,MAAA,SAAAA,EACAvK,KAAAkN,KAEAlN,KAAAkN,KAAAa,WAAAxD,IAKAyC,EAAAs+B,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACA5d,GAIA1gB,EAAAs+B,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACArvB,GAGAjP,EAAAs+B,UACA,WACA9kB,GAIAxZ,EAAAs+B,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAljC,GAGA4E,EAAAs+B,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAxrC,GAEA1D,EAAA4Q,KAAAA,IAGA/R,EAAA,wBACA,YACA,UACA,UACA,WACA,SACA,YACA,WACA,SAAAmB,EAAAC,EAAA+L,EAAAtI,EAAAmc,EAAAiE,EAAApS,GAIA,QAAAy9B,KACA,MAAAA,GAHA,GAAAC,GAAA,iBAMAC,EAAApvC,EAAAqqB,QAAAC,SACAtC,KAAA,SAAA+Y,EAAA3Y,GACApoB,EAAAqvC,WAAAtO,KACA3Y,EAAA2Y,EACAA,EAAA,MAEAp9B,KAAAo9B,GAAAA,EACA3Y,GACApoB,EAAA8B,MAAA6B,KAAAykB,GAEAzkB,KAAA2rC,MACA3rC,KAAA2rC,IAAAtvC,EAAAuvC,SAAA,MAEA5rC,KAAA6rC,kBAIAz8B,QAAA,MAIAjD,EAAA,SAAA5B,GACA,MAAAvK,MAAA8rC,IAAA79B,KAAA1D,IAMAwhC,OAAA,WACA,MAAA/rC,OAKA0G,OAAA,WAGA,MAFA1G,MAAAgsC,iBACAhsC,KAAAisC,aACAjsC,MAMAgsC,eAAA,WACAhsC,KAAA8rC,IAAAplC,UAKAwlC,WAAA,SAAA/sC,GAIA,MAHAa,MAAAmsC,mBACAnsC,KAAAosC,YAAAjtC,GACAa,KAAAqsC,iBACArsC,MAQAosC,YAAA,SAAAhP,GACAp9B,KAAA8rC,IAAAP,EAAAp/B,EAAAixB,GACAp9B,KAAAo9B,GAAAp9B,KAAA8rC,IAAA,IAgBAO,eAAA,SAAAjvB,GAEA,GADAA,IAAAA,EAAA/gB,EAAA6oB,OAAAllB,KAAA,YACAod,EAAA,MAAApd,KACAA,MAAAmsC,kBACA,KAAA,GAAAlrC,KAAAmc,GAAA,CACA,GAAAgZ,GAAAhZ,EAAAnc,EAEA,IADA5E,EAAAihB,WAAA8Y,KAAAA,EAAAp2B,KAAAo2B,IACAA,EAAA,CACA,GAAAt4B,GAAAmD,EAAAnD,MAAA0tC,EACAxrC,MAAAsrC,SAAAxtC,EAAA,GAAAA,EAAA,GAAAzB,EAAA2gB,MAAAoZ,EAAAp2B,QAEA,MAAAA,OAMAsrC,SAAA,SAAAjjB,EAAA9d,EAAAyb,GAEA,MADAhmB,MAAA8rC,IAAApuB,GAAA2K,EAAA,kBAAAroB,KAAAmgB,IAAA5V,EAAAyb,GACAhmB,MAMAmsC,iBAAA,WAEA,MADAnsC,MAAA8rC,KAAA9rC,KAAA8rC,IAAA3uB,IAAA,kBAAAnd,KAAAmgB,KACAngB,MAKAssC,WAAA,SAAAjkB,EAAA9d,EAAAyb,GAEA,MADAhmB,MAAA8rC,IAAA3uB,IAAAkL,EAAA,kBAAAroB,KAAAmgB,IAAA5V,EAAAyb,GACAhmB,MAKAusC,eAAA,SAAAn9B,EAAAo9B,GACA,MAAApkC,GAAA9K,cAAA8R,EAAAo9B,IAOAX,eAAA,WACA,GAAA7rC,KAAAo9B,GAOAp9B,KAAAksC,WAAA7vC,EAAA6oB,OAAAllB,KAAA,WAPA,CACA,GAAAwsC,GAAAnwC,EAAA8B,SAAA9B,EAAA6oB,OAAAllB,KAAA,cACAA,MAAAxE,KAAAgxC,EAAAhxC,GAAAa,EAAA6oB,OAAAllB,KAAA,OACAA,KAAArB,YAAA6tC,EAAA,SAAAnwC,EAAA6oB,OAAAllB,KAAA,cACAA,KAAAksC,WAAAlsC,KAAAusC,eAAAlwC,EAAA6oB,OAAAllB,KAAA,WAAAwsC,IACAxsC,KAAAysC,eAAAD,KAQAC,eAAA,SAAA57B,GACA7Q,KAAA8rC,IAAAroC,KAAAoN,KAYA,OAPAxU,GAAA8B,MAAAotC,GACAp/B,EAAA2B,EAEA29B,OAAAA,IAIArvC,EAAAmvC,OAAAA,IAGAtwC,EAAA,sBACA,YACA,YACA,QACA,UACA,QACA,YACA,YACA,UACA,WACA,OACA,SACA,SACA,WACA,UACA,UACA,UACA,aACA,aACA,WACA,WACA,UACA,SACA,YACA,SAAAmB,GACA,MAAAA,KAGAnB,EAAA,iBAAA,sBAAA,SAAAyxC,GAAA,MAAAA,MA8EE1sC","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        'checkbox': function(elm){\r\n            return elm.type === \"checkbox\";\r\n        },\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return matches(elm, sel);\r\n        },\r\n\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'radio': function(elm){\r\n            return elm.type === \"radio\";\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        local.pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n                ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                var listener = events[event];\r\n\r\n                if (listener) {\r\n                    listener.remove(fn, langx.mixin({\r\n                        ns: parsed.ns\r\n                    }, options));\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/http',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n],function(skylark, langx){\r\n    var Deferred = langx.Deferred,\r\n        blankRE = /^\\s*$/,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i;\r\n\r\n\r\n    function empty() {}\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest();\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: 'application/json',\r\n            xml: 'application/xml, text/xml',\r\n            html: 'text/html',\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    }\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) {\r\n            mime = mime.split(';', 2)[0];\r\n        }\r\n        return mime && (mime == 'text/html' ? 'html' :\r\n            mime == 'application/json' ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text';\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') {\r\n            return url;\r\n        }\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?');\r\n    }\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value);\r\n            if (scope) {\r\n                key = traditional ? scope :\r\n                        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']' ;\r\n            }\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) {\r\n                params.add(value.name, value.value);\r\n            // recurse into nested objects\r\n            } else if (type == \"array\" || (!traditional && type == \"object\")) {\r\n                serialize(params, value, traditional, key);\r\n            } else {\r\n                params.add(key, value);\r\n            }\r\n        })\r\n    }    \r\n\r\n    function param(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) {\r\n                value = value();\r\n            }\r\n            if (value == null) {\r\n                value = \"\";\r\n            }\r\n            this.push(escape(key) + '=' + escape(value));\r\n        }\r\n        \r\n        serialize(params, obj, traditional);\r\n\r\n        return params.join('&').replace(/%20/g, '+')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && !langx.isString(options.data)) {\r\n            options.data = $.param(options.data, options.traditional)\r\n        }\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n            options.url = appendQuery(options.url, options.data);\r\n            options.data = undefined;\r\n        }\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        //if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        //triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        //if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        //triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        //triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        //ajaxStop(settings)\r\n    }    \r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options),\r\n            deferred = new Deferred();\r\n\r\n        langx.safeMixin(settings,ajaxSettings);\r\n\r\n        //ajaxStart(settings)\r\n        if (!settings.crossDomain) {\r\n        //    settings.crossDomain = !langx.isSameOrigin(settings.url);\r\n        }\r\n\r\n        serializeData(settings);\r\n        var dataType = settings.dataType;\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout;\r\n\r\n        //if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) {\r\n            setHeader('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET')) {\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n        }\r\n\r\n        if (settings.headers) {\r\n            for (name in settings.headers) {\r\n                setHeader(name, settings.headers[name]);\r\n            }    \r\n        }\r\n        xhr.setRequestHeader = setHeader;\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script') {\r\n                            (1, eval)(result);\r\n                        } else if (dataType == 'xml') {\r\n                            result = xhr.responseXML\r\n                        } else if (dataType == 'json') {\r\n                            result = blankRE.test(result) ? null : JSON.parse(result);\r\n                        }\r\n                    } catch (e) { \r\n                        error = e \r\n                    }\r\n\r\n                    if (error) {\r\n                        ajaxError(error, 'parsererror', xhr, settings, deferred);\r\n                    } else {\r\n                        ajaxSuccess(result, xhr, settings, deferred);\r\n                    }\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred);\r\n                }\r\n            }\r\n        }\r\n\r\n        /*\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n        */\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) {\r\n            nativeSetHeader.apply(xhr, headers[name]);\r\n        }\r\n\r\n        if (settings.timeout > 0) {\r\n            abortTimeout = setTimeout(function() {\r\n                xhr.onreadystatechange = empty;\r\n                xhr.abort();\r\n                ajaxError(null, 'timeout', xhr, settings, deferred);\r\n            }, settings.timeout);\r\n        }\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr;\r\n    }\r\n\r\n\r\n    function get( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    function post( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.type = 'POST';\r\n        return ajax(options);\r\n    }\r\n\r\n    function getJSON( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.dataType = 'json';\r\n        return ajax(options);\r\n    }    \r\n\r\n\r\n    function http(){\r\n      return http;\r\n    }\r\n\r\n    langx.mixin(http, {\r\n        ajax: ajax,\r\n\r\n        get: get,\r\n        \r\n        gtJSON: getJSON,\r\n\r\n        post: post\r\n\r\n    });\r\n\r\n    return skylark.http = http;\r\n});\r\n\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n  /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // coerce ImagesLoaded() without new, to be new ImagesLoaded()\r\n      if ( !( this instanceof ImagesLoaded ) ) {\r\n        return new ImagesLoaded( elem, options, onAlways );\r\n      }\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new Background( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger( eventName);\r\n      this.trigger( 'always');\r\n\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n\r\n    // ----- events ----- //\r\n\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- Background -------------------------- //\r\n  var Background = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n\r\n    function images() {\r\n        return images;\r\n    }\r\n\r\n    langx.mixin(images, {\r\n      loaded : ImagesLoaded\r\n    });\r\n\r\n    return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                var l = originalPos.left + e.deltaX,\r\n                    t = originalPos.top + e.deltaY;\r\n                if (constraints) {\r\n\r\n                    if (l < constraints.minX) {\r\n                        l = constraints.minX;\r\n                    }\r\n\r\n                    if (l > constraints.maxX) {\r\n                        l = constraints.maxX;\r\n                    }\r\n\r\n                    if (t < constraints.minY) {\r\n                        t = constraints.minY;\r\n                    }\r\n\r\n                    if (t > constraints.maxY) {\r\n                        t = constraints.maxY;\r\n                    }\r\n                }\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom),\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widget',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    function widget() {\r\n        return widget;\r\n    }\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n        init :function(el,options) {\r\n            if (!langx.isHtmlNode(el)) {\r\n                options = el;\r\n                el = null;\r\n            }\r\n            this.el = el;\r\n            if (options) {\r\n                langx.mixin(this,options);\r\n            }\r\n            if (!this.cid) {\r\n                this.cid = langx.uniqueId('w');\r\n            }\r\n            this._ensureElement();\r\n        },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    }\r\n  \t});\r\n\r\n\r\n    langx.mixin(widget, {\r\n    \t$ : query,\r\n\r\n    \tWidget : Widget\r\n    });\r\n\r\n\r\n    return skylark.widget = widget;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./http\",\r\n    \"./images\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widget\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}