{"version":3,"sources":["skylark-langx.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","skylark","skylarkjs","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","window","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","get","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","then","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","ArrayStore","klassName-","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","async","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","main"],"mappings":"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","file":"../skylark-langx.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get || prop.value !== undefined)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName-\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            document = window.document,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && url.startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-langx/main',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx', ['skylark-langx/main'], function (main) { return main; });\n\n"]}