{"version":3,"sources":["fx.js"],"names":["define","skylark","langx","browser","geom","styler","eventer","animate","elm","properties","duration","ease","callback","delay","key","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","this","fired","hasScrollTop","resetClipAuto","isPlainObject","easing","complete","isString","fx","speeds","undefined","normal","off","isFunction","eace","animationName","animationDuration","animationTiming","animationEnd","v","supportedTransforms","test","top","right","bottom","left","css","size","width","height","push","dasherize","transitionEnd","transform","transitionProperty","join","transitionDuration","transitionDelay","transitionTiming","event","target","currentTarget","cssReset","call","on","debounce","clientLeft","scrollToTop","show","speed","opacity","scale","hide","pos","scrollFrom","parseInt","scrollTop","i","runEvery","freq","scrollTo","interval","setInterval","clearInterval","toggle","isInvisible","fadeTo","fadeIn","fadeOut","options","fadeToggle","ceasing","allback","slideDown","position","visibility","marginTop","marginBottom","paddingTop","paddingBottom","overflow","apply","slideUp","queue","slideToggle","animationDelay","normalizeCssEvent","css3PropPrefix","normalizeCssProperty","mixin","fast","slow"],"mappings":"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","file":"../fx.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});"]}