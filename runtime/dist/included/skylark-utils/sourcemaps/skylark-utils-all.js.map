{"version":3,"sources":["skylark-utils-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","has","path","inArray","indexOf","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","prototype","isDefined","Node","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","deepEq","PGLISTENERS","Symbol","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","createClass","extendClass","ctor","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","parent","init","klassName","Function","create","__proto__","partial","inherit","delegate","TMP","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","then","onResolved","onRejected","onProgress","progress","done","handler","fail","bind","listener","error","reason","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","get","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","maybeAddPx","cssNumber","classRE","classReCache","RegExp","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","names","cls","re","property","computedStyle","style","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","contents","contentDocument","childNodes","html","innerHTML","empty","isIE","getAttribs","setAttrib","getAttrib","tag","setAttribute","append","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","placing","refNode","nextSibling","insertBefore","prepend","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","update","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","offsetWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","matched","cssPropName","support","velm","ancestor","root","rootIsSelector","matches","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","cache","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","parseSelector","checkbox","checked","$","disabled","enabled","focus","activeElement","tabindex","gt","sel","hidden","lt","not","radio","selected","visible","isArrayFilter","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","sort","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","delete","special","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","func","elem","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","exec","wrapper_node_operation","argType","el","toArray","is","excludes","parents","parentsUntil","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","tuples","Callbacks","once","memory","state","always","fns","tuple","returned","notify","list","stateString","disable","lock","fireWith","triggerAndReturn","triggerGlobal","settings","global","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","status","success","resolveWith","ajaxComplete","ajaxError","rejectWith","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","ajax","urlAnchor","ajaxSettings","crossDomain","originAnchor","host","dataType","hasPlaceholder","Date","now","jsonp","ajaxJSONP","abortTimeout","accepts","headers","setHeader","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseText","eval","responseXML","blankRE","statusText","xhrFields","async","open","username","password","send","parseArguments","serialize","scope","hash","addToPrefiltersOrTransports","dataTypeExpression","dataTypes","rnotwhite","jQuery","ajaxExtend","flatOptions","extend","firing","firingStart","firingLength","firingIndex","fire","stopOnFalse","start","unique","locked","sub","progressValues","progressContexts","resolveContexts","resolveValues","remain","updateFn","notifyWith","jsonpID","rscript","responseData","_callbackName","jsonpCallback","callbackName","script","originalCallback","errorType","triggerHandler","head","XMLHttpRequest","json","xml","post","getJSON","response","escape","encodeURIComponent","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup","construct","_createStyleSheet","link","count","rel","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","handleElm","draggingOffsetX","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","_params","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","localStream","isSupported","video","audio","stream","createObjectURL","localMediaStream","onloadedmetadata","vibrate","webkitVibrate","mozVibrate","msVibrate","devices","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","Blob","images","elementNodeTypes","1","9","11","ImagesLoaded","onAlways","getImages","addElementImages","addImage","background","addElementBackgroundImages","childImgs","img","reURL","backgroundImage","addBackground","loadingImage","LoadingImage","Background","_this","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","Image","handleEvent","method","unbindEvents","imagesLoaded","inst","loaded","models","methodMap","patch","read","sync","entity","emulateHTTP","emulateJSON","urlError","_method","textStatus","errorThrown","Entity","fetch","resp","serverAttrs","wrapError","save","destroy","stopListening","Collection","entities","comparator","_reset","setOptions","addOptions","insert","at","min","tail","initialize","singular","removed","_removeEntitys","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","_place","choices","layoutNode","aroundNodeCoords","win","view","best","choice","corner","spaceAvailable","w","L","R","M","h","T","B","res","aroundCorner","bb","startXpos","startYpos","startX","startY","endX","endY","corners","padding","c","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","resizable","defaultOptions","touchActionNone","direction","border","grabber","startSize","currentSize","resizer","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","cookies","sKey","unescape","cookie","expires","domain","secure","sExpires","Number","vEnd","Infinity","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","f","exportToHost","request","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","defaultVal","getItem","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","defineProperty","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","_shouldHandle","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","widget","delegateEventSplitter","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":";;;;;;;CAAA,SAAUA,EAAQC,GAQd,QAASC,GAASC,EAAUC,GACxB,GAAkB,MAAdD,EAAS,GACX,MAAOA,EAET,IAAIE,GAAQD,EAAKE,MAAM,KACnBC,EAAQJ,EAASG,MAAM,IAC3BD,GAAMG,KACN,KAAK,GAAIC,GAAE,EAAGA,EAAEF,EAAMG,OAAQD,IACV,KAAZF,EAAME,KAEM,MAAZF,EAAME,GACNJ,EAAMG,MAENH,EAAMM,KAAKJ,EAAME,IAEzB,OAAOJ,GAAMO,KAAK,KAtBxB,GAAIC,GAASZ,EAAQY,OACjBC,EAAUb,EAAQa,QAClBC,EAA2B,kBAAXF,IAAyBA,EAAOG,IAChDC,GAAUF,GAA4B,mBAAZG,QAE9B,KAAKH,IAAUF,EAAQ,CACrB,GAAIM,KAkBJN,GAASZ,EAAQY,OAAS,SAASO,EAAIC,EAAMrB,GACnB,kBAAXA,IACPmB,EAAIC,IACApB,QAASA,EACTqB,KAAMA,EAAKF,IAAI,SAASG,GACtB,MAAOpB,GAASoB,EAAIF,KAEtBF,QAAS,MAEbJ,EAAQM,IAERG,SAASH,GAAMpB,GAGvBc,EAAUb,EAAQa,QAAU,SAASM,GACjC,IAAKD,EAAIK,eAAeJ,GACpB,KAAM,IAAIK,OAAM,UAAYL,EAAK,wBAErC,IAAIM,GAASP,EAAIC,EACjB,KAAKM,EAAOR,QAAS,CACjB,GAAIS,KAEJD,GAAOL,KAAKO,QAAQ,SAASN,GACzBK,EAAKhB,KAAKG,EAAQQ,MAGtBI,EAAOR,QAAUQ,EAAO1B,QAAQ6B,MAAMC,OAAQH,GAElD,MAAOD,GAAOR,SAIpB,IAAKL,EACF,KAAM,IAAIY,OAAM,qEAKnB,IAFAzB,EAAQa,EAAOC,IAEVC,EAAO,CACV,GAAIgB,GAAYjB,EAAQ,qBAEpBG,GACFC,QAAUa,EAEV9B,EAAQ8B,UAAaA,IAIxB,SAASlB,EAAOC,GAzEnBD,EAAA,2BAAA,WACA,GAAAmB,KAGA,OAAAA,KAGAnB,EAAA,yBAAA,yBAAA,SAAAmB,GACA,MAAAA,KAGAnB,EAAA,uBAAA,aAAA,SAAAmB,GAYA,QAAAC,GAAAC,EAAAC,GACA,MAAA,UAAAC,GACA,GAAA1B,GAAA2B,UAAA3B,MAEA,IADAyB,IAAAC,EAAAE,OAAAF,IACA1B,EAAA,GAAA,MAAA0B,EAAA,MAAAA,EACA,KAAA,GAAAG,GAAA,EAAAA,EAAA7B,EAAA6B,IAIA,IAAA,GAHAC,GAAAH,UAAAE,GACAE,EAAAP,EAAAM,GACAE,EAAAD,EAAA/B,OACAD,EAAA,EAAAA,EAAAiC,EAAAjC,IAAA,CACA,GAAAkC,GAAAF,EAAAhC,EACA0B,IAAA,SAAAC,EAAAO,KAAAP,EAAAO,GAAAH,EAAAG,IAGA,MAAAP,IAgHA,QAAAQ,GAAAC,EAAAC,EAAAC,EAAAC,GACA,GAEAC,GAFAC,EAAAL,EAAAC,GACAK,EAAA,UAAAL,CAEA,IAAAK,EAAA,CACA,GAAAC,GAAAL,EAAA,WACA,MAAAG,GAAAH,OAAAM,KAAAhB,YAEAY,IACAK,OAAA,WACAF,IACAA,EAAAP,EAAAE,EAAA,OAGAA,OAAA,SAAAQ,EAAA5B,GACA,MAAAyB,GACAA,EAAAvB,MAAA0B,EAAA5B,GACAuB,EAAAH,OAAAQ,EAAA5B,SAKAsB,IACAK,OAAA,WACA,GAAAL,EAAAF,OAAA,CACA,GAAAG,GAAAD,EAAAC,SACAM,EAAAP,EAAAO,IACAA,IAAAN,GAGAA,EACAA,EAAAM,KAAAA,EAEAX,EAAAC,GAAAU,EAEAA,IACAA,EAAAN,SAAAA,UARAL,GAAAC,GAaAD,EAAAE,EAAAE,EAAAF,OAAA,OAGA3B,GAAAqC,KACAV,OAAAA,EACAC,iBAAAA,EAGA,IAAAE,IAAAC,EACA,GAAA,SAAAL,EAAA,CAGA,KAAAI,EAAAM,OAAAN,EAAAA,EAAAM,QACAN,EAAAM,KAAAP,EACAA,EAAAC,SAAAA,MACA,UAAAJ,IAEAD,EAAAC,GAAAG,EACAA,EAAAO,KAAAN,EACAA,EAAAA,SAAAD,OAIAJ,GAAAC,GAAAG,CAEA,OAAAA,GAEA,QAAAS,GAAAZ,GACA,MAAA,UAAAS,EAAAI,EAAAZ,EAAAC,GACA,GAAAH,GAAAe,EAAAL,EAAAI,EACAC,IAAAA,EAAAL,QAAAA,IAEAA,EAAAI,GAAAd,EAAA,WAKA,IAJA,GAAAgB,GAAAJ,GAEA9B,EAAAU,UACAyB,EAAAjB,EAAAiB,OACAA,GACAnC,EAAAmC,EAAAf,OAAAlB,MAAAwB,KAAA1B,IAAAA,EACAmC,EAAAA,EAAAN,IAGA,IAAAX,EAAAM,OACA,GAAAY,GAAAlB,EAAAM,OAAAJ,OAAAM,KAAA1B,EAIA,KADA,GAAAqC,GAAAnB,EAAAmB,MACAA,GAAAA,EAAA5C,GAAAyC,GAAA,CACA,GAAAG,EAAAhB,iBAAA,CACA,GAAAiB,GAAAD,EAAAjB,OAAAlB,MAAAwB,KAAA1B,EAEAoC,GAAAE,IAAAC,GAAAH,EAAAE,MAEAF,GAAAC,EAAAjB,OAAAoB,KAAAd,KAAAU,EAAApC,EAEAqC,GAAAA,EAAAR,KAEA,MAAAO,IAEAH,IACAf,EAAAM,QAAAJ,OAAA,SAAAQ,EAAA5B,GACA,MAAAiC,GAAA/B,MAAA0B,EAAA5B,MAGAkB,EAAAU,OAAAA,EAEA,IAAAQ,GAAAnB,EAAAC,GAAAe,EAAAd,EAAAC,EAAAC,EAEA,OADAD,GAAA,KACAgB,GA+FA,QAAAK,GAAAhC,GACA,IAAAiC,EAAAjC,GAAA,QACA,IAAAK,KACA,KAAA,GAAAE,KAAAP,GAAAK,EAAA9B,KAAAgC,EACA,OAAAF,GAGA,QAAA6B,GAAAxB,EAAAyB,GACA,GAAAC,GAAA,GAAAC,aAAA3B,EAAAyB,EACA,OAAAG,GAAAF,EAAAD,GAGA,QAAAI,GAAAC,EAAAC,GACA,GAAAC,GACAnD,EACAoD,EAAA,WACAH,EAAA/C,MAAA,KAAAF,GAGA,OAAA,YACAA,EAAAU,UACA2C,aAAAF,GACAA,EAAAG,WAAAF,EAAAF,IAoBA,QAAAK,GAAA9C,GAIA,IAAA,GAHAK,GAAA0C,EAAA1C,KAAAL,GACA1B,EAAA+B,EAAA/B,OACAwE,EAAAE,MAAA1E,GACAD,EAAA,EAAAA,EAAAC,EAAAD,IACAyE,EAAAzE,GAAA2B,EAAAK,EAAAhC,GAEA,OAAAyE,GAGA,QAAAG,GAAAC,EAAAC,GACA,GAAAC,EACA,IAAAF,IAAApB,IAAA,OAAAoB,EACAE,EAAAF,MACA,IAAAC,GAAAD,EAAAD,MACAG,EAAAF,EAAAD,YACA,IAAAI,EAAAH,GAAA,CACAE,IACA,KAAA,GAAA/E,GAAA,EAAAA,EAAA6E,EAAA5E,OAAAD,IACA+E,EAAA7E,KAAA0E,EAAAC,EAAA7E,SAEA,IAAAiF,EAAAJ,GAAA,CACAE,IACA,KAAA,GAAA7C,KAAA2C,GACAE,EAAA7C,GAAA0C,EAAAC,EAAA3C,QAGA6C,GAAAF,CAGA,OAAAE,GAIA,QAAAG,GAAAC,GACA,MAAAC,IAAA1B,KAAAyB,EAAA,SAAAE,GACA,MAAA,OAAAA,IAIA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,QAAA,MAAA,KACAA,QAAA,wBAAA,SACAA,QAAA,oBAAA,SACAA,QAAA,KAAA,KACAC,cAGA,QAAAC,GAAAC,GACA,IACA,MAAAA,GACA,QAAAA,GACA,SAAAA,IACA,QAAAA,EAAA,MACAA,EAAA,IAAAA,GAAAA,EACA,UAAAC,KAAAD,GAAAE,KAAAC,MAAAH,GACAA,GAAAA,EACA,MAAA5B,GACA,MAAA4B,IAIA,QAAAI,GAAApE,EAAAqE,GACA,GAAA/F,GAAAiC,EAAAlC,EAAAiG,EAAAN,CAEA,IAAAhE,EAGA,GAFA1B,EAAA0B,EAAA1B,OAEAA,IAAAgG,GAEA,IAAA/D,IAAAP,GACA,GAAAA,EAAAZ,eAAAmB,KACAyD,EAAAhE,EAAAO,GACA8D,EAAAtC,KAAAiC,EAAAzD,EAAAyD,MAAA,GACA,UAMA,KAAA3F,EAAA,EAAAA,EAAAC,IACA0F,EAAAhE,EAAA3B,GACAgG,EAAAtC,KAAAiC,EAAA3F,EAAA2F,MAAA,GAFA3F,KASA,MAAA4C,MAGA,QAAAsD,GAAAf,GACA,GAAAgB,EAAAhB,GAAA,CAEA,IAAA,GADAiB,MACApG,EAAA,EAAAA,EAAAmF,EAAAlF,OAAAD,IAAA,CACA,GAAAqF,GAAAF,EAAAnF,EACA,IAAAmG,EAAAd,GACA,IAAA,GAAAgB,GAAA,EAAAA,EAAAhB,EAAApF,OAAAoG,IACAD,EAAAlG,KAAAmF,EAAAgB,QAGAD,GAAAlG,KAAAmF,GAGA,MAAAe,GAEA,MAAAjB,GAKA,QAAAmB,GAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAC,GAAAH,GAAAA,EAAA9C,KAAA6C,EAAAE,EAAAC,GAAAF,EAcA,QAAAI,GAAAC,GACA,GAAAA,GAAAA,GAAAxF,OAAAyF,SAAAC,KACAC,EAAAH,EAAAhH,MAAA,KACAoH,IAQA,OANAD,GAAA/G,OAAA,GACA+G,EAAA,GAAAnH,MAAA,KAAAsB,QAAA,SAAA+F,GACA,GAAAC,GAAAD,EAAArH,MAAA,IACAoH,GAAAE,EAAA,IAAAA,EAAA,KAGAF,EAgBA,QAAAG,GAAAzF,EAAA0F,GACA,IAAArC,EAAAqC,GACA,MAAA,OAAA1F,GAAAZ,GAAA2C,KAAA/B,EAAA0F,EAGA,KAAA,GADApH,GAAAoH,EAAApH,OACAD,EAAA,EAAAA,EAAAC,EAAAD,IAAA,CACA,GAAAkC,GAAAmF,EAAArH,EACA,IAAA,MAAA2B,IAAAZ,GAAA2C,KAAA/B,EAAAO,GACA,OAAA,CAEAP,GAAAA,EAAAO,GAEA,QAAAjC,EAGA,QAAAqH,GAAAjC,EAAAF,GACA,IAAAA,EACA,QAEA,IAAAnF,EAEA,IAAAmF,EAAAoC,QACA,MAAApC,GAAAoC,QAAAlC,EAIA,KADArF,EAAAmF,EAAAlF,OACAD,KACA,GAAAmF,EAAAnF,KAAAqF,EACA,MAAArF,EAIA,UAUA,QAAAgF,GAAAwC,GACA,MAAAA,IAAAA,EAAAC,cAAA9C,MAGA,QAAAwB,GAAAxE,GACA,OAAA+F,EAAA/F,KAAAgG,EAAAhG,IAAA,gBAAAA,GAAA1B,OAGA,QAAA2H,GAAAjG,GACA,MAAA,iBAAA,GAGA,QAAAkG,GAAAlG,GACA,MAAA,OAAAA,GAAAA,EAAAmG,UAAAnG,EAAAoG,cAMA,QAAAC,GAAAC,EAAAC,GACA,MAAAC,GAAAF,EAAAC,GAGA,QAAAvB,GAAAhB,GACA,MAAA,YAAAtD,GAAAsD,GAGA,QAAA/B,GAAAjC,GACA,MAAA,UAAAU,GAAAV,GAGA,QAAAsD,GAAAtD,GACA,MAAAiC,GAAAjC,KAAAyG,EAAAzG,IAAAE,OAAAwG,eAAA1G,IAAAE,OAAAyG,UAGA,QAAAZ,GAAA/F,GACA,MAAA,gBAAAA,GAGA,QAAAyG,GAAAzG,GACA,MAAAA,IAAAA,GAAAA,EAAAN,OAGA,QAAAkH,GAAA5G,GACA,MAAA,mBAAAA,GAGA,QAAAgG,GAAAhG,GACA,MAAAA,IAAAA,YAAA6G,MAGA,QAAAC,GAAA9G,GACA,MAAA,gBAAAA,GAGA,QAAA+G,GAAA3B,GACA,GAAAA,EAAA,CACA,GAAA4B,GAAA7B,SAAA8B,SAAA,KAAA9B,SAAA+B,QAIA,OAHA/B,UAAAgC,OACAH,GAAA,IAAA7B,SAAAgC,MAEA/B,EAAAgC,WAAAJ,IAKA,QAAAK,GAAArH,GACA,GAAAsH,EACA,KAAAA,IAAAtH,GACA,GAAA,OAAAA,EAAAsH,GACA,OAAA,CAGA,QAAA,EAIA,QAAAC,GAAA1B,EAAA2B,GACA,GAAAnH,GAAAA,EAAAmH,GAAAlJ,EAAA+B,EAAA/B,MACA,IAAA,MAAAuH,EAAA,OAAAvH,CAEA,KAAA,GADA0B,GAAAE,OAAA2F,GACAxH,EAAA,EAAAA,EAAAC,EAAAD,IAAA,CACA,GAAAkC,GAAAF,EAAAhC,EACA,IAAAmJ,EAAAjH,KAAAP,EAAAO,MAAAA,IAAAP,IAAA,OAAA,EAEA,OAAA,EAKA,QAAAK,GAAAL,GACA,GAAAiC,EAAAjC,GAAA,QACA,IAAAK,KACA,KAAA,GAAAE,KAAAP,GAAAyF,EAAAzF,EAAAO,IAAAF,EAAA9B,KAAAgC,EACA,OAAAF,GAGA,QAAAoH,GAAAzH,EAAA0H,EAAAC,GACA,MAAAnD,GAAAxE,IACA2H,OAAAC,OAAA5E,MAAA2D,UAAAkB,MAAA9F,KAAA/B,EAAA0H,GAAA,KAIA1H,GAGA,QAAAjB,GAAA+I,EAAAzD,GACA,GAAAL,GACA3F,EAAAkC,EADAuC,IAEA,IAAA0B,EAAAsD,GACA,IAAAzJ,EAAA,EAAAA,EAAAyJ,EAAAxJ,OAAAD,IACA2F,EAAAK,EAAAtC,KAAA+F,EAAAzJ,GAAAyJ,EAAAzJ,GAAAA,GACA,MAAA2F,GAAAlB,EAAAvE,KAAAyF,OAGA,KAAAzD,IAAAuH,GACA9D,EAAAK,EAAAtC,KAAA+F,EAAAvH,GAAAuH,EAAAvH,GAAAA,GACA,MAAAyD,GAAAlB,EAAAvE,KAAAyF,EAEA,OAAAO,GAAAzB,GAGA,QAAAiF,GAAAvF,GAMA,MALAwF,uBACAA,sBAAAxF,GAEAyF,cAAAzF,GAEAvB,KAGA,QAAAiH,GAAA1F,EAAAoC,GACA,GAAArF,GAAA,IAAAU,YAAA4H,GAAA9F,KAAA9B,UAAA,EACA,IAAA+E,EAAAxC,GAAA,CACA,GAAA2F,GAAA,WACA,MAAA3F,GAAA/C,MAAAmF,EAAArF,EAAAA,EAAAqI,OAAAC,GAAA9F,KAAA9B,YAAAA,WAEA,OAAAkI,GACA,GAAApC,EAAAnB,GACA,MAAArF,IACAA,EAAA6I,QAAA5F,EAAAoC,GAAApC,GACA0F,EAAAzI,MAAA,KAAAF,IAEA2I,EAAA1F,EAAAoC,GAAApC,EAGA,MAAA,IAAA6F,WAAA,qBAKA,QAAAC,GAAAtE,GAGA,MAAAuE,YAAAvE,IAAA,EAiBA,QAAAwE,GAAA5E,GACA,MAAA,OAAAA,EAAA,GAAA6E,OAAA9B,UAAA6B,KAAAzG,KAAA6B,GAGA,QAAA8E,GAAAC,EAAAjF,GACA,GAAAL,EAAAsF,GAAA,CACA,GAAA7D,GAAA6D,EAAA/C,QAAAlC,EACAoB,QACA6D,EAAAC,OAAA9D,EAAA,OAEA,IAAAxB,EAAAqF,GACA,IAAA,GAAApI,KAAAoI,GACA,GAAAA,EAAApI,IAAAmD,EAAA,OACAiF,GAAApI,EACA,OAKA,MAAAU,MAGA,QAAA4H,GAAA1H,EAAAf,EAAA0I,EAAAC,GACA,IAAA,GAAAxI,KAAAH,GACAA,EAAAhB,eAAAmB,KAGAwI,GAAA5H,EAAAZ,KAAAuB,KAGAgH,IAAAxF,EAAAlD,EAAAG,KAAA8C,EAAAjD,EAAAG,MACA+C,EAAAlD,EAAAG,MAAA+C,EAAAnC,EAAAZ,MACAY,EAAAZ,OAEA8C,EAAAjD,EAAAG,MAAA8C,EAAAlC,EAAAZ,MACAY,EAAAZ,OAEAsI,EAAA1H,EAAAZ,GAAAH,EAAAG,GAAAuI,EAAAC,IACA3I,EAAAG,KAAAuB,KACAX,EAAAZ,GAAAH,EAAAG,KAGA,OAAAY,GAGA,QAAA6H,GAAAzJ,GACA,GAAA+F,GAAAuC,GAAA9F,KAAA9B,UAAA,EAOA,OANAkB,QAAAmE,EAAA2D,QACAH,MAAA,EACA7C,EAAAX,EAAAA,EAAAhH,OAAA,MACAwK,KAAAxD,EAAAlH,QAIA+C,OAAAA,OACA+H,QAAA5D,EACAwD,KAAAA,MAIA,QAAAK,KACA,GAAA5J,GAAAyJ,EAAAvJ,MAAAwB,KAAAhB,UAKA,OAHAV,GAAA2J,QAAA1J,QAAA,SAAAY,GACAyI,EAAAtJ,EAAA4B,OAAAf,EAAAb,EAAAuJ,MAAA,KAEAvJ,EAAA4B,OAGA,QAAAsD,GAAAzE,EAAA0F,EAAA0D,GACA/F,EAAAqC,KACAA,GAAAA,GAEA,IAAApH,GAAAoH,EAAApH,MACA,KAAAA,EACA,MAAA0G,GAAAoE,GAAAA,EAAArH,KAAA/B,GAAAoJ,CAEA,KAAA,GAAA/K,GAAA,EAAAA,EAAAC,EAAAD,IAAA,CACA,GAAAgL,GAAA,MAAArJ,EAAA,OAAAA,EAAA0F,EAAArH,GACA,UAAAgL,IACAA,EAAAD,EACA/K,EAAAC,GAEA0B,EAAAgF,EAAAqE,GAAAA,EAAAtH,KAAA/B,GAAAqJ,EAGA,MAAArJ,GAGA,QAAAsC,KACA,GAAA/C,GAAAyJ,EAAAvJ,MAAAwB,KAAAhB,UAKA,OAHAV,GAAA2J,QAAA1J,QAAA,SAAAY,GACAyI,EAAAtJ,EAAA4B,OAAAf,EAAAb,EAAAuJ,MAAA,KAEAvJ,EAAA4B,OAGA,QAAAmI,GAAAC,EAEAxK,EAEAyK,EAEAC,GAmBA,QAAAC,GAAAnJ,EAAAxB,GACA,GAAAwB,EAAAoJ,MAAA,MAAA,CACA,GAAAC,GACAC,EAAA,SAAAxJ,EAAAL,GACA,GAAA8J,GAAAzJ,EAAAjC,KACA,OAAA0L,GACA9J,EAAA8J,GACAD,EAAAxJ,EAAAuJ,EAAA5J,EAAA8J,IADA,KAGAF,EAGA,OAAAC,GAAAtJ,EAAArC,MAAA,KAAA6L,UAAAhL,GAEA,MAAAA,GAAAwB,GAIA,MAxBAkJ,GAAAA,GAAA/J,OACA8J,EAAAA,EACAtB,EAAAuB,EAAAD,GAAA,SAAAQ,GACA,MAAAA,IAqBAT,EAAA1F,QAAA,yCACA,SAAA8F,EAAApJ,EAAA0J,GACA,GAAAjG,GAAA0F,EAAAnJ,EAAAxB,EAIA,OAHAkL,KACAjG,EAAA0F,EAAAO,EAAAR,GAAA1H,KAAA0H,EAAAzF,EAAAzD,IAEAiJ,EAAAxF,EAAAzD,GAAA2J,aAOA,QAAAC,GAAAnK,GACA,MAAAA,GAAAoK,OAAApK,EAAAoK,KAAAA,MAGA,QAAAC,GAAA7G,GACA,MAAAC,IAAA1B,KAAAyB,EAAA,SAAAE,EAAAoB,GACA,MAAAtB,GAAAoC,QAAAlC,IAAAoB,IAKA,QAAAwF,GAAAC,GACA,GAAAvL,KAAAwL,GAAA,EACA,OAAAD,GAAAA,EAAAvL,EAAAA,EAwhBA,QAAAyL,KACA,MAAAA,GA96CA,GA8BAjE,GAAAkE,GA9BAR,MAAAA,SAGArC,IAFA7E,MAAA2D,UAAAiB,OACA5E,MAAA2D,UAAAf,QACA5C,MAAA2D,UAAAkB,OACApE,GAAAT,MAAA2D,UAAAlD,OACArE,GAAAc,OAAAyG,UAAAvH,eAGAuL,GAAAC,OAAAA,SAAA,gBAuBAC,GAAA,mBAAAD,QAAAA,OAAAjE,UAAA,IAEAH,GAAA,SAAAF,EAAAC,EAAAuE,EAAAC,GAGA,GAAAzE,IAAAC,EAAA,MAAA,KAAAD,GAAA,EAAAA,IAAA,EAAAC,CAEA,IAAA,MAAAD,GAAA,MAAAC,EAAA,OAAA,CAEA,IAAAD,IAAAA,EAAA,MAAAC,KAAAA,CAEA,IAAA7F,SAAA4F,EACA,QAAA,aAAA5F,GAAA,WAAAA,GAAA,gBAAA6F,KACAmE,GAAApE,EAAAC,EAAAuE,EAAAC,IAIAL,GAAA,SAAApE,EAAAC,EAAAuE,EAAAC,GAKA,GAAAC,GAAAd,GAAAnI,KAAAuE,EACA,IAAA0E,IAAAd,GAAAnI,KAAAwE,GAAA,OAAA,CACA,QAAAyE,GAEA,IAAA,kBAEA,IAAA,kBAGA,MAAA,GAAA1E,GAAA,GAAAC,CACA,KAAA,kBAGA,OAAAD,KAAAA,GAAAC,KAAAA,EAEA,KAAAD,EAAA,GAAAA,IAAA,EAAAC,GAAAD,KAAAC,CACA,KAAA,gBACA,IAAA,mBAIA,OAAAD,KAAAC,CACA,KAAA,kBACA,MAAAsE,IAAAI,QAAAlJ,KAAAuE,KAAAuE,GAAAI,QAAAlJ,KAAAwE,GAGA,GAAA2E,GAAA,mBAAAF,CACA,KAAAE,EAAA,CACA,GAAA,gBAAA5E,IAAA,gBAAAC,GAAA,OAAA,CAGA,IAAA4E,GAAA7E,EAAAR,YAAAsF,EAAA7E,EAAAT,WACA,IAAAqF,IAAAC,KAAApG,EAAAmG,IAAAA,YAAAA,IACAnG,EAAAoG,IAAAA,YAAAA,KACA,eAAA9E,IAAA,eAAAC,GACA,OAAA,EAQAuE,EAAAA,MACAC,EAAAA,KAEA,KADA,GAAAzM,GAAAwM,EAAAxM,OACAA,KAGA,GAAAwM,EAAAxM,KAAAgI,EAAA,MAAAyE,GAAAzM,KAAAiI,CAQA,IAJAuE,EAAAvM,KAAA+H,GACAyE,EAAAxM,KAAAgI,GAGA2E,EAAA,CAGA,GADA5M,EAAAgI,EAAAhI,OACAA,IAAAiI,EAAAjI,OAAA,OAAA,CAEA,MAAAA,KACA,IAAAkI,EAAAF,EAAAhI,GAAAiI,EAAAjI,GAAAwM,EAAAC,GAAA,OAAA,MAEA,CAEA,GAAAxK,GAAAF,EAAAH,OAAAG,KAAAiG,EAGA,IAFAhI,EAAA+B,EAAA/B,OAEA4B,OAAAG,KAAAkG,GAAAjI,SAAAA,EAAA,OAAA,CACA,MAAAA,KAGA,GADAiC,EAAAF,EAAA/B,GACAiI,EAAAhG,KAAAuB,KAAA0E,EAAAF,EAAA/F,GAAAgG,EAAAhG,GAAAuK,EAAAC,GAAA,OAAA,EAMA,MAFAD,GAAA1M,MACA2M,EAAA3M,OACA,EAGA,IAAA0D,IAAAT,GAAA,EAmHAgK,GAAA,WACA,QAAAC,GAAAC,EAAApJ,EAAAqJ,GAEA,GAAAC,GAAAF,EAAA5E,UACA+E,EAAAH,EAAAI,WAAAhF,UACAiF,EAAAJ,GAAAA,EAAAI,WAEA,KAAA,GAAAtE,KAAAnF,GACA,gBAAAmF,IAKAmE,EAAAnE,GAAA,kBAAAnF,GAAAmF,IAAAnF,EAAAmF,GAAAuE,cAAAD,GAAA,kBAAAF,GAAApE,GAkBAnF,EAAAmF,GAjBA,SAAAA,EAAA9E,EAAAsJ,GACA,MAAA,YACA,GAAAC,GAAA9K,KAAA+K,SAIA/K,MAAA+K,UAAAF,CAIA,IAAAG,GAAAzJ,EAAA/C,MAAAwB,KAAAhB,UAIA,OAFAgB,MAAA+K,UAAAD,EAEAE,IAEA3E,EAAAnF,EAAAmF,GAAAoE,EAAApE,IAIA,OAAAiE,GAGA,MAAA,SAAAF,GAAAlJ,EAAA+J,EAAAV,GAEA,GAAAK,GAAA1J,EAAA2D,WACA+F,KAAA3L,SACA2L,EAAA,WACA,GAAA5K,KAAAkL,KACA,MAAAlL,MAAAkL,KAAA1M,MAAAwB,KAAAhB,YAKA,IAAAmM,GAAAjK,EAAAiK,WAAA,GACAb,EAAA,GAAAc,UACA,mBAAAD,EAAA,+KAkCA,OAzBAb,GAAAM,aAAAA,EACAK,EAAAA,GAAAhM,OAEAqL,EAAA5E,UAAAzG,OAAAoM,OAAAJ,EAAAvF,WAGA4E,EAAA5E,UAAAb,YAAAyF,EACAA,EAAAI,WAAAO,EAGAX,EAAAgB,UAAAL,EAEAX,EAAAiB,UACAjB,EAAAiB,QAAA,SAAArK,EAAAqJ,GACA,MAAAF,GAAArK,KAAAkB,EAAAqJ,KAGAD,EAAAkB,UACAlB,EAAAkB,QAAA,SAAAtK,EAAAqJ,GACA,MAAAH,GAAAlJ,EAAAlB,KAAAuK,KAIAD,EAAAiB,QAAArK,EAAAqJ,GAEAD,MAgCAmB,GAAA,WAEA,QAAAC,MACA,MAAA,UAAA3M,EAAAmC,GACAwK,EAAAhG,UAAA3G,CACA,IAAA+L,GAAA,GAAAY,EAKA,OAJAA,GAAAhG,UAAA,KACAxE,GACAgH,EAAA4C,EAAA5J,GAEA4J,MAuWArL,IA7OA,WACA,GAAA4F,EAEA,OAAA,UAAApB,GAIA,MAHAoB,KAAAA,EAAAsG,SAAAC,cAAA,MACAvG,EAAAlB,KAAAF,EAEAoB,EAAAlB,SAsOA,WACA,GAAA0H,KAOA,OAJA1I,GAAA,gEAAAlG,MAAA,KAAA,SAAAG,EAAAiJ,GACAwF,EAAA,WAAAxF,EAAA,KAAAA,EAAAxD,gBAGA,SAAA9D,GACA,MAAA,OAAAA,EAAAyI,OAAAzI,GACA8M,EAAA5C,GAAAnI,KAAA/B,KAAA,cA4JAoK,GAAA,EAYAI,GAAA,EAQAuC,GAAA,WACA,GAAAC,GAAA/L,KACAgM,EAAAhM,KAAAiM,QAAA,GAAAC,SAAA,SAAAC,EAAAC,GACAL,EAAAM,SAAAF,EACAJ,EAAAO,QAAAF,GAGAlE,GAAA8D,GACAO,KAAA,SAAAC,EAAAC,EAAAC,GAIA,MAHAA,IACA1M,KAAA2M,SAAAD,GAEAR,QAAAxG,UAAA6G,KAAAzL,KAAAd,KAAAwM,EAAAC,IAEAG,KAAA,SAAAC,GACA,MAAAX,SAAAxG,UAAA6G,KAAAzL,KAAAd,KAAA6M,IAEAC,KAAA,SAAAD,GACA,MAAAX,SAAAxG,UAAAwG,SAAApL,KAAAd,KAAA6M,IAEAF,SAAA,SAAAE,GAEA,MADAd,GAAArC,IAAApM,KAAAuP,GACA7M,QAKAA,KAAA0J,OAEA1J,KAAAmM,QAAAL,GAAApG,UAAAyG,QAAAY,KAAA/M,MACAA,KAAAoM,OAAAN,GAAApG,UAAA0G,OAAAW,KAAA/M,MACAA,KAAA2M,SAAAb,GAAApG,UAAAiH,SAAAI,KAAA/M,MAIA8L,IAAApG,UAAAyG,QAAA,SAAApJ,GAEA,MADA/C,MAAAqM,SAAAvL,KAAAd,KAAAiM,QAAAlJ,GACA/C,MAGA8L,GAAApG,UAAAiH,SAAA,SAAA5J,GACA,IACA,MAAA/C,MAAA0J,IAAAnL,QAAA,SAAAyO,GACA,MAAAA,GAAAjK,KAEA,MAAAkK,GACAjN,KAAAoM,OAAAa,GAEA,MAAAjN,OAGA8L,GAAApG,UAAA0G,OAAA,SAAAc,GAEA,MADAlN,MAAAsM,QAAAxL,KAAAd,KAAAiM,QAAAiB,GACAlN,MAIA8L,GAAApG,UAAA6G,KAAA,SAAAnJ,EAAA+J,EAAAC,GACA,MAAApN,MAAAiM,QAAAM,KAAAnJ,EAAA+J,EAAAC,IAGAtB,GAAAuB,IAAA,SAAA9K,GACA,MAAA2J,SAAAmB,IAAA9K,IAGAuJ,GAAAwB,MAAA,SAAA/K,GACA,MAAA2J,SAAAqB,KAAAhL,IAGAuJ,GAAA0B,KAAA,SAAAC,EAAArK,EAAA+J,EAAAC,GACA,GAAAM,GAAAD,GAAA,kBAAAA,GAAAlB,KACAoB,EAAAD,GAAAD,YAAAvB,QAEA,KAAAwB,EACA,MAAA1O,WAAA3B,OAAA,EACA+F,EAAAA,EAAAqK,GAAAA,GAEA,GAAA3B,KAAAK,QAAAsB,EAEA,KAAAE,EAAA,CACA,GAAAC,GAAA,GAAA9B,IAAA2B,EAAAI,OACAJ,GAAAlB,KAAAqB,EAAAzB,QAAAyB,EAAAxB,OAAAwB,EAAAjB,UACAc,EAAAG,EAAA3B,QAGA,MAAA7I,IAAA+J,GAAAC,EACAK,EAAAlB,KAAAnJ,EAAA+J,EAAAC,GAEAK,GAGA3B,GAAAM,OAAA,SAAA0B,GACA,GAAAC,GAAA,GAAAjC,GAEA,OADAiC,GAAA3B,OAAA0B,GACAC,EAAA9B,SAGAH,GAAAK,QAAA,SAAA6B,GACA,GAAAD,GAAA,GAAAjC,GAEA,OADAiC,GAAA5B,QAAA6B,GACAD,EAAA9B,SAGAH,GAAAmC,UAAAnC,GAAAK,OAEA,IAAA+B,IAAA9D,IACA+D,GAAA,SAAAC,EAAAC,EAAAL,EAAA5K,EAAAkL,EAAAC,GACA,GAAAxC,GAAA/L,KACAwO,EAAAxO,KAAAwO,OAAAxO,KAAAwO,QAEA,OAAAnM,GAAA+L,IACAE,EAAAlL,EACAD,EAAAiL,EAAA,SAAA3O,EAAA8B,GACAwK,EAAAoC,GAAA1O,EAAA4O,EAAAL,EAAAzM,EAAA+M,EAAAC,KAEAvO,OAGA8E,EAAAuJ,IAAAtK,EAAAX,KACAkL,EAAAlL,EACAA,EAAA4K,EACAA,EAAAK,EACAA,EAAAxN,IAGAkD,EAAAiK,KACAM,EAAAlL,EACAA,EAAA4K,EACAA,EAAA,MAGAlJ,EAAAsJ,KACAA,EAAAA,EAAAnR,MAAA,OAGAmR,EAAA7P,QAAA,SAAA8H,IACAmI,EAAAnI,KAAAmI,EAAAnI,QAAA/I,MACAiE,GAAA6B,EACAiL,SAAAA,EACAL,KAAAA,EACAM,IAAAA,EACAC,IAAAA,MAIAvO,OAGAuO,IAAA,SAAAH,EAAAC,EAAAL,EAAA5K,EAAAkL,GACA,MAAAtO,MAAAmO,GAAAC,EAAAC,EAAAL,EAAA5K,EAAAkL,EAAA,IAGAG,QAAA,SAAAtN,GACA,IAAAnB,KAAAwO,KACA,MAAAxO,KAGA,IAAA+L,GAAA/L,IAEA8E,GAAA3D,KACAA,EAAA,GAAAC,aAAAD,IAGAA,EAAAjB,OAAAF,IAEA,IAAA1B,GAAAsI,GAAA9F,KAAA9B,UAAA,EAoCA,OAlCAV,GADAqH,EAAArH,IACA6C,GAAAwF,OAAArI,IAEA6C,IAEAA,EAAA1B,MAAA0B,EAAAkF,KAAA,OAAA9H,QAAA,SAAAmQ,GACA,GAAAC,GAAA5C,EAAAyC,KAAAE,EACA,IAAAC,EAAA,CAOA,IAAA,GAHAC,GAAAD,EAAAtR,OACAwR,GAAA,EAEAzR,EAAA,EAAAA,EAAAwR,EAAAxR,IAAA,CACA,GAAA4P,GAAA2B,EAAAvR,EACA+D,GAAA6M,KACAhB,EAAAgB,OACA7M,EAAA6M,KAAA9F,KAAA8E,EAAAgB,KAAA7M,EAAA6M,OAGA7M,EAAA6M,KAAAhB,EAAAgB,MAAA,KAEAhB,EAAAzL,GAAA/C,MAAAwO,EAAAsB,IAAAhQ,GACA0O,EAAAuB,MACAI,EAAAvR,GAAA,KACAyR,GAAA,GAIAA,IACA9C,EAAAyC,KAAAE,GAAApM,EAAAqM,OAIA3O,MAGA8O,SAAA,SAAAC,GACA,GAAAC,IAAAhP,KAAAwO,OAAAxO,KAAAiP,aAAAF,MACA,OAAAC,GAAA3R,OAAA,GAGA6R,SAAA,SAAAnQ,EAAAgQ,EAAA3L,EAAAmL,GACA,IAAAxP,EACA,MAAAiB,KAIA8E,GAAA1B,KACAA,EAAApD,KAAAoD,IAGAmL,EACAxP,EAAAwP,IAAAQ,EAAA3L,EAAApD,MAEAjB,EAAAoP,GAAAY,EAAA3L,EAAApD,KAOA,KAAA,GAFAmP,GADAC,EAAApP,KAAAqP,eAAArP,KAAAqP,iBAGAjS,EAAA,EAAAA,EAAAgS,EAAA/R,OAAAD,IACA,GAAAgS,EAAAhS,GAAA2B,KAAAA,EAAA,CACAoQ,EAAAC,EAAAhS,EACA,OAGA+R,GACAC,EAAA9R,KACA6R,GACApQ,IAAAA,EACAqP,WAIA,IAAAkB,GAAAH,EAAAf,OACAmB,EAAAD,EAAAP,GAAAO,EAAAP,MAKA,OAJAQ,GAAA5K,QAAAvB,QACAmM,EAAAjS,KAAA8F,GAGApD,MAGAwP,aAAA,SAAAzQ,EAAAgQ,EAAA3L,GACA,MAAApD,MAAAkP,SAAAnQ,EAAAgQ,EAAA3L,EAAA,IAGAqM,IAAA,SAAArB,EAAAhL,GACA,GAAAoL,GAAAxO,KAAAwO,OAAAxO,KAAAwO,QAuBA,OAtBA1J,GAAAsJ,KACAA,EAAAA,EAAAnR,MAAA,OAGAmR,EAAA7P,QAAA,SAAA8H,GACA,GAAAqJ,GAAAlB,EAAAnI,GACAsJ,IAEA,IAAAD,GAAAtM,EACA,IAAA,GAAAhG,GAAA,EAAAwR,EAAAc,EAAArS,OAAAD,EAAAwR,EAAAxR,IACAsS,EAAAtS,GAAAmE,KAAA6B,GAAAsM,EAAAtS,GAAAmE,GAAAO,IAAAsB,GACAuM,EAAArS,KAAAoS,EAAAtS,GAIAuS,GAAAtS,OACAmR,EAAAnI,GAAAsJ,QAEAnB,GAAAnI,KAIArG,MAEA4P,WAAA,SAAA7Q,EAAAgQ,EAAA3L,GACA,GAAAgM,GAAApP,KAAAqP,YACA,KAAAD,EACA,MAAApP,KAEA,KAAA,GAAA5C,GAAA,EAAAA,EAAAgS,EAAA/R,OAAAD,IAAA,CACA,GAAA+R,GAAAC,EAAAhS,EAEA,KAAA2B,GAAAA,GAAAoQ,EAAApQ,IAAA,CAIA,GAAAuQ,GAAAH,EAAAf,MACA,KAAA,GAAAM,KAAAY,GACA,IAAAP,GAAAA,GAAAL,EAAA,CAIAa,eAAAD,EAAAZ,EAEA,KAAA,GAAAjL,GAAA,EAAAA,EAAA8L,eAAAlS,OAAAoG,IACAL,GAAAA,GAAAmM,eAAAnS,KACA+R,EAAApQ,IAAA0Q,IAAAf,EAAAa,eAAAnS,GAAA4C,MACAuP,eAAAnS,GAAA,KAIAmS,gBAAAD,EAAAZ,GAAApM,EAAAiN,gBAEAnJ,EAAAmJ,kBACAD,EAAAZ,GAAA,MAKAtI,EAAAkJ,KACAF,EAAAhS,GAAA,OASA,MALAgS,GAAApP,KAAAqP,aAAA/M,EAAA8M,GACAhJ,EAAAgJ,KACApP,KAAAqP,aAAA,MAGArP,QAMA6P,GAAA3B,GAAA1C,SACAN,KAAA,SAAA4E,EAAAvF,GACA,GAAAhE,GAAAuJ,KACAvF,KAAAA,MACAvK,KAAA+P,IAAA1G,EAAArJ,KAAAgQ,WACAhQ,KAAA8P,cACAvF,EAAA0F,aAAAjQ,KAAAiQ,WAAA1F,EAAA0F,YACA1F,EAAArH,QAAAqD,EAAAvG,KAAAkD,MAAAqD,EAAAgE,OACA,IAAAzL,GAAA0E,EAAAxD,KAAA,WACAuG,GAAA2B,KAAApJ,EAAAyH,GACAvG,KAAAkQ,IAAA3J,EAAAgE,GACAvK,KAAAmQ,YAIAA,QAAA,KAGAC,gBAAA,KAIAC,YAAA,KAIAL,UAAA,IAIAM,OAAA,SAAA/F,GACA,MAAAvI,GAAAhC,KAAA8P,aAKAS,IAAA,SAAAC,GACA,MAAAxQ,MAAA8P,WAAAU,IAKAhM,IAAA,SAAAgM,GACA,MAAA,OAAAxQ,KAAAuQ,IAAAC,IAMAN,IAAA,SAAA5Q,EAAAmR,EAAAlG,GACA,GAAA,MAAAjL,EAAA,MAAAU,KAGA,IAAAuG,EAWA,IAVA,gBAAAjH,IACAiH,EAAAjH,EACAiL,EAAAkG,IAEAlK,MAAAjH,GAAAmR,EAGAlG,IAAAA,OAGAvK,KAAA0Q,UAAAnK,EAAAgE,GAAA,OAAA,CAGA,IAAAoG,GAAApG,EAAAoG,MACAC,EAAArG,EAAAqG,OACAC,KACAC,EAAA9Q,KAAA+Q,SACA/Q,MAAA+Q,WAAA,EAEAD,IACA9Q,KAAAgR,oBAAAhP,EAAAhC,KAAA8P,YACA9P,KAAAmQ,WAGA,IAAAc,GAAAjR,KAAA8P,WACAK,EAAAnQ,KAAAmQ,QACAe,EAAAlR,KAAAgR,mBAGA,KAAA,GAAAR,KAAAjK,GACAkK,EAAAlK,EAAAiK,GACApL,EAAA6L,EAAAT,GAAAC,IAAAI,EAAAvT,KAAAkT,GACApL,EAAA8L,EAAAV,GAAAC,SAGAN,GAAAK,GAFAL,EAAAK,GAAAC,EAIAE,QAAAM,GAAAT,GAAAS,EAAAT,GAAAC,CAOA,IAHAzQ,KAAAqQ,cAAA9J,KAAAvG,KAAAjC,GAAAiC,KAAAuQ,IAAAvQ,KAAAqQ,eAGAO,EAAA,CACAC,EAAAxT,SAAA2C,KAAAmR,SAAA5G,EACA,KAAA,GAAAnN,GAAA,EAAAA,EAAAyT,EAAAxT,OAAAD,IACA4C,KAAAyO,QAAA,UAAAoC,EAAAzT,GAAA4C,KAAAiR,EAAAJ,EAAAzT,IAAAmN,GAMA,GAAAuG,EAAA,MAAA9Q,KACA,KAAA4Q,EACA,KAAA5Q,KAAAmR,UACA5G,EAAAvK,KAAAmR,SACAnR,KAAAmR,UAAA,EACAnR,KAAAyO,QAAA,SAAAzO,KAAAuK,EAKA,OAFAvK,MAAAmR,UAAA,EACAnR,KAAA+Q,WAAA,EACA/Q,MAKA2Q,MAAA,SAAAH,EAAAjG,GACA,MAAAvK,MAAAkQ,IAAAM,EAAA,OAAAtI,KAAAqC,GAAAoG,OAAA,MAIAS,MAAA,SAAA7G,GACA,GAAAhE,KACA,KAAA,GAAAjH,KAAAU,MAAA8P,WAAAvJ,EAAAjH,GAAA,MACA,OAAAU,MAAAkQ,IAAA3J,EAAA2B,KAAAqC,GAAAoG,OAAA,MAKAU,WAAA,SAAAb,GACA,MAAA,OAAAA,GAAApK,EAAApG,KAAAmQ,SACAnQ,KAAAmQ,QAAAK,KAAA3P,IASAyQ,kBAAA,SAAAC,GACA,IAAAA,EAAA,QAAAvR,KAAAqR,cAAArP,EAAAhC,KAAAmQ,QACA,IAAAqB,GAAAxR,KAAA+Q,UAAA/Q,KAAAgR,oBAAAhR,KAAA8P,WACAK,IACA,KAAA,GAAAK,KAAAe,GAAA,CACA,GAAAd,GAAAc,EAAAf,EACApL,GAAAoM,EAAAhB,GAAAC,KACAN,EAAAK,GAAAC,GAEA,OAAArK,EAAA+J,IAAAA,GAKAtQ,SAAA,SAAA2Q,GACA,MAAA,OAAAA,GAAAxQ,KAAAgR,oBACAhR,KAAAgR,oBAAAR,GADA,MAMAiB,mBAAA,WACA,MAAAzP,GAAAhC,KAAAgR,sBAIAhP,MAAA,WACA,MAAA,IAAAhC,MAAA6E,YAAA7E,KAAA8P,aAIA4B,MAAA,WACA,OAAA1R,KAAAwE,IAAAxE,KAAAqQ,cAIAsB,QAAA,SAAApH,GACA,MAAAvK,MAAA0Q,aAAAxI,KAAAqC,GAAAqH,UAAA,MAKAlB,UAAA,SAAAnK,EAAAgE,GACA,IAAAA,EAAAqH,WAAA5R,KAAA4R,SAAA,OAAA,CACArL,GAAA2B,KAAAlI,KAAA8P,WAAAvJ,EACA,IAAA0G,GAAAjN,KAAAoQ,gBAAApQ,KAAA4R,SAAArL,EAAAgE,IAAA,IACA,QAAA0C,IACAjN,KAAAyO,QAAA,UAAAzO,KAAAiN,EAAA/E,EAAAqC,GAAA6F,gBAAAnD,MACA,KA0JA,OAlJA/E,GAAAsB,GACA7I,MAAAN,EAAA,SAEAU,QAAAA,EAEAjB,OAAAO,EAAA,UAEAI,OAAAJ,EAAA,UAEAwR,UAAA,SAAAlP,GACA,MAAAA,GAAAC,QAAA,cAAA,SAAAyC,GACA,MAAAA,GAAAyM,cAAAlP,QAAA,IAAA,OAIAZ,MAAAA,EAEAM,QAAAA,EAEArB,YAAAA,EAEAyB,UAAAA,EAEApB,SAAAA,EAEAxC,SAAAF,EAAAmC,GAAA,GAEA0K,SAAAA,GAEAK,SAAAA,GAEAoC,QAAAA,GAEApH,MAAAA,EAEAhE,iBAAAA,EAEAK,KAAAA,EAEAG,QAAAA,EAEAI,QAAAA,EAEAM,eAAAA,EAEAQ,IAAAA,EAEAE,QAAAA,EAEAtC,QAAAA,EAEAmB,YAAAA,EAEAyB,UAAAA,EAEAW,UAAA,SAAAoD,GACA,MAAAA,KAAAlI,IAGAoE,WAAAA,EAEAmB,cAAAA,EAEAhB,QAAAA,EAEArB,WAAAA,EAEAgB,WAAAA,EAEAuB,QAAAA,EAEAT,SAAAA,EAEA7E,SAAAA,EAEAqB,cAAAA,EAEAyC,SAAAA,EAEAgB,aAAAA,EAEAN,SAAAA,EAEApG,KAAAA,EAEA2S,MAAA,SAAA7Q,EAAA+J,EAAAV,GACA,MAAAH,IAAAlJ,EAAA+J,EAAAV,IAGAyH,WAAA,SAAArP,GACA,MAAAA,GAAAsP,OAAA,GAAApP,cAAAF,EAAAiE,MAAA,IAGAJ,UAAAA,EAEA1I,IAAAA,EAEAoK,MAAAA,EAGAjB,MAAAA,EAEAQ,WAAAA,EAEAjE,OAAAA,EAEA0O,WAAA,WACA,OAAA,GAGAC,YAAA,WACA,OAAA,GAGA9Q,UAAAA,EAEA+Q,eAAA,SAAArP,GACA,MAAAE,MAAAoP,UAAAtP,IAGA8M,SAAAA,GAEAxH,WAAAA,EAEAhB,QAAAA,EAEAE,KAAAA,EAEA9H,KAAAA,GAEAyJ,IAAAA,EAEAE,KAAAA,EAEAC,SAAAA,EAEAiJ,WAAA,SAAA3P,GACA,MAAAA,GAAAsP,OAAA,GAAAH,cAAAnP,EAAAiE,MAAA,IAGA2L,IAAA,mBAAA9T,QAAAA,OAAA8T,KAAA9T,OAAA+T,UAAA,KAEA3Q,OAAAA,IAIAlD,EAAA6K,MAAAA,IAEAhM,EAAA,uBACA,uBACA,SAAAgM,GACA,MAAAA,KAGAhM,EAAA,wBACA,YACA,WACA,SAAAmB,EAAA6K,GAMA,QAAAiJ,GAAApM,EAAAtD,GACA,MAAA,gBAAAA,IAAA2P,EAAAhQ,EAAA2D,IAAAtD,EAAAA,EAAA,KAgBA,QAAA4P,GAAAtM,GACA,MAAAA,KAAAuM,GACAA,EAAAvM,GAAAuM,EAAAvM,GAAA,GAAAwM,QAAA,UAAAxM,EAAA,WAIA,QAAA0D,GAAA+I,EAAA/P,GACA,GAAAgP,GAAAe,EAAA/I,WAAA,GACAgJ,EAAAhB,GAAAlR,SAAAkR,EAAAiB,OAEA,OAAAnS,UAAAkC,EAAAgQ,EAAAhB,EAAAiB,QAAAjB,OACAgB,EAAAhB,EAAAiB,QAAAjQ,EAAA+P,EAAA/I,UAAAhH,GAMA,QAAAkQ,GAAAC,GACA,GAAAC,GAAAC,CASA,OARAC,GAAAH,KACAC,EAAAxH,SAAAC,cAAAsH,GACAvH,SAAA2H,KAAAC,YAAAJ,GACAC,EAAAI,iBAAAL,EAAA,IAAAM,iBAAA,WACAN,EAAAO,WAAAC,YAAAR,GACA,QAAAC,IAAAA,EAAA,SACAC,EAAAH,GAAAE,GAEAC,EAAAH,GAGA,QAAAU,GAAAC,GAKA,MAJAC,GAAAC,IAAAF,EAAA,UAAA,IACA,QAAAC,EAAAC,IAAAF,EAAA,YACAC,EAAAC,IAAAF,EAAA,UAAAZ,EAAAY,EAAAX,WAEAlT,KAGA,QAAAgU,GAAAH,GACA,MAAA,QAAAC,EAAAC,IAAAF,EAAA,YAAA,GAAAC,EAAAC,IAAAF,EAAA,WAGA,QAAAI,GAAAJ,GAEA,MADAC,GAAAC,IAAAF,EAAA,UAAA,QACA7T,KAGA,QAAAkU,GAAAL,EAAAxN,GACA,IAAAA,EAAA,MAAArG,KACA,IACAmU,GADAC,EAAArK,EAAA8J,EAgBA,OAbAM,GADA3K,EAAA1E,SAAAuB,GACAA,EAAApJ,MAAA,QAEAoJ,EAEA8N,EAAA5V,QAAA,SAAAwT,GACA,GAAAsC,GAAA1B,EAAAZ,EACAqC,GAAA1L,MAAA2L,KACAD,IAAAA,EAAA,IAAA,IAAArC,KAIAhI,EAAA8J,EAAAO,GAEApU,KAGA,QAAA+T,GAAAF,EAAAS,EAAAvR,GACA,GAAA/D,UAAA3B,OAAA,EAAA,CACA,GAAAkX,GACAA,EAAAf,iBAAAK,EAAA,GACA,IAAArK,EAAA1E,SAAAwP,GACA,MAAAT,GAAAW,MAAA3C,EAAAyC,KAAAC,EAAAd,iBAAAa,EACA,IAAA9K,EAAAjG,YAAA+Q,GAAA,CACA,GAAApT,KAIA,OAHA3C,GAAAuC,KAAAwT,EAAA,SAAAlM,GACAlH,EAAAkH,GAAAyL,EAAAW,MAAA3C,EAAAzJ,KAAAmM,EAAAd,iBAAArL,KAEAlH,GAIA,GAAA6S,GAAA,EACA,IAAA,gBAAA,GACAhR,GAAA,IAAAA,EAGAgR,EAAArR,EAAA4R,GAAA,IAAA7B,EAAA6B,EAAAvR,GAFA8Q,EAAAW,MAAAC,eAAA/R,EAAA4R,QAKA,KAAAhV,MAAAgV,GACAzT,SAAAyT,EAAAhV,OAGAgV,EAAAhV,MAAA,IAAAgV,EAAAhV,KAGAyU,GAAArR,EAAApD,KAAA,IAAAmT,EAAAnT,IAAAgV,EAAAhV,MAAA,IAFAuU,EAAAW,MAAAC,eAAA/R,EAAApD,MAQA,OADAuU,GAAAW,MAAAE,SAAA,IAAAX,EACA/T,KAIA,QAAA2U,GAAAd,EAAAxN,GACA,GAAAgO,GAAA1B,EAAAtM,EACA,OAAAwN,GAAA9J,WAAA8J,EAAA9J,UAAArB,MAAA2L,GAGA,QAAAO,GAAAf,EAAAxN,GACA,GAAAA,EAAA,CACA,GACA8N,GADAC,EAAArK,EAAA8J,EAIAM,GADA3K,EAAA1E,SAAAuB,GACAA,EAAApJ,MAAA,QAEAoJ,EAGA8N,EAAA5V,QAAA,SAAAwT,GACA,GAAAsC,GAAA1B,EAAAZ,EACAqC,GAAA1L,MAAA2L,KACAD,EAAAA,EAAAxR,QAAAyR,EAAA,QAIAtK,EAAA8J,EAAAO,EAAA7M,YAEAwC,GAAA8J,EAAA,GAGA,OAAA7T,MAGA,QAAA6U,GAAAhB,EAAAxN,EAAAmH,GACA,GAAAzB,GAAA/L,IAYA,OAXAqG,GAAApJ,MAAA,QAAAsB,QAAA,SAAAwT,GACAlR,SAAA2M,IACAA,GAAAzB,EAAA4I,SAAAd,EAAA9B,IAEAvE,EACAzB,EAAAmI,SAAAL,EAAA9B,GAEAhG,EAAA6I,YAAAf,EAAA9B,KAIAhG,EA9KA,GACAxN,IADAwD,MAAA2D,UAAAoP,MACA/S,MAAA2D,UAAAnH,SACAsT,EAAArI,EAAAqI,UACAnP,EAAA8G,EAAA9G,UAMAgQ,GACAqC,eAAA,EACAC,QAAA,EACAC,cAAA,EACAC,cAAA,EACAC,QAAA,EACAC,UAAA,EACAC,KAAA,GAEAzC,KAmBAS,KA4IAS,EAAA,WACA,MAAAA,GAoBA,OAjBAtK,GAAAtB,MAAA4L,GACAwB,YAAA,EACAC,YAIArB,SAAAA,EACAnK,UAAAA,EACAgK,IAAAA,EACAY,SAAAA,EACAV,KAAAA,EACAD,YAAAA,EACAY,YAAAA,EACAhB,KAAAA,EACAiB,YAAAA,IAGAlW,EAAAmV,OAAAA,IAGAtW,EAAA,uBACA,YACA,UACA,YACA,SAAAmB,EAAA6K,EAAAsK,GAqBA,QAAA0B,GAAAC,EAAAC,GASA,MARAlM,GAAAjG,YAAAkS,KACAA,GAAAA,IAEAC,IACAD,EAAA3X,EAAAgD,KAAA2U,EAAA,SAAA3C,GACA,MAAAA,GAAA6C,WAAA,MAGAnM,EAAAlG,QAAAmS,GAGA,QAAAvC,GAAAW,EAAA+B,GACA,GAAAvP,GAAAwN,EAAAX,UAAAW,EAAAX,SAAArQ,aACA,OAAAhC,UAAA+U,EACAvP,IAAAuP,EAAA/S,cAEAwD,EAGA,QAAAwP,GAAAhC,GACA,MAAAX,GAAAW,EAAA,UACAA,EAAAiC,gBAEAjC,EAAAkC,WAGA,QAAAC,GAAAlD,EAAAkD,GACA,GAAAnV,SAAAmV,EACA,MAAAlD,GAAAmD,SAIA,IAFAjW,KAAAkW,MAAApD,GACAkD,EAAAA,GAAA,GACAxM,EAAA1E,SAAAkR,IAAAxM,EAAA3D,SAAAmQ,GACAlD,EAAAmD,UAAAD,MACA,IAAAxM,EAAAjG,YAAAyS,GACA,IAAA,GAAA5Y,GAAA,EAAAA,EAAA4Y,EAAA3Y,OAAAD,IACA0V,EAAAS,YAAAyC,EAAA5Y,QAGA0V,GAAAS,YAAAyC,GAKA,QAAAhU,GAAA8Q,EAAAjL,GACA,GACA7F,GADA+J,EAAA/L,IAIA,QAAAmW,GAAA,IAAArD,EAAA5N,UAAA2C,EACAiL,EAAA6C,UAAA9N,GAIAA,EAAA,QACA7F,EAAA2J,SAAAC,cAAAkH,EAAAI,UAGA/P,KAAA4I,EAAAqK,WAAAtD,GAAA,SAAAtC,GACAzE,EAAAsK,UAAArU,EAAAwO,EAAA0C,SAAAnH,EAAAuK,UAAAxD,EAAAtC,EAAA0C,aAGAlR,GAIA,QAAA4J,GAAA2K,EAAArV,EAAA+J,GACA,GAAA6H,GAAAnH,SAAAC,cAAA2K,EACA,IAAArV,EACA,IAAA,GAAAmF,KAAAnF,GACA4R,EAAA0D,aAAAnQ,EAAAnF,EAAAmF,GAMA,OAHA4E,IACAwL,EAAAxL,EAAA6H,GAEAA,EAGA,QAAA4D,GAAAV,GAGA,GADAA,EAAAxM,EAAAjC,KAAAyO,GACAW,EAAA3T,KAAAgT,GACA,OAAApK,EAAAiH,OAAA+D,IAGA,IAAAvQ,GAAAwQ,EAAA7T,KAAAgT,IAAAnD,OAAA+D,EACAvQ,KAAAyQ,KACAzQ,EAAA,IAEA,IAAA0Q,GAAAD,EAAAzQ,EAQA,OAPA0Q,GAAAd,UAAA,GAAAD,EACAgB,IAAApQ,EAAA9F,KAAAiW,EAAAhB,YAEAiB,IAAAzY,QAAA,SAAAuU,GACAiE,EAAApD,YAAAb,KAGAkE,IAGA,QAAAC,GAAAnE,EAAAoE,GACA,MAAAC,GAAAD,EAAApE,GAGA,QAAAsE,GAAAC,GACA,MAAA1L,UAAAyL,eAAAC,GAGA,QAAAC,KACA,MAAA3L,UAGA,QAAAuK,GAAApD,GACA,KAAAA,EAAAyE,iBAAA,CACA,GAAAL,GAAApE,EAAA0E,UACA1E,GAAAa,YAAAuD,GAEA,MAAAlX,MAGA,QAAAmX,GAAArE,EAAA7H,EAAAwM,GACA,GAAAA,EACA,MAAA3E,GAAAY,aAAAzI,CAEA,IAAAU,SAAA+L,gBAAAT,SACA,MAAAhM,GAAAgM,SAAAnE,EAEA,MAAAA,GAAA,CACA,GAAA7H,IAAA6H,EACA,OAAA,CAGAA,GAAAA,EAAAY,WAGA,OAAA,EAGA,QAAAiE,GAAA7E,GACA,MAAA,OAAAA,GAAAA,EAAA5N,UAAA4N,EAAA3N,cAGA,QAAAyS,GAAA/D,GACA,MAAAA,GAIA,GAAAA,EAAA3O,SACA2O,EAGAA,EAAAgE,cAPAlM,SAUA,QAAAmM,GAAAjE,GACA,GAAAyD,GAAAM,EAAA/D,EACA,OAAAyD,GAAAS,aAAAT,EAAAU,aAGA,QAAArX,GAAAmS,EAAAmF,EAAAvC,GACA,GAAAwC,GAAApF,EACA7H,EAAAiN,EAAAxE,UACA,IAAAzI,EAIA,IAAA,GAHAwK,GAAAD,EAAAyC,EAAAvC,GACAwC,EAAAA,EAAAC,YAEA/a,EAAA,EAAAA,EAAAqY,EAAApY,OAAAD,IACA8a,EACAjN,EAAAmN,aAAA3C,EAAArY,GAAA8a,GAEAjN,EAAAsI,YAAAkC,EAAArY,GAIA,OAAA4C,MAGA,QAAAS,GAAAqS,EAAAmF,EAAAvC,GACA,GAAAwC,GAAApF,EACA7H,EAAAiN,EAAAxE,UACA,IAAAzI,EAEA,IAAA,GADAwK,GAAAD,EAAAyC,EAAAvC,GACAtY,EAAA,EAAAA,EAAAqY,EAAApY,OAAAD,IACA6N,EAAAmN,aAAA3C,EAAArY,GAAA8a,EAGA,OAAAlY,MAGA,QAAAqY,GAAAvF,EAAAmF,EAAAvC,GAIA,IAAA,GAHAhC,GAAAZ,EACAoF,EAAAxE,EAAA8D,WACA/B,EAAAD,EAAAyC,EAAAvC,GACAtY,EAAA,EAAAA,EAAAqY,EAAApY,OAAAD,IACA8a,EACAxE,EAAA0E,aAAA3C,EAAArY,GAAA8a,GAEAxE,EAAAH,YAAAkC,EAAArY,GAGA,OAAA4C,MAGA,QAAAyW,GAAA3D,EAAAmF,EAAAvC,GAGA,IAAA,GAFAhC,GAAAZ,EACA2C,EAAAD,EAAAyC,EAAAvC,GACAtY,EAAA,EAAAA,EAAAqY,EAAApY,OAAAD,IACAsW,EAAAH,YAAAkC,EAAArY,GAEA,OAAA4C,MAGA,QAAAsY,GAAAzE,EAAAxP,GACA,GAAAkU,GAAA3M,EAAA,MAAAvH,EAWA,OAVAyP,GAAAC,IAAAwE,GACAC,SAAA,WACAC,IAAA,EACAC,KAAA,EACAC,MAAA,OACAC,OAAA,OACAC,OAAA,WACA1D,QAAA,KAEAtB,EAAAN,YAAAgF,GACAA,EAMA,QAAAtY,GAAA6S,GACA,GAAAA,GAAAA,EAAAY,WACA,IACAZ,EAAAY,WAAAC,YAAAb,GACA,MAAA3R,GACA2X,QAAAC,KAAA,8BAAA5X,GAGA,MAAAnB,MAGA,QAAA4C,GAAAkQ,EAAAkG,GAEA,MADAA,GAAAtF,WAAAuF,aAAAnG,EAAAkG,GACAhZ,KAGA,QAAAkZ,GAAArF,EAAAxP,GACAA,EAAAA,KACA,IAKA8U,GALApN,EAAA/L,KACAqX,EAAAhT,EAAAgT,KACA7C,EAAAnQ,EAAAmQ,MACA4E,EAAA/U,EAAA+U,KACAhW,EAAAiB,EAAAjB,SAEAiW,EAAArZ,KAAA4L,cAAA,OACA7B,UAAA1F,EAAA0F,WAAA,WACAyK,MAAAA,IAKA0E,GAHAZ,EAAAe,GACAtP,UAAA,iBAEA/J,KAAA4L,cAAA,OACA7B,UAAA,WAEAuP,EAAAtZ,KAAAoX,eAAAC,GAAA,IACApX,EAAA,WACAkZ,IACAxX,aAAAwX,GACAA,EAAA,MAEAE,IACAtN,EAAA9L,OAAAoZ,GACAA,EAAA,OAGAE,EAAA,SAAAlV,GACAA,GAAAA,EAAAgT,MAAAgC,IACAC,EAAAE,UAAAnV,EAAAgT,MAGA6B,GAAA3F,YAAA+F,GACAD,EAAA9F,YAAA2F,GACArF,EAAAN,YAAA8F,EACA,IAAAI,GAAA,WACAxZ,IACAmD,GAAAA,IAMA,OAJAgW,KACAD,EAAAvX,WAAA6X,EAAAL,KAIAnZ,OAAAA,EACAsZ,OAAAA,GAIA,QAAAG,GAAA5G,EAAAvR,GACAA,EAAAuR,EACA,KAAA,GAAA1V,GAAA,EAAAwR,EAAAkE,EAAAiD,WAAA1Y,OAAAD,EAAAwR,EAAAxR,IACAsc,EAAA5G,EAAAiD,WAAA3Y,GAAAmE,EAEA,OAAAvB,MAGA,QAAA8I,GAAAgK,GAEA,IAAA,GADA0E,GAAA1E,EAAA0E,WACApa,EAAA0V,EAAA6G,SAAAtc,OAAA,EAAAD,EAAA,EAAAA,IACA,GAAAA,EAAA,EAAA,CACA,GAAA8Z,GAAApE,EAAA6G,SAAAvc,EACA0V,GAAAsF,aAAAlB,EAAAM,IAKA,QAAAoC,GAAA9G,EAAA+G,GACArQ,EAAA1E,SAAA+U,KACAA,EAAA7Z,KAAA0W,eAAAmD,GAAArC,YAEA1E,EAAAY,WAAA0E,aAAAyB,EAAA/G,GACA+G,EAAAtG,YAAAT,GAGA,QAAAgH,GAAAhH,EAAA+G,GACA,GAAA9D,GAAAnP,EAAA9F,KAAAgS,EAAAiD,WACAjD,GAAAS,YAAAsG,EACA,KAAA,GAAAzc,GAAA,EAAAA,EAAA2Y,EAAA1Y,OAAAD,IACAyc,EAAAtG,YAAAwC,EAAA3Y,GAEA,OAAA4C,MAGA,QAAA+Z,GAAAjH,GACA,GAAA7H,GAAA6H,EAAAY,UACA,IAAAzI,EAAA,CACA,GAAAjL,KAAA2X,MAAA1M,EAAAyI,YAAA,MACAzI,GAAAyI,WAAA0E,aAAAtF,EAAA7H,IAIA,QAAA+O,KACA,MAAAA,GA3WA,GAAA7D,KAAA8D,UAAAC,UAAAxR,MAAA,eAAAuR,UAAAC,UAAAxR,MAAA,SACAmO,EAAA,qBACAF,EAAA,6BACAwD,EAAAxO,SAAAC,cAAA,OACAwO,EAAAzO,SAAAC,cAAA,SACAyO,EAAA1O,SAAAC,cAAA,SACA0O,EAAA3O,SAAAC,cAAA,MACAkL,GACAyD,GAAAF,EACAG,MAAAJ,EACAK,MAAAL,EACAM,MAAAN,EACAO,GAAAL,EACAM,GAAAN,EACAO,IAAAV,GAGArc,EAAAiE,MAAA2D,UAAA5H,IACA8I,EAAA7E,MAAA2D,UAAAkB,KA+YA,OAnDA4C,GAAAtB,MAAA8R,GACAhY,MAAAA,EACA6T,SAAAA,EAEAjK,cAAAA,EAEA8K,eAAAA,EAEAO,SAAAA,EAEAG,eAAAA,EAEAE,IAAAA,EAEApB,MAAAA,EAEAF,KAAAA,EAEAmB,UAAAA,EAEAQ,MAAAA,EAEAC,SAAAA,EAEAE,YAAAA,EAEAnX,MAAAA,EAEAF,OAAAA,EAEA4X,QAAAA,EAEA5B,OAAAA,EAEAxW,OAAAA,EAEA2C,QAAAA,EAEAsW,MAAAA,EAEAQ,SAAAA,EAEA5Q,QAAAA,EAEA8Q,QAAAA,EAEAE,aAAAA,EAEAC,OAAAA,IAGApb,EAAAqb,MAAAA,IAGAxc,EAAA,sBACA,YACA,UACA,YACA,SAAAmB,EAAA6K,EAAAsK,GAIA,QAAAgH,GAAAjH,GAEA,IADA,GAAA5I,GAAA4I,EAAAiH,cAAAnP,SAAA2H,KACArI,IAAA8P,EAAA/X,KAAAiI,EAAAiI,WAAA,UAAAY,EAAAC,IAAA9I,EAAA,aACAA,EAAAA,EAAA6P,YAEA,OAAA7P,GAIA,QAAA+P,GAAAnH,GACA,GAAAoH,GAAAzH,iBAAAK,EACA,QACA6E,KAAAwC,EAAAD,EAAAE,gBAAAtH,GACA4E,IAAAyC,EAAAD,EAAAG,eAAAvH,GACAwH,MAAAH,EAAAD,EAAAK,iBAAAzH,GACA0H,OAAAL,EAAAD,EAAAO,kBAAA3H,IAKA,QAAA4H,GAAA5H,EAAA6H,GACA,GAAA7a,SAAA6a,EACA,MAAAX,GAAA/X,KAAA6Q,EAAAX,WAAAuF,IAAA,EAAAC,KAAA,GAAA7E,EAAA8H,uBAEA,IACA1Q,GAAA6P,EAAAjH,GAEA+H,EAAAH,EAAAxQ,GACA4Q,EAAAC,EAAAjI,GACAkI,EAAAf,EAAA/P,EAMA,OAJA+Q,GAAAnI,GACA4E,IAAAiD,EAAAjD,IAAAmD,EAAAnD,IAAAoD,EAAApD,IAAAsD,EAAAtD,IACAC,KAAAgD,EAAAhD,KAAAkD,EAAAlD,KAAAmD,EAAAnD,KAAAqD,EAAArD,OAEA1Y,KAIA,QAAAic,GAAApI,EAAA6H,GACA,MAAA7a,UAAA6a,EACA7H,EAAA8H,yBAEAF,EAAA5H,EAAA6H,GACAQ,EAAArI,EAAA6H,GACA1b,MAIA,QAAAmc,GAAAtI,EAAA9Q,GACA,MAAAlC,SAAAkC,EACAqZ,EAAAvI,GAAA+E,OAEAwD,EAAAvI,GACA+E,OAAA7V,IAKA,QAAAqZ,GAAAvI,EAAAwI,GACA,GAAAxb,QAAAwb,EACA,OACA1D,MAAA9E,EAAAyI,YACA1D,OAAA/E,EAAAsI,aAGA,IAAAI,GAAA,eAAAzI,EAAAC,IAAAF,EAAA,cACA3S,GACAyX,MAAA0D,EAAA1D,MACAC,OAAAyD,EAAAzD,OAEA,IAAA2D,EAUA,CACA,GAAAC,GAAAxB,EAAAnH,EAEAhT,UAAAK,EAAAyX,QACAzX,EAAAyX,MAAAzX,EAAAyX,MAAA6D,EAAA9D,KAAA8D,EAAAnB,OAGAxa,SAAAK,EAAA0X,SACA1X,EAAA0X,OAAA1X,EAAA0X,OAAA4D,EAAA/D,IAAA+D,EAAAjB,YAlBA,CACA,GAAAkB,GAAAC,EAAA7I,EAEAhT,UAAAK,EAAAyX,QACAzX,EAAAyX,MAAAzX,EAAAyX,MAAA8D,EAAA/D,KAAA+D,EAAApB,OAGAxa,SAAAK,EAAA0X,SACA1X,EAAA0X,OAAA1X,EAAA0X,OAAA6D,EAAAhE,IAAAgE,EAAAlB,QAeA,MADAzH,GAAAC,IAAAF,EAAA3S,GACAlB,KAQA,QAAAsc,GAAAzI,EAAA9Q,GACA,MAAAlC,SAAAkC,EACAqZ,EAAAvI,GAAA8E,OAEAyD,EAAAvI,GACA8E,MAAA5V,IAEA/C,MAIA,QAAA2c,GAAA9I,GACA,GAAA+I,GAAAR,EAAAvI,GACA4I,EAAAC,EAAA7I,EAQA,QACA6E,KAAA+D,EAAA/D,KACAD,IAAAgE,EAAAhE,IACAE,MAAAiE,EAAAjE,MAAA8D,EAAA/D,KAAA+D,EAAApB,MACAzC,OAAAgE,EAAAhE,OAAA6D,EAAAhE,IAAAgE,EAAAlB,QAIA,QAAAsB,GAAAvF,GACA,GAAAI,GAAAJ,EAAAI,gBACApE,EAAAgE,EAAAhE,KACAwJ,EAAAC,KAAAD,IACAE,EAAAF,EAAApF,EAAAsF,YAAA1J,EAAA0J,aACAV,EAAAQ,EAAApF,EAAA4E,YAAAhJ,EAAAgJ,aACAW,EAAAH,EAAApF,EAAAuF,YAAA3J,EAAA2J,aACAC,EAAAJ,EAAApF,EAAAwF,aAAA5J,EAAA4J,cACAf,EAAAW,EAAApF,EAAAyE,aAAA7I,EAAA6I,cACAgB,EAAAL,EAAApF,EAAAyF,aAAA7J,EAAA6J,aAEA,QACAxE,MAAAqE,EAAAC,EAAAX,EAAAU,EACApE,OAAAsE,EAAAC,EAAAhB,EAAAe,GAIA,QAAAtE,GAAA/E,EAAA9Q,GACA,MAAAlC,SAAAkC,EACAmZ,EAAArI,GAAA+E,QAEAsD,EAAArI,GACA+E,OAAA7V,IAEA/C,MAIA,QAAA8b,GAAAjI,GACA,GAAAoH,GAAAzH,iBAAAK,EACA,QACA6E,KAAAwC,EAAAD,EAAAmC,YACA3E,IAAAyC,EAAAD,EAAAoC,WACAhC,MAAAH,EAAAD,EAAAqC,aACA/B,OAAAL,EAAAD,EAAAsC,eAKA,QAAAb,GAAA7I,GACA,GAAAoH,GAAAzH,iBAAAK,EACA,QACA6E,KAAAwC,EAAAD,EAAAuC,aACA/E,IAAAyC,EAAAD,EAAAwC,YACApC,MAAAH,EAAAD,EAAAyC,cACAnC,OAAAL,EAAAD,EAAA0C,gBAKA,QAAAC,GAAA/J,EAAA6H,GACA,GAAA7a,SAAA6a,EAAA,CACA,GAAA3c,GAAA8U,EAAA8H,uBACA,QACAjD,KAAA3Z,EAAA2Z,KAAAja,OAAAof,YACApF,IAAA1Z,EAAA0Z,IAAAha,OAAAqf,aAGA,GACA7S,GAAA6P,EAAAjH,GAEA+H,EAAAgC,EAAA3S,GACA4Q,EAAAC,EAAAjI,GACAkI,EAAAf,EAAA/P,EAMA,OAJA+Q,GAAAnI,GACA4E,IAAAiD,EAAAjD,IAAAmD,EAAAnD,IAAAoD,EAAApD,IAAAsD,EAAAtD,IACAC,KAAAgD,EAAAhD,KAAAkD,EAAAlD,KAAAmD,EAAAnD,KAAAqD,EAAArD,OAEA1Y,KAIA,QAAA+d,GAAAlK,EAAA6H,GACA,GAAA7a,SAAA6a,EAAA,CACA,GAAA3c,GAAA8U,EAAA8H,uBACA,QACAjD,KAAA3Z,EAAA2Z,KAAAja,OAAAof,YACApF,IAAA1Z,EAAA0Z,IAAAha,OAAAqf,YACAnF,MAAAoE,KAAAiB,MAAAjf,EAAA4Z,OACAC,OAAAmE,KAAAiB,MAAAjf,EAAA6Z,SAKA,MAFAgF,GAAA/J,EAAA6H,GACAQ,EAAArI,EAAA6H,GACA1b,KAKA,QAAAgc,GAAAnI,EAAA6H,GACA,GAAA7a,QAAA6a,EAAA,CACA,GACAzQ,GAAA6P,EAAAjH,GAEApN,EAAAgV,EAAA5H,GACA+H,EAAAH,EAAAxQ,GACA4Q,EAAAC,EAAAjI,GACAkI,EAAAf,EAAA/P,EAGA,QACAwN,IAAAhS,EAAAgS,IAAAmD,EAAAnD,IAAAsD,EAAAtD,IAAAoD,EAAApD,IACAC,KAAAjS,EAAAiS,KAAAkD,EAAAlD,KAAAqD,EAAArD,KAAAmD,EAAAnD,MAGA,GAAAxX,IACAuX,IAAAiD,EAAAjD,IACAC,KAAAgD,EAAAhD,KAOA,OAJA,UAAA5E,EAAAC,IAAAF,EAAA,cACA3S,EAAA,SAAA,YAEA4S,EAAAC,IAAAF,EAAA3S,GACAlB,KAIA,QAAAie,GAAApK,EAAA6H,GACA,GAAA7a,SAAA6a,EAAA,CACA,GACAzQ,GAAA6P,EAAAjH,GAEApN,EAAAwV,EAAApI,GACA+H,EAAAH,EAAAxQ,GACA4Q,EAAAC,EAAAjI,GACAkI,EAAAf,EAAA/P,EAGA,QACAwN,IAAAhS,EAAAgS,IAAAmD,EAAAnD,IAAAsD,EAAAtD,IAAAoD,EAAApD,IACAC,KAAAjS,EAAAiS,KAAAkD,EAAAlD,KAAAqD,EAAArD,KAAAmD,EAAAnD,KACAC,MAAAlS,EAAAkS,MACAC,OAAAnS,EAAAmS,QAKA,MAFAoD,GAAAnI,EAAA6H,GACAQ,EAAArI,EAAA6H,GACA1b,KAIA,QAAAke,GAAArK,EAAAsK,GACA,QAAAC,GAAAvK,EAAAwK,GACA,GAAAC,GAAAC,EAAAtT,EAAA4I,CAGA,KADAyK,EAAAC,EAAA,EACAtT,GAAAA,GAAAoT,GAAApT,EAAA/F,UACAoZ,GAAArT,EAAAuT,YAAA,EACAD,GAAAtT,EAAAwT,WAAA,EACAxT,EAAAA,EAAA6P,YAGA,QAAAwD,EAAAA,EAAAC,EAAAA,GAGA,GACAD,GAAAC,EAAA5F,EAAAC,EAAA8F,EAAAC,EADAC,EAAA/K,EAAAH,WAEAmL,EAAAT,EAAAvK,EAAA+K,EAoBA,OAlBAN,GAAAO,EAAAP,EACAC,EAAAM,EAAAN,EACA5F,EAAA9E,EAAAoJ,YACArE,EAAA/E,EAAAsJ,aACAuB,EAAAE,EAAAtC,YACAqC,EAAAC,EAAAzC,aAEA,OAAAgC,GACAG,GAAAI,EAAA/F,EACA4F,GAAAI,EAAA/F,GACA,UAAAuF,IACAG,GAAAI,EAAA,EAAA/F,EAAA,EACA4F,GAAAI,EAAA,EAAA/F,EAAA,GAGAgG,EAAAE,WAAAR,EACAM,EAAAG,UAAAR,EAEAve,KAGA,QAAA8e,GAAAjL,EAAA9Q,GACA,GAAAic,GAAA,cAAAnL,EACA,OAAAhT,UAAAkC,EACAic,EAAAnL,EAAAiL,WAAAjL,EAAAgK,aAEAmB,EACAnL,EAAAiL,WAAA/b,EAEA8Q,EAAAoL,SAAAlc,EAAA8Q,EAAAqL,SAEAlf,MAIA,QAAA+e,GAAAlL,EAAA9Q,GACA,GAAAoc,GAAA,aAAAtL,EAEA,OAAAhT,UAAAkC,EACAoc,EAAAtL,EAAAkL,UAAAlL,EAAAiK,aAEAqB,EACAtL,EAAAkL,UAAAhc,EAEA8Q,EAAAoL,SAAApL,EAAAuL,QAAArc,GAEA/C,MAIA,QAAAkc,GAAArI,EAAAwI,GACA,GAAAxb,QAAAwb,EACA,MAAA7S,GAAAhE,SAAAqO,IAEA8E,MAAA9E,EAAAwL,WACAzG,OAAA/E,EAAAyL,aAGA9V,EAAAvE,WAAA4O,GACAgJ,EAAAlR,WAGAgN,MAAA9E,EAAAoJ,YACArE,OAAA/E,EAAAsJ,aAIA,IAAAZ,GAAA,eAAAzI,EAAAC,IAAAF,EAAA,cACA3S,GACAyX,MAAA0D,EAAA1D,MACAC,OAAAyD,EAAAzD,OAEA,KAAA2D,EAAA,CACA,GAAAE,GAAAC,EAAA7I,GACA2I,EAAAxB,EAAAnH,EAEAhT,UAAAK,EAAAyX,OAAA,KAAAzX,EAAAyX,OAAA,OAAAzX,EAAAyX,QACAzX,EAAAyX,MAAAzX,EAAAyX,MAAA8D,EAAA/D,KAAA+D,EAAApB,MAAAmB,EAAA9D,KAAA8D,EAAAnB,OAGAxa,SAAAK,EAAA0X,QAAA,KAAA1X,EAAA0X,QAAA,OAAA1X,EAAA0X,SACA1X,EAAA0X,OAAA1X,EAAA0X,OAAA6D,EAAAhE,IAAAgE,EAAAlB,OAAAiB,EAAA/D,IAAA+D,EAAAjB,QAIA,MADAzH,GAAAC,IAAAF,EAAA3S,GACAlB,KAIA,QAAA2Y,GAAA9E,EAAA9Q,GACA,MAAAlC,SAAAkC,EACAmZ,EAAArI,GAAA8E,OAEAuD,EAAArI,GACA8E,MAAA5V,IAEA/C,MAIA,QAAAuf,KACA,MAAAA,GA5YA,GAAAxE,GAAA,mBACAG,EAAA1R,EAAAnC,OA4bA,OA9CAmC,GAAAtB,MAAAqX,GACAvE,cAAAA,EAEAS,iBAAAA,EAEAQ,aAAAA,EAEAE,aAAAA,EAEAC,WAAAA,EAEAE,YAAAA,EAEAK,YAAAA,EAEAE,gBAAAA,EAEAjE,OAAAA,EAEAkD,cAAAA,EAEAhB,aAAAA,EAEA4B,eAAAA,EAGAkB,aAAAA,EAEAG,SAAAA,EAGA/B,iBAAAA,EAEAiC,aAAAA,EAEAC,eAAAA,EAEAY,WAAAA,EAEAC,UAAAA,EAEA7C,KAAAA,EAEAvD,MAAAA,IAGAha,EAAA4gB,KAAAA,IAGA/hB,EAAA,yBACA,YACA,WACA,SAAAmB,EAAA6K,GA8CA,QAAAgW,GAAAnZ,GACA,MAAAoZ,GAAAA,EAAApZ,EAAAA,EAAAxD,cAGA,QAAA6c,GAAArZ,GACA,MAAAsZ,GAAAtZ,IAAAA,EAGA,QAAAuZ,GAAAvZ,GACA,MAAAwZ,GAAAxZ,IAAAA,EAGA,QAAAyZ,KACA,MAAAA,GA1DA,GAWAC,GACAC,EARAC,EAAA,GACAC,EAAA,GACAT,EAAA,GAEAI,KACAF,KAIAQ,EAAA,qCAEAxU,EAAAlN,OAAAkN,SACAyU,EAAAzU,EAAAC,cAAA,OAEAyU,EAAAD,EAAAE,uBACAF,EAAAG,oBACAH,EAAAI,kBACAJ,EAAAC,gBAEAI,EAAAL,EAAA5L,KAEA,KAAA,GAAAnO,KAAAoa,GAAA,CACA,GAAAC,GAAAra,EAAAqC,MAAAsX,GAAAG,EACA,IAAAO,EAAA,CACAV,IACAD,EAAAW,EAAA,GACAV,EAAA,GAAAnN,QAAA,KAAAkN,EAAA,UAEAG,EAAAH,EACAE,EAAA,IAAAF,EAAAld,cAAA,IACA4c,EAAAM,EAAAld,eAGAgd,EAAArW,EAAAwI,WAAA0O,EAAA,KAAAra,CACA,IAAAsa,GAAAnX,EAAA9G,UAAAge,EAAA,GACAf,GAAAgB,GAAAV,EAAAU,GA2CA,MArBAnX,GAAAtB,MAAA4X,GACAG,eAAAA,EAEAL,uBAAAA,EAEAF,qBAAAA,EAEAF,kBAAAA,EAEAa,gBAAAA,EAEAnc,SAAA,WACA,MAAAzF,QAAAyF,UAGA0c,aAIAR,EAAA,KAEAzhB,EAAAmhB,QAAAA,IAGAtiB,EAAA,wBACA,YACA,UACA,YACA,WACA,SAAAmB,EAAA6K,EAAAsW,EAAA9F,EAAA6G,GAmoBA,QAAAC,GAAAhO,EAAAzE,EAAA0S,GAEA,IADA,GAAAC,GAAAD,GAAAvX,EAAA1E,SAAAic,GACAjO,EAAAA,EAAAY,YAAA,CACA,GAAAuN,EAAAnO,EAAAzE,GACA,MAAAyE,EAEA,IAAAiO,EACA,GAAAC,GACA,GAAAC,EAAAnO,EAAAiO,GACA,UAEA,IAAAjO,GAAAiO,EACA,MAIA,MAAA,MAGA,QAAAG,GAAApO,EAAAzE,EAAA0S,GAGA,IAFA,GAAA/V,MACAgW,EAAAD,GAAAvX,EAAA1E,SAAAic,IACAjO,EAAAA,EAAAY,aAAA,IAAAZ,EAAA5N,UAEA,GADA8F,EAAA1N,KAAAwV,GACAiO,EACA,GAAAC,GACA,GAAAC,EAAAnO,EAAAiO,GACA,UAEA,IAAAjO,GAAAiO,EACA,KASA,OAHA1S,KACArD,EAAAmW,EAAA3e,OAAAwI,EAAAqD,IAEArD,EAGA,QAAAoW,GAAArjB,EAAAuZ,GAEA,MADAA,GAAAA,GAAA0C,EAAA1C,MACAA,EAAA+J,eAAAtjB,GAGA,QAAA4b,GAAA7G,EAAAzE,GAGA,IAAA,GAFA0H,GAAAjD,EAAAiD,WACA/K,KACA5N,EAAA,EAAAA,EAAA2Y,EAAA1Y,OAAAD,IAAA,CACA,GAAA0V,GAAAiD,EAAA3Y,EACA,IAAA0V,EAAA5N,UACA8F,EAAA1N,KAAAwV,GAMA,MAHAzE,KACArD,EAAAmW,EAAA3e,OAAAwI,EAAAqD,IAEArD,EAGA,QAAAsW,GAAAxO,EAAAzE,GACA,KAAAyE,IAAAmO,EAAAnO,EAAAzE,IACAyE,EAAAA,EAAAY,UAGA,OAAAZ,GAGA,QAAAyO,GAAA1N,EAAAxF,GAEA,IACA,MAAAzH,GAAA9F,KAAA+S,EAAA2N,iBAAAnT,IACA,MAAAoT,IAGA,MAAAN,GAAAO,MAAA7N,EAAAxF,GAGA,QAAAsT,GAAA9N,EAAAxF,GAEA,IACA,MAAAwF,GAAA+N,cAAAvT,GACA,MAAAoT,IAGA,GAAAhM,GAAA0L,EAAAO,MAAA7N,EAAAxF,EACA,OAAAoH,GAAApY,OAAA,EACAoY,EAAA,GAEA,KAIA,QAAAoM,GAAAhO,EAAAxF,GAKA,MAJAA,KACAA,EAAAwF,EACAA,EAAAlI,SAAA2H,MAEA2N,EAAApN,EAAAxF,GACAwF,EAEA8N,EAAA9N,EAAAxF,GAIA,QAAAyT,GAAAjO,EAAAxF,GAKA,MAJAA,KACAA,EAAAwF,EACAA,EAAAlI,SAAA2H,MAEAiO,EAAA1N,EAAAxF,GAGA,QAAAmJ,GAAA3D,EAAAxF,EAAAf,GAGA,IAFA,GAAAyI,GAAAlC,EAAAkC,WACAjD,EAAAiD,EAAA,GACAjD,GAAA,CACA,GAAA,GAAAA,EAAA5N,SAAA,CACA,IAAAmJ,GAAA4S,EAAAnO,EAAAzE,GACA,MAAAyE,EAEA,IAAAxF,EACA,MAGAwF,EAAAA,EAAAqF,YAGA,MAAA,MAGA,QAAA4J,GAAAlO,EAAAxF,EAAA2T,GAGA,IAFA,GAAAjM,GAAAlC,EAAAkC,WACAjD,EAAAiD,EAAAA,EAAA1Y,OAAA,GACAyV,GAAA,CACA,GAAA,GAAAA,EAAA5N,SAAA,CACA,IAAAmJ,GAAA4S,EAAAnO,EAAAzE,GACA,MAAAyE,EAEA,IAAAkP,EACA,MAGAlP,EAAAA,EAAAmP,gBAGA,MAAA,MAGA,QAAAhB,GAAApN,EAAAxF,GACA,IAAAA,IAAAwF,GAAA,IAAAA,EAAA3O,SACA,OAAA,CAGA,IAAAsE,EAAA1E,SAAAuJ,GAAA,CACA,IACA,MAAA6T,GAAAphB,KAAA+S,EAAAxF,EAAAzL,QAAA,iCAAA,cACA,MAAA6e,IAGA,MAAAN,GAAAzY,MAAAmL,EAAAxF,GACA,MAAA7E,GAAAjG,YAAA8K,GACA7E,EAAA9E,QAAAmP,EAAAxF,MACA7E,EAAAnH,cAAAgM,GACA8S,EAAAgB,MAAAtO,EAAAxF,GAEAwF,IAAAxF,EAKA,QAAA8J,GAAAtE,EAAAxF,EAAA+T,GAEA,IADA,GAAAtP,GAAAe,EAAAsE,YACArF,GAAA,CACA,GAAA,GAAAA,EAAA5N,SAAA,CACA,IAAAmJ,GAAA4S,EAAAnO,EAAAzE,GACA,MAAAyE,EAEA,IAAAsP,EACA,MAGAtP,EAAAA,EAAAqF,YAEA,MAAA,MAGA,QAAAkK,GAAAxO,EAAAxF,GAGA,IAFA,GAAAyE,GAAAe,EAAAsE,YACAnN,KACA8H,GACA,GAAAA,EAAA5N,WACAmJ,IAAA4S,EAAAnO,EAAAzE,IACArD,EAAA1N,KAAAwV,IAGAA,EAAAA,EAAAqF,WAEA,OAAAnN,GAIA,QAAAC,GAAA4I,EAAAxF,GACA,GAAAyE,GAAAe,EAAAH,UACA,QAAAZ,GAAAzE,IAAA4S,EAAAnO,EAAAzE,GAIA,KAHAyE,EAMA,QAAAmP,GAAApO,EAAAxF,EAAA+T,GAEA,IADA,GAAAtP,GAAAe,EAAAoO,gBACAnP,GAAA,CACA,GAAA,GAAAA,EAAA5N,SAAA,CACA,IAAAmJ,GAAA4S,EAAAnO,EAAAzE,GACA,MAAAyE,EAEA,IAAAsP,EACA,MAGAtP,EAAAA,EAAAmP,gBAEA,MAAA,MAGA,QAAAK,GAAAzO,EAAAxF,GAGA,IAFA,GAAAyE,GAAAe,EAAAoO,gBACAjX,KACA8H,GACA,GAAAA,EAAA5N,WACAmJ,IAAA4S,EAAAnO,EAAAzE,IACArD,EAAA1N,KAAAwV,IAGAA,EAAAA,EAAAmP,eAEA,OAAAjX,GAGA,QAAAuX,GAAA1O,EAAAxF,GAGA,IAFA,GAAAyE,GAAAe,EAAAH,WAAA8D,WACAxM,KACA8H,GACA,GAAAA,EAAA5N,UAAA4N,IAAAe,IACAxF,IAAA4S,EAAAnO,EAAAzE,IACArD,EAAA1N,KAAAwV,IAGAA,EAAAA,EAAAqF,WAEA,OAAAnN,GAh4BA,GAAAmW,MACA3e,EAAAT,MAAA2D,UAAAlD,OACAoE,EAAA7E,MAAA2D,UAAAkB,MACAsb,EAAApC,EAAAO,iBAUA,WA4EA,QAAAmC,GACAC,EAEAC,EACAC,EACAC,EAEAC,EACA9kB,EACAgM,EAEA+Y,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAAZ,GAAAa,UACAC,EAAAC,cAAAF,MACAG,KACAhB,GAAA,MAAA,EAGA,IAAAC,GAAAC,GAAAc,OAAA,CACAf,EAAAA,GAAA,GACA,IAAAgB,GAAAH,EAAAC,YAAAF,EACAK,IAAAD,EAAAD,KACAC,EAAAD,GAAAG,kBAAAA,EAAAlB,IACAgB,IAAAD,IACAf,WAAAA,EACApM,IAAA,KAIA,GAAAuN,GAAAN,EAAAC,YAAAF,GAAAG,EAEA,IAAAb,EACAiB,EAAAvN,IAAAsM,EAAAjgB,QAAAmhB,EAAA,QAEA,IAAAhmB,EACA+lB,EAAA/lB,GAAAA,EAAA6E,QAAAmhB,EAAA,QAEA,IAAAha,EACAA,EAAAA,EAAAnH,QAAAmhB,EAAA,IAEAD,EAAAE,YAAAF,EAAAE,cACAF,EAAAG,UAAAH,EAAAG,YACAH,EAAAE,UAAA1mB,KAAAyM,GACA+Z,EAAAG,QAAA3mB,MACAyF,MAAAgH,EACAma,OAAA,GAAArR,QAAA,UAAAsR,EAAApa,GAAA,iBAGA,IAAAoZ,EACAG,EAAAA,GAAAD,EACAC,EAAAA,EAAAA,EAAA1gB,QAAAmhB,EAAA,IAAA,KAEAD,EAAAM,UAAAN,EAAAM,YACAN,EAAAM,QAAA9mB,MACAgC,IAAA6jB,EAAAvgB,QAAAmhB,EAAA,IACAhhB,MAAAugB,EACA7jB,KAAA,GAAAyjB,EAAA7lB,OAAA,QAAA,gBAGA,IAAAylB,EAAA,CACAA,EAAAA,EAAAlgB,QAAAmhB,EAAA,IACAd,GAAAA,GAAA,IAAArgB,QAAAmhB,EAAA,GAEA,IAAA/gB,GAAAkhB,CAEA,QAAAnB,GACA,IAAA,KACAmB,EAAA,GAAArR,QAAA,IAAAsR,EAAAlB,GACA,MACA,KAAA,KACAiB,EAAA,GAAArR,QAAAsR,EAAAlB,GAAA,IACA,MACA,KAAA,KACAiB,EAAA,GAAArR,QAAA,UAAAsR,EAAAlB,GAAA,UACA,MACA,KAAA,KACAiB,EAAA,GAAArR,QAAA,IAAAsR,EAAAlB,GAAA,QACA,MACA,KAAA,IACAjgB,EAAA,SAAAD,GACA,MAAAkgB,IAAAlgB,EAEA,MACA,KAAA,KACAC,EAAA,SAAAD,GACA,MAAAA,IAAAA,EAAA4B,QAAAse,MAEA,MACA,KAAA,KACAjgB,EAAA,SAAAD,GACA,MAAAkgB,IAAAlgB,EAEA,MACA,SACAC,EAAA,SAAAD,GACA,QAAAA,GAIA,IAAAkgB,GAAA,WAAAjgB,KAAA+f,KAAA/f,EAAA,WACA,OAAA,IAGAA,IAAAA,EAAA,SAAAD,GACA,MAAAA,IAAAmhB,EAAAlhB,KAAAD,KAGA+gB,EAAAhU,aAAAgU,EAAAhU,eACAgU,EAAAhU,WAAAxS,MACAgC,IAAAwjB,EACAuB,SAAAtB,EACAhgB,MAAAkgB,EACAjgB,KAAAA,IAKA,MAAA,GAzMA,GAAAwgB,GACAD,EACAG,EACAE,EACAU,KACAC,KACAR,EAAA,MAEA7gB,EAAA,SAAAshB,EAAAC,GACA,GAAA,MAAAD,EAAA,MAAA,KACA,IAAAA,EAAAE,SAAA,EAAA,MAAAF,EACAA,IAAA,GAAAA,GAAA5hB,QAAA,aAAA,IACAghB,IAAAa,CACA,IAAAE,GAAA,EAAAJ,EAAAD,CACA,IAAAK,EAAAH,GAAA,MAAAG,GAAAH,EAUA,KATAhB,GACAkB,OAAA,EACAjB,eACAmB,IAAAJ,EACA1b,QAAA,WACA,MAAA5F,GAAAlD,KAAA4kB,KAAA,KAGArB,KACAiB,IAAAA,EAAAA,EAAA5hB,QAAAshB,EAAA1B,MAEA,MADAgB,GAAAnmB,OAAAmmB,EAAAC,YAAApmB,OACAsnB,EAAAnB,EAAAoB,KAAA,EAAA9b,EAAA0a,GAAAA,GAGAK,EAAA,SAAAlB,GACA,MAAA,MAAAA,EAAA,IACA,MAAAA,EAAA,IACA,KAAA3f,KAAA2f,GAAAA,EAAA/f,QAAA,KAAA,IACA,IAAA+f;EAGA7Z,EAAA,SAAA0b,GAEA,IAAA,GADAf,GAAAe,EAAAf,YACArmB,EAAA,EAAAA,EAAAqmB,EAAApmB,OAAAD,IAAA,CAQA,IAAA,GAPAynB,GAAApB,EAAArmB,GACA4kB,GACA9kB,SACAqZ,IAAA,IACAoM,WAAAkB,EAAAgB,EAAA,GAAAlC,aAGAlf,EAAA,EAAAA,EAAAohB,EAAAxnB,OAAAoG,IAAA,CACA,GAAAqhB,GAAAD,EAAAphB,EACAqhB,GAAAjB,oBAAAiB,EAAAjB,kBAAA,KACAiB,EAAAnC,WAAAmC,EAAAjB,wBACAiB,GAAAjB,kBAGAgB,EAAA/b,UAAAxL,KAAA0kB,GAEA,MAAAwC,IAGAL,EAAA,WAEA,GAAAY,GAAA,kCACAC,EAAA,IACA,OAAA,UAAAC,GACA,MAAAA,GAAAriB,QAAAmiB,EAAAC,OAIAd,EAAA,GAAArR,QACA,0QACAjQ,QAAA,eAAA,IAAAuhB,EAAA,sBAAA,KACAvhB,QAAA,aAAA,8CACAA,QAAA,cAAA,gDAuIA8hB,EAAA1kB,KAAA0kB,SAEAA,GAAAxhB,MAAA,SAAAshB,GACA,MAAAthB,GAAAshB,IAGAE,EAAAP,aAAAA,EAEAnkB,KAAA0kB,QAAA1kB,KAAA0kB,MAAAA,KAEAlmB,MAAA2iB,EAGA,IAEAva,GAAA7E,MAAA2D,UAAAkB,KAGAua,GAAA+D,cAAA/D,EAAAuD,MAAAxhB,MAGAie,EAAAiD,SAEAe,SAAA,SAAAtR,GACA,MAAA,aAAAA,EAAApU,MAEA2lB,QAAA,SAAAvR,GACA,QAAAA,EAAAuR,SAGAnO,SAAA,SAAApD,EAAAhQ,EAAA4R,EAAA4B,GACA,GAAAgO,EAAArlB,MAAAqX,OAAA1S,QAAA0S,MAAA,MAAArX,OAGAslB,SAAA,SAAAzR,GACA,QAAAA,EAAAyR,UAGAC,QAAA,SAAA1R,GACA,OAAAA,EAAAyR,UAGA/f,GAAA,SAAAsO,EAAAhQ,EAAA4R,EAAA1S,GACA,MAAAc,IAAAd,GAGAyiB,MAAA,SAAA3R,GACA,MAAAlI,UAAA8Z,gBAAA5R,IAAAA,EAAA1P,MAAA0P,EAAApU,MAAAoU,EAAA6R,WAGApY,MAAA,SAAAuG,EAAAhQ,GACA,MAAA,KAAAA,GAGA8hB,GAAA,SAAA9R,EAAAhQ,EAAA4R,EAAA1S,GACA,MAAAc,GAAAd,GAGAyB,IAAA,SAAAqP,EAAAhQ,EAAA4R,EAAAmQ,GACA,MAAA/D,GAAAhO,EAAA+R,IAIAC,OAAA,SAAAhS,GACA,OAAAsN,EAAAiD,QAAA,QAAAvQ,IAGAmO,KAAA,SAAAnO,EAAAhQ,EAAA4R,GACA,MAAA5R,KAAA4R,EAAApY,OAAA,GAGAyoB,GAAA,SAAAjS,EAAAhQ,EAAA4R,EAAA1S,GACA,MAAAc,GAAAd,GAGAgjB,IAAA,SAAAlS,EAAAhQ,EAAA4R,EAAAmQ,GACA,OAAA3E,EAAApN,EAAA+R,IAGA3a,OAAA,SAAA4I,GACA,QAAAA,EAAAH,YAGAsS,MAAA,SAAAnS,GACA,MAAA,UAAAA,EAAApU,MAGAwmB,SAAA,SAAApS,GACA,QAAAA,EAAAoS,UAGA5O,KAAA,SAAAxD,GACA,MAAA,SAAAA,EAAApU,MAGAymB,QAAA,SAAArS,GACA,MAAAA,GAAAoJ,aAAApJ,EAAAoJ,eAIA,QAAA,KAAA,QAAA1e,QAAA,SAAAkE,GACA0e,EAAAiD,QAAA3hB,GAAA0jB,eAAA,IAGAhF,EAAAiF,OAAA,SAAAC,GACA,GAEA9P,GACAxY,EACAkmB,EACAnU,EACAsU,EANAkC,EAAA,GACAC,IAWA,KAHAxoB,EAAAsoB,EAAAtoB,MACAuoB,GAAA,IAAAvoB,GAEAkmB,EAAAoC,EAAApC,QACA,IAAA,GAAA7mB,GAAA6mB,EAAA5mB,OAAAD,KACAkpB,GAAA,IAAArC,EAAA7mB,GAAA2F,KAGA,IAAA+M,EAAAuW,EAAAvW,WACA,IAAA,GAAA1S,GAAA,EAAAA,EAAA0S,EAAAzS,OAAAD,IAEAkpB,GADAxW,EAAA1S,GAAAinB,SACA,IAAAvU,EAAA1S,GAAAkC,IAAAwQ,EAAA1S,GAAAinB,SAAAphB,KAAAoP,UAAAvC,EAAA1S,GAAA2F,OAAA,IAEA,IAAA+M,EAAA1S,GAAAkC,IAAA,GAIA,IAAA8kB,EAAAiC,EAAAjC,QACA,IAAAhnB,EAAAgnB,EAAA/mB,OAAAD,KACAopB,KAAApC,EAAAhnB,GACA4C,KAAAokB,QAAAoC,KAAAlnB,KACAinB,EAAAjpB,KAAAkpB,MAEA3lB,SAAA2lB,KAAAzjB,QACAujB,GAAA,IAAAE,KAAAlnB,IAAA,IAAA2D,KAAAoP,UAAAmU,MAcA,QARAjQ,EAAA8P,EAAA9P,OACA+P,EAAA/P,EAAAzE,cAAAwU,GAGAA,IACAA,EAAA,MAIAA,eAAAA,EACAC,cAAAA,IAKApF,EAAAgB,MAAA,SAAArP,EAAAuT,EAAAxiB,EAAA4R,EAAAgR,GACA,GAAAlQ,GACAxY,EACAkmB,EACAnU,EACAsU,EAEAhnB,EAAAopB,EAAApS,EAAAsS,CAEA,KAAAD,EAAA,CACA,GAAAlQ,EAAA8P,EAAA9P,IAAA,CACA,GAAArD,GAAAJ,EAAAI,SAAApB,aACA,IAAA,KAAAyE,GACA,GAAArD,EAAA,IAAA,OAAA,MAEA,IAAAA,IAAAqD,GAAA,IAAAzE,cAAA,OAAA,EAIA,IAAA/T,EAAAsoB,EAAAtoB,KACA+U,EAAA6T,aAAA,OAAA5oB,EACA,OAAA,CAKA,IAAAkmB,EAAAoC,EAAApC,QACA,IAAA7mB,EAAA6mB,EAAA5mB,OAAAD,KAEA,GADAgX,EAAAtB,EAAA6T,aAAA,UACAvS,IAAA6P,EAAA7mB,GAAA8mB,OAAAlhB,KAAAoR,GAAA,OAAA,CAIA,IAAAtE,EAAAuW,EAAAvW,WACA,IAAA1S,EAAA0S,EAAAzS,OAAAD,KAEA,GADAopB,EAAA1W,EAAA1S,GACAopB,EAAAnC,UAAAmC,EAAAxjB,KAAA8P,EAAA6T,aAAAH,EAAAlnB,OAAAwT,EAAA8T,aAAAJ,EAAAlnB,KAAA,OAAA,EAKA,GAAA8kB,EAAAiC,EAAAjC,QACA,IAAAhnB,EAAAgnB,EAAA/mB,OAAAD,KAEA,GADAopB,EAAApC,EAAAhnB,GACAspB,EAAA1mB,KAAAokB,QAAAoC,EAAAlnB,MACA,IAAAmnB,GAAAC,EAAAP,gBAAAM,IAAAC,EAAAP,iBACAO,EAAA5T,EAAAjP,EAAA4R,EAAA+Q,EAAAzjB,OACA,OAAA,MAIA,KAAA0jB,IAAAvE,EAAAphB,KAAAgS,EAAA0T,EAAAlnB,KACA,OAAA,CAKA,QAAA,GAGA6hB,EAAAzY,MAAA,SAAAoK,EAAAzE,GAEA,GAAAmV,EAQA,IALAA,EADAha,EAAA1E,SAAAuJ,GACA8S,EAAAuD,MAAAxhB,MAAAmL,GAEAA,GAGAmV,EACA,OAAA,CAIA,IAEApmB,GACAypB,EAHApD,EAAAD,EAAAC,YACAqD,EAAA,CAGA,KAAA1pB,EAAA,EACAypB,EAAApD,EAAArmB,GAAAA,IACA,GAAA,GAAAypB,EAAAxpB,OAAA,CACA,GAAAwnB,GAAAgC,EAAA,EACA,IAAA7mB,KAAAmiB,MAAArP,EAAA+R,GACA,OAAA,CAEAiC,KAIA,GAAAA,GAAAtD,EAAAnmB,OACA,OAAA,CAGA,IACAoF,GADAgT,EAAAzV,KAAA0hB,MAAA/V,SAAA6X,EAEA,KAAApmB,EAAA,EAAAqF,EAAAgT,EAAArY,MACA,GAAAqF,IAAAqQ,EACA,OAAA,CAGA,QAAA,GAIAqO,EAAA4F,aAAA,SAAAtR,EAAAoP,GACA,GAAAmC,GAAAxkB,EAAA1B,KAAA2U,EAAA,SAAA3C,EAAAjP,GACA,MAAAsd,GAAAgB,MAAArP,EAAA+R,EAAAhhB,EAAA4R,GAAA,IAMA,OAHAuR,GAAAxkB,EAAA1B,KAAAkmB,EAAA,SAAAlU,EAAAjP,GACA,MAAAsd,GAAAgB,MAAArP,EAAA+R,EAAAhhB,EAAAmjB,GAAA,MAKA7F,EAAA3e,OAAA,SAAAiT,EAAApH,GACA,GAAAmV,EAEA,KAAAha,EAAA1E,SAAAuJ,GAGA,MAAA8S,GAAA4F,aAAAtR,EAAApH,EAFAmV,GAAArC,EAAAuD,MAAAxhB,MAAAmL,EAMA,IACAjR,GACAypB,EAFApD,EAAAD,EAAAC,YAGAzY,IACA,KAAA5N,EAAA,EACAypB,EAAApD,EAAArmB,GAAAA,IAAA,CACA,GAAA,GAAAypB,EAAAxpB,OAOA,KAAA,IAAAe,OAAA,0BAAAiQ,EANA,IAAAwW,GAAAgC,EAAA,GAEAG,EAAA7F,EAAA4F,aAAAtR,EAAAoP,EAEA7Z,GAAAxB,EAAAJ,KAAA4B,EAAArE,OAAAqgB,IAMA,MAAAhc,IAIAmW,EAAA8F,QAAA,SAAApT,EAAAqT,GACA,GAEAC,GAFAC,EAAAF,EAAAvE,WACA0D,EAAAa,EAEAzR,IAEA,QAAA2R,GACA,IAAA,IACA3R,EAAAkE,EAAA9F,EAAAwS,EACA,MACA,KAAA,IACAc,EAAAhP,EAAAtE,EAAAwS,GAAA,GACAc,GACA1R,EAAAnY,KAAA6pB,EAEA,MACA,KAAA,IACAA,EAAA3P,EAAA3D,EAAAwS,GAAA,GACAc,GACA1R,EAAAnY,KAAA6pB,EAEA,MACA,KAAA,IACA1R,EAAA4M,EAAAxO,EAAAwS,EACA,MACA,KAAA,KACA,GAAAnV,GAAA+Q,EAAApO,EAAAwS,GAAA,GACAlmB,EAAAgY,EAAAtE,EAAAwS,GAAA,EACAnV,IACAuE,EAAAnY,KAAA4T,GAEA/Q,GACAsV,EAAAnY,KAAA6C,EAEA,MACA,KAAA,KACAsV,EAAA8M,EAAA1O,EAAAwS,EACA,MACA,KAAA,IACA5Q,EAAAyL,EAAArN,EAAAwS,EACA,MACA,KAAA,KACAc,EAAAlc,EAAA4I,EAAAwS,GACAc,GACA1R,EAAAnY,KAAA6pB,EAEA,MACA,KAAA,KACA1R,EAAAwM,EAAApO,EAAAwS,GAAA,EACA,MACA,KAAA,KACAc,EAAApF,EAAAlO,EAAAwS,GAAA,GACAc,GACA1R,EAAAnY,KAAA6pB,EAEA,MACA,KAAA,KACA1R,EAAA6M,EAAAzO,EAAAwS,EACA,MACA,SACA,GAAAgB,GAAArnB,KAAAomB,OAAAc,EAEA,IADAzR,EAAA7O,EAAA9F,KAAA+S,EAAA2N,iBAAA6F,EAAAf,iBACAe,EAAAd,cACA,IAAA,GAAAnpB,GAAAiqB,EAAAd,cAAAlpB,OAAA,EAAAD,GAAA,EAAAA,IACAqY,EAAAjT,EAAA1B,KAAA2U,EAAA,SAAAhT,EAAAoB,GACA,MAAAsd,GAAAgB,MAAA1f,GACA2hB,SAAAiD,EAAAd,cAAAnpB,KACAyG,EAAA4R,GAAA,KAGAA,EAAAjT,EAAA1B,KAAA2U,EAAA,SAAAhT,EAAAoB,GACA,MAAAsd,GAAAgB,MAAA1f,GACA2hB,SAAAiD,EAAAd,cAAAnpB,KACAyG,EAAA4R,GAAA,KAOA,MAAAA,IAGA0L,EAAAO,MAAA,SAAA5O,EAAAzE,EAAAiZ,GAUA,IAAA,GAHAT,GAAAU,EAJA/D,EAAAxjB,KAAA0kB,MAAAxhB,MAAAmL,GAGAmZ,KAEA/D,EAAAD,EAAAC,YAEArmB,EAAA,EACAypB,EAAApD,EAAArmB,GAAAA,IAAA,CAGA,IAAA,GADAqqB,GADAC,GAAA5U,GAEArP,EAAA,EACA8jB,EAAAV,EAAApjB,GAAAA,IACAgkB,EAAAje,EAAA1L,IAAA4pB,EAAA,SAAAjlB,EAAArF,GACA,MAAA+jB,GAAA8F,QAAAxkB,EAAA8kB,KAEAE,IACAC,EAAAD,EAGAA,KACAD,EAAAA,EAAA7gB,OAAA8gB,IAIA,MAAAD,GAqQA,IAAAG,GAAA,WACA,MAAAA,GA4CA,OAzCAne,GAAAtB,MAAAyf,GAEA7G,SAAAA,EAEAI,UAAAA,EAEAE,KAAAA,EAEAzH,SAAAA,EAEA2H,QAAAA,EAEAK,WAAAA,EAEAJ,YAAAA,EAEAM,KAAAA,EAEAC,QAAAA,EAEAtK,WAAAA,EAEAuK,UAAAA,EAEAd,QAAAA,EAEA9I,YAAAA,EAEAkK,aAAAA,EAEApX,OAAAA,EAEAgX,gBAAAA,EAEAK,iBAAAA,EAEA8B,QAAAjD,EAAAiD,QAEA7B,SAAAA,IAGA5jB,EAAAgpB,OAAAA,IAGAnqB,EAAA,uBACA,YACA,UACA,YACA,SAAAmB,EAAA6K,EAAAme,GAsBA,QAAAnR,GAAA3C,EAAAxN,EAAAtD,GACA,MAAAA,EACA8Q,EAAA+T,gBAAAvhB,GAEAwN,EAAA2C,aAAAnQ,EAAAtD,GAIA,QAAA8kB,GAAAhU,EAAAxN,EAAAtD,GACA,MAAA/C,MAAAwQ,KAAAqD,EAAA,QAAAxN,EAAAtD,GAGA,QAAAyN,GAAAqD,EAAAxN,EAAAtD,GACA,GAAAlC,SAAAkC,EAaA,MADA8Q,GAAA2C,aAAAnQ,EAAAtD,GACA/C,IAZA,IAAA,gBAAAqG,GAAA,CACA,IAAA,GAAAyhB,KAAAzhB,GACAmK,EAAAqD,EAAAiU,EAAAzhB,EAAAyhB,GAEA,OAAA9nB,MAEA,MAAA6T,GAAA+S,aAAAvgB,GACAwN,EAAA8S,aAAAtgB,GADA,OAWA,QAAA0hB,GAAAlU,GACA,GAAAmU,KAMA,OALAxe,GAAArG,KAAA0Q,EAAA/D,eAAA,SAAA1S,EAAAoT,GACA,GAAAA,EAAAnK,KAAA1B,QAAA,WACAqjB,EAAAnW,EAAArB,EAAAnK,KAAAzD,QAAA,QAAA,MAAAE,EAAA0N,EAAAzN,UAGAilB,EAGA,QAAAC,GAAApU,EAAAqU,GACA,GAAAF,GAAAnU,EAAA,QAIA,QAHAmU,GAAAE,IACAF,EAAAnU,EAAA,SAAAkU,EAAAlU,IAEAmU,EAGA,QAAAG,GAAAtU,EAAAxN,GACA,GAAAxF,SAAAwF,EACA,MAAA4hB,GAAApU,GAAA,EAEA,IAAAmU,GAAAC,EAAApU,EACA,IAAAmU,EAAA,CACA,GAAA3hB,IAAA2hB,GACA,MAAAA,GAAA3hB,EAEA,IAAA+hB,GAAAvW,EAAAxL,EACA,IAAA+hB,IAAAJ,GACA,MAAAA,GAAAI,GAGA,GAAAN,GAAA,QAAAzhB,EAAAzD,QAAAylB,EAAA,OAAAxlB,aACA,OAAA2N,GAAAqD,EAAAiU,GAKA,QAAAQ,GAAAzU,EAAAxN,EAAAtD,GACA,GAAAilB,GAAAC,EAAApU,GAAA,EACAmU,GAAAnW,EAAAxL,IAAAtD,EAIA,QAAAiL,GAAA6F,EAAAxN,EAAAtD,GAEA,GAAAlC,SAAAkC,EAAA,CACA,GAAA,gBAAAsD,GAAA,CACA,IAAA,GAAAkiB,KAAAliB,GACAiiB,EAAAzU,EAAA0U,EAAAliB,EAAAkiB,GAEA,OAAAvoB,MAEA,MAAAmoB,GAAAtU,EAAAxN,GAIA,MADAiiB,GAAAzU,EAAAxN,EAAAtD,GACA/C,KAIA,QAAAwoB,GAAA3U,EAAAM,GACA3K,EAAA1E,SAAAqP,KACAA,EAAAA,EAAAlX,MAAA,OAEA,IAAA+qB,GAAAC,EAAApU,GAAA,EAIA,OAHAM,GAAA5V,QAAA,SAAA8H,SACA2hB,GAAA3hB,KAEArG,KAGA,QAAAyoB,GAAAhT,EAAAnB,GACA,MAAAxW,GAAAgD,KAAA2U,EAAA,SAAA5B,GACA,MAAAA,GAAAS,KAIA,QAAAlM,GAAAyL,EAAAxN,EAAAtD,GAEA,MADAsD,GAAAqiB,EAAAriB,IAAAA,EACAxF,SAAAkC,EACA8Q,EAAAxN,IAEAwN,EAAAxN,GAAAtD,EACA/C,MAIA,QAAA2oB,GAAA9U,EAAAxN,GAIA,MAHAA,GAAApJ,MAAA,KAAAsB,QAAA,SAAAiS,GACAgG,EAAA3C,EAAArD,KAEAxQ,KAGA,QAAA4oB,GAAA/U,EAAAxN,GAIA,MAHAA,GAAApJ,MAAA,KAAAsB,QAAA,SAAA6J,SACAyL,GAAAzL,KAEApI,KAGA,QAAAqX,GAAAxD,EAAAgV,GACA,MAAAhoB,UAAAgoB,EACAhV,EAAAiV,aAEAjV,EAAAiV,YAAA,MAAAD,EAAA,GAAA,GAAAA,EACA7oB,MAIA,QAAAyQ,GAAAoD,EAAA9Q,GACA,GAAAlC,SAAAkC,EAAA,CACA,GAAA8Q,EAAAkV,SAAA,CAEA,GAAAC,GAAAxmB,EAAA1B,KAAA6mB,EAAA9F,KAAAhO,EAAA,UAAA,SAAAoV,GACA,MAAAA,GAAAhD,UAEA,OAAAwC,GAAAO,EAAA,SAEA,MAAAnV,GAAA9Q,MAIA,MADA8Q,GAAA9Q,MAAAA,EACA/C,KAIA,QAAAkpB,KACA,MAAAA,GArLA,GAAAprB,GAAAiE,MAAA2D,UAAA5H,IACA0E,EAAAT,MAAA2D,UAAAlD,OACAqP,EAAArI,EAAAqI,UACA/O,EAAA0G,EAAA1G,iBAEAulB,EAAA,WACAK,GACAhD,SAAA,WACAyD,SAAA,WACAC,MAAA,UACAC,QAAA,YACAC,UAAA,YACAC,YAAA,cACAC,YAAA,cACAC,QAAA,UACAC,QAAA,UACAC,OAAA,SACAC,YAAA,cACAC,gBAAA,kBA4LA,OAtBArgB,GAAAtB,MAAAghB,GACArB,KAAAA,EAEArX,KAAAA,EAEAxC,KAAAA,EAEAya,MAAAA,EAEArgB,KAAAA,EAEAugB,WAAAA,EAEAH,WAAAA,EAEAI,WAAAA,EAEAvR,KAAAA,EAEA5G,IAAAA,IAGA9R,EAAAuqB,MAAAA,IAGA1rB,EAAA,yBACA,YACA,UACA,YACA,WACA,UACA,WACA,SAAAmB,EAAA6K,EAAAsW,EAAA6H,EAAA3N,EAAAkP,GAaA,QAAAY,GAAA/a,EAAA5P,GAeA,OAdAA,GAAA4P,EAAAgb,qBACA5qB,IACAA,EAAA4P,GAGAvF,EAAArG,KAAA6mB,EAAA,SAAA3jB,EAAA4jB,GACA,GAAAC,GAAA/qB,EAAAkH,EACA0I,GAAA1I,GAAA,WAEA,MADArG,MAAAiqB,GAAAzgB,EAAA0I,WACAgY,GAAAA,EAAA1rB,MAAAW,EAAAH,YAEA+P,EAAAkb,GAAAzgB,EAAA2I,eAGApD,EAGA,QAAA7L,GAAA6L,GACA,GAAA3K,IAAA,GAAA2K,GAAA9R,MAAA,IACA,QACAwC,KAAA2E,EAAA,GACA+lB,GAAA/lB,EAAAwC,MAAA,GAAAwjB,OAAA7sB,KAAA,MAiIA,QAAA8sB,GAAAtb,GACA,GAAAzP,GACA2H,GACAqjB,cAAAvb,EAEA,KAAAzP,IAAAyP,GACA,kBAAAzP,GAAAirB,EAAAvnB,KAAA1D,IAAAuB,SAAAkO,EAAAzP,KACA2H,EAAA3H,GAAAyP,EAAAzP,GAGA,OAAAwqB,GAAA7iB,EAAA8H,GA6MA,QAAAU,GAAAoE,EAAAzF,EAAAC,EAAAjL,GACA,GAAAonB,GAAAxqB,IACA,IAAAwJ,EAAAnH,cAAA+L,GAIA,MAHA5E,GAAArG,KAAAiL,EAAA,SAAA3O,EAAA8B,GACAkO,EAAAoE,EAAApU,EAAA4O,EAAA9M,KAEAipB,CAGAhhB,GAAA1E,SAAAuJ,IAAA7E,EAAAzF,WAAAX,IAAAA,KAAA,IACAA,EAAAiL,EACAA,EAAAxN,QAGAuC,KAAA,IACAA,EAAAoG,EAAA2I,aAGA,gBAAA/D,KAEAA,EADAA,EAAAzJ,QAAA,QACAyJ,EAAAnR,MAAA,KAEAmR,EAAAnR,MAAA,MAIA,IAAA4P,GAAA4d,EAAA5W,EAQA,OANAzF,IAAAA,EAAA7P,QAAA,SAAAwQ,GAEAlC,EAAA6d,WAAA3b,EAAA3L,GACAiL,SAAAA,MAGArO,KAGA,QAAAmO,GAAA0F,EAAAzF,EAAAC,EAAAL,EAAA5K,EAAAmL,GAGA,GAAA/E,EAAAnH,cAAA+L,GAIA,MAHA5E,GAAArG,KAAAiL,EAAA,SAAA3O,EAAA8B,GACA4M,EAAA0F,EAAApU,EAAA4O,EAAAL,EAAAzM,EAAAgN,KAEAvO,IAGAwJ,GAAA1E,SAAAuJ,IAAA7E,EAAAzF,WAAAX,KACAA,EAAA4K,EACAA,EAAAK,EACAA,EAAAxN,QAGA2I,EAAAzF,WAAAiK,KACA5K,EAAA4K,EACAA,EAAAnN,QAGAuC,KAAA,IACAA,EAAAoG,EAAA2I,aAGA,gBAAA/D,KAEAA,EADAA,EAAAzJ,QAAA,QACAyJ,EAAAnR,MAAA,KAEAmR,EAAAnR,MAAA,MAIA,IAAA4P,GAAA4d,EAAA5W,EAYA,OAVAzF,GAAA7P,QAAA,SAAAwQ,GACA,MAAA,SAAAA,EACA4b,EAAAvnB,OAEAyJ,GAAA+d,SAAA7b,EAAA3L,GACA4K,KAAAA,EACAK,SAAAA,EACAE,MAAAA,MAGAvO,KAGA,QAAAuO,GAAAsF,EAAAzF,EAAAC,EAAAL,EAAA5K,GAGA,MAFA+K,GAAA0F,EAAAzF,EAAAC,EAAAL,EAAA5K,EAAA,GAEApD,KAGA,QAAA6qB,GAAA9b,GAQA,MAPAtQ,QAAAkN,SAAA0B,MACA0B,EAAA+b,QAAA,GAEA/b,EAAAgc,iBACAhc,EAAAgc,iBACAhc,EAAAic,mBAEAhrB,KAGA,QAAAyO,GAAAwc,EAAAxrB,EAAAnB,GACA,GAAA6C,EAEAA,GADA1B,YAAAyrB,OACAzrB,EAEAwB,EAAAxB,EAAAnB,GAEA6C,EAAAgqB,MAAA7sB,CAEA,IAAAiD,GAAA0pB,EAAAG,eAAAH,EAAAxc,OAOA,OANAlN,GACAA,EAAAT,KAAAmqB,EAAA9pB,GAEA2X,QAAAC,KAAA,mDAGA/Y,KAGA,QAAA2qB,GAAAvnB,GASA,MANAioB,GAAAroB,KAAA2I,SAAA2f,aAAA3f,SAAA2H,KACAlQ,IAEAuI,SAAA4f,iBAAA,mBAAAnoB,GAAA,GAGApD,KAQA,QAAAwrB,GAAA3X,GAEA,GAAA4X,GAAAvC,EAAAlb,KAAA6F,EAAA,YACA,KAAA4X,EAAA,CACAA,KACAvC,EAAAlb,KAAA6F,EAAA,YAAA4X,EACA,IAAAC,GAAA,SAAAC,EAAA5c,GACA,GAAA6c,GAAA7c,EAAA8c,SAAA9c,EAAA+c,OACA,IAAAH,EAAAI,MAAAH,GAAAD,EAAAK,KAAAjd,EAAAkd,QAAAN,EAAA3jB,OAAA+G,EAAAmd,WACAnd,EAAA+b,SAAAa,EAAAb,SAAA/b,EAAAod,UAAApd,EAAAod,UAAAR,EAAAQ,UAKA,MAJApd,GAAAgc,iBACA,WAAAhc,EAAAtP,MACAksB,EAAApqB,GAAAwN,IAEA,EAIAZ,GAAA0F,EAAA,yBAAA,SAAA9E,GACA,IAAA,iBAAA/L,KAAA+L,EAAA7O,OAAAgT,UACA,IAAA,GAAA5T,KAAAmsB,GACAC,EAAAD,EAAAnsB,GAAAyP,KAOA,OACAqd,IAAA,SAAAC,EAAA9qB,GACA,GAAA+qB,EAEAA,GADAD,EAAA1nB,QAAA,QACA0nB,EAAAxpB,cAAA5F,MAAA,KAEAovB,EAAAxpB,cAAA5F,MAAA,KAEAqvB,EAAA/tB,QAAA,SAAAguB,GACA,GAAAC,IACAjrB,GAAAA,EACAyqB,KAAA,EACAD,MAAA,EACA/jB,OAAA,EAEAukB,GAAAtvB,MAAA,KAAAsB,QAAA,SAAAe,GACA,OAAAA,GACA,IAAA,MACA,IAAA,OACA,IAAA,QACAktB,EAAAltB,IAAA,CACA,MACA,SACAktB,EAAAL,SAAA7sB,EAAAmtB,WAAA,GACAD,EAAA1B,QAAA4B,EAAAptB,IAAAA,EAAAwS,cAAA2a,WAAA,KAGA,IAAAE,IAAAH,EAAAT,KAAA,OAAA,IAAA,KAAAS,EAAAR,IAAA,MAAA,IAAA,KAAAQ,EAAAxkB,MAAA,QAAA,IAAA,IAAAwkB,EAAA1B,OACAW,GAAAkB,GAAAH,MAQA,QAAAI,KACA,MAAAA,GArkBA,GAGA1jB,IAHAM,EAAAtB,MACAsB,EAAArG,KACApB,MAAA2D,UAAAkB,MACA4C,EAAAN,KACAqhB,EAAA,mCACAP,GACAe,eAAA,qBACA8B,yBAAA,gCACA7B,gBAAA,wBAEAK,EAAA,8BA6BApqB,EAAA,WAsFA,QAAA6rB,GAAArtB,GACA,GAAAoE,GAAAkpB,EAAAttB,EAIA,OAHAoE,KACAA,EAAA,GAEAmpB,EAAAnpB,GA1FA,GAAAmpB,IACAvuB,OAAA,YACAA,OAAA,iBACAA,OAAA,UACAA,OAAA,MACAA,OAAA,WACAA,OAAA,cACAA,OAAA,aACAA,OAAA,WACAA,OAAA,iBACAA,OAAA,gBACAA,OAAA,cACAA,OAAA,cACAA,OAAA,UACAA,OAAA,WACAA,OAAA,QACAA,OAAA,YAEAsuB,GACAE,iBAAA,EACAC,eAAA,EACAC,kBAAA,EAEAC,WAAA,EACAC,UAAA,EACAC,YAAA,EACAnrB,KAAA,EACAorB,IAAA,EACAC,MAAA,EAEAC,KAAA,EACAC,QAAA,EACAC,UAAA,EACAC,SAAA,EACAC,UAAA,EACAC,SAAA,EACAC,UAAA,EACAC,KAAA,EAEAC,MAAA,EACAC,OAAA,EACAjhB,MAAA,EACAkhB,gBAAA,EACAC,OAAA,EACAC,MAAA,EAEA7I,MAAA,EACA8I,KAAA,EACAC,QAAA,EACAC,SAAA,EAEAC,QAAA,EACAC,SAAA,EACAC,MAAA,EAEAC,QAAA,EAEAC,MAAA,EACAC,YAAA,EACAC,SAAA,EACAC,UAAA,EACAC,QAAA,EACAC,UAAA,EACAC,UAAA,EACAC,SAAA,EACAC,WAAA,EACAC,WAAA,EAGAC,UAAA,GAEAC,WAAA,GACAC,UAAA,GACAC,SAAA,GAEAC,KAAA,GACAC,OAAA,GACAC,OAAA,GACAC,OAAA,GACAC,OAAA,GAEAC,MAAA,GAYA,OAAA,UAAAvwB,EAAAyB,GAGAsI,EAAA1E,SAAArF,GACAyB,EAAAA,OAEAA,EAAAzB,MACAA,EAAAyB,EAAAzB,MAAA,GAEA,IAAA+jB,GAAAtgB,EAAAzD,EACAA,GAAA+jB,EAAA/jB,KAEAyB,EAAAsI,EAAAtB,OACA+nB,SAAA,EACAC,YAAA,GACAhvB,GAEAsiB,EAAA2G,KACAjpB,EAAAivB,UAAA3M,EAAA2G,GAGA,IAAA7f,GAAAwiB,EAAArtB,GACA0B,EAAA,GAAAmJ,GAAA7K,EAAAyB,EAIA,OAFAsI,GAAAnI,UAAAF,EAAAD,GAEA4oB,EAAA3oB,OAkBAivB,KACAC,EAAA,aAAA5xB,QACA+mB,GAAAA,MAAA,UAAA8I,KAAA,YACAgC,GAAAjB,WAAA,YAAAC,WAAA,YACAiB,EAAA,SAAA9wB,GACA,MAAA6wB,GAAA7wB,IAAA4wB,GAAA7K,EAAA/lB,IAAAA,GAEA+wB,KACAC,EAAAjnB,EAAAuI,OACA7G,KAAA,SAAAhL,EAAA6O,GACA/O,KAAA0wB,QAAAxwB,EACAF,KAAA2wB,OAAA5hB,EACA/O,KAAA4wB,cAGAxE,IAAA,SAAA7qB,EAAAgJ,GACA,GAAAsmB,GAAA7wB,KAAA4wB,UACAE,GACAvvB,GAAAA,EACAgJ,QAAAf,EAAAtB,SAAAqC,GAGAsmB,GAAAvzB,KAAAwzB,EAEA,IAAA/kB,GAAA/L,IACA,KAAA+L,EAAAglB,UAAA,CACAhlB,EAAAglB,UAAA,SAAAC,GACA,GAAAnd,GAAA7T,KACAmB,EAAAkpB,EAAA2G,GACA1yB,EAAA0yB,EAAA7F,MACA0F,EAAA9kB,EAAA6kB,UACAzG,EAAAhpB,EAAAgvB,SAGA7xB,GADAkL,EAAA7D,UAAArH,IACA6C,GAAAwF,OAAArI,IAEA6C,GAGAqI,EAAArG,KAAA0tB,EAAA,SAAAhtB,EAAAitB,GACA,GAAApoB,GAAAmL,CACA,IAAA1S,EAAA8vB,+BAAA9vB,EAAA8vB,gCACA,OAAA,CAEA,IAAA1vB,GAAAuvB,EAAAvvB,GACAgJ,EAAAumB,EAAAvmB,YACA8D,EAAA9D,EAAA8D,SACAE,EAAAhE,EAAAgE,IACAP,EAAAzD,EAAAyD,IAEA,KAAAmc,GAAAA,GAAA5f,EAAA4f,IAAA5f,EAAA4f,GAAAxlB,QAAAwlB,QAAA,CAGA,GAAA9b,EAAA,CAEA,GADA3F,EAAAif,EAAArG,QAAAngB,EAAAjB,OAAAmO,IACA3F,GAAAA,IAAAmL,EAMA,MALArK,GAAAtB,MAAA/G,GACA+vB,cAAAxoB,EACAyoB,UAAAtd,IAOA,GAAAyW,GAAAve,EAAA4kB,MACA,IAAArG,IAAAgG,GAAA,CACA,GAAAc,GAAAjwB,EAAAkwB,aACA,IAAAD,IAAAA,IAAA1oB,GAAAsR,EAAA/C,SAAAvO,EAAA0oB,IACA,OAIA5nB,EAAA7D,UAAAqI,KACA7M,EAAA6M,KAAAA,GAGAO,GACAxC,EAAA9L,OAAAsB,EAAAgJ,EAGA,IAAA/G,GAAAjC,EAAA/C,MAAAkK,EAAApK,EAEAkF,MAAA,IACArC,EAAA4pB,iBACA5pB,EAAA6pB,sBAKA,IAAAjc,GAAAhD,EAAA4kB,MAaA5kB,GAAA2kB,QAAAnF,iBACAxf,EAAA2kB,QAAAnF,iBAAAgF,EAAAxhB,GAAAhD,EAAAglB,WAAA,GAEAjY,QAAAC,KAAA,yBAAAhN,EAAA2kB,WAKAzwB,OAAA,SAAAsB,EAAAgJ,GAGA,QAAA+mB,GAAAnH,GACA,MAAA,IAAAtX,QAAA,UAAAsX,EAAAvnB,QAAA,IAAA,SAAA,WAHA2H,EAAAf,EAAAtB,SAAAqC,EAKA,IAAAgnB,EACAhnB,GAAA4f,KACAoH,EAAAD,EAAA/mB,EAAA4f,KAGAnqB,KAAA4wB,UAAA5wB,KAAA4wB,UAAApuB,OAAA,SAAAsuB,GACA,GAAAU,KAAAjwB,GAAAA,IAAAuvB,EAAAvvB,OACAgwB,GAAAA,EAAAvuB,KAAA8tB,EAAAvmB,QAAA4f,QACA5f,EAAA8D,UAAA9D,EAAA8D,UAAAyiB,EAAAvmB,QAAA8D,SAEA,QAAAmjB,IAEA,GAAAxxB,KAAA4wB,UAAAvzB,SACA2C,KAAA0wB,QAAAe,qBACAzxB,KAAA0wB,QAAAe,oBAAAlB,EAAAvwB,KAAA2wB,QAAA3wB,KAAA+wB,WAAA,GAEA/wB,KAAA+wB,UAAA,SAIAW,EAAAloB,EAAAuI,OACA7G,KAAA,SAAA2I,GACA7T,KAAA0wB,QAAA7c,EACA7T,KAAA2xB,aAKA/G,SAAA,SAAA7b,EAAA3L,EAAAmH,GAEA,GAAAiZ,GAAAtgB,EAAA6L,GACAA,EAAAyU,EAAA/jB,KACAmyB,EAAAxB,EAAArhB,GACA8iB,EAAAD,IAAAA,EAAAE,UAAAF,EAAAG,eAEA3jB,EAAApO,KAAA2xB,QAGA9wB,UAAAuN,EAAAW,KACAX,EAAAW,GAAA,GAAA0hB,GAAAzwB,KAAA0wB,QAAAmB,GAAA9iB,IAIAX,EAAAW,GAAAqd,IAAAhpB,EAAAoG,EAAAtB,OACAiiB,GAAA3G,EAAA2G,IACA5f,KAIAmgB,WAAA,SAAA3b,EAAAxN,EAAAgJ,GAEA,GAAA6D,GAAApO,KAAA2xB,SACAnO,EAAAtgB,EAAA6L,EAGA,IAFAA,EAAAyU,EAAA/jB,KAEA,CACA,GAAAuN,GAAAoB,EAAAW,EAEA/B,IACAA,EAAA/M,OAAAsB,EAAAiI,EAAAtB,OACAiiB,GAAA3G,EAAA2G,IACA5f,QAIA,KAAAwE,IAAAX,GAAA,CACA,GAAApB,GAAAoB,EAAAW,EACA/B,GAAA/M,OAAAsB,EAAAiI,EAAAtB,OACAiiB,GAAA3G,EAAA2G,IACA5f,QAMAkgB,EAAA,SAAA5W,GACA,GAAA9V,GAAAmL,EAAA2K,GACAhH,EAAA2jB,EAAAzyB,EAIA,OAHA8O,KACAA,EAAA2jB,EAAAzyB,GAAA,GAAA2zB,GAAA7d,IAEAhH,GAwIA6f,GACAsF,SAAA,GA+FA,OAvBAxoB,GAAAtB,MAAA0kB,GACAvhB,OAAApK,EAEAwO,IAAAA,EAEAtB,GAAAA,EAEAI,IAAAA,EAEAtH,MAAAojB,EAEAM,MAAAA,EAEAa,UAAAA,EAEAyG,QAAA7B,EAEAvF,KAAAA,EAEApc,QAAAA,IAIA9P,EAAAiuB,QAAAA,IAGApvB,EAAA,oBACA,YACA,UACA,YACA,SACA,WACA,aACA,SAAAmB,EAAA6K,EAAAsW,EAAAP,EAAAzL,EAAA8Y,GA8BA,QAAAsF,GAAAre,EAAAse,EAAAC,EAAAC,EAAAjvB,EAAAkvB,GACA,GAAAhzB,GAKAizB,EACAC,EALAC,KACAC,KACAC,EAAA,GACAC,EAAA5yB,KAGA6yB,GAAA,EACA1T,GAAA,CAiCA,IA/BA3V,EAAAnH,cAAA+vB,KACAC,EAAAD,EAAAU,OACA1vB,EAAAgvB,EAAAW,SACAT,EAAAF,EAAAE,MACAF,EAAAA,EAAAA,UAGA5oB,EAAA1E,SAAAstB,KACAA,EAAAY,EAAAC,OAAAb,IAEAvxB,SAAAuxB,IACAA,EAAAY,EAAAC,OAAAC,QAEAd,GAAA,IACAY,EAAAvjB,MACA2iB,EAAA,GAGA5oB,EAAAzF,WAAAsuB,IACAjvB,EAAAivB,EACAc,KAAA,SAEAd,EAAAA,GAAA,QAGAC,EACAA,GAAA,IAEAA,EAAA,EAGA9oB,EAAA1E,SAAAqtB,GAEAM,EAAAW,GAAAjB,EACAM,EAAAY,GAAAjB,EAAA,IACAK,EAAAa,GAAAjB,EACAE,EAAAgB,MACA,CAEA,IAAAj0B,IAAA6yB,GACAqB,EAAAxwB,KAAA1D,GACAqzB,GAAArzB,EAAA,IAAA6yB,EAAA7yB,GAAA,MAEA,cAAAA,IACA6f,GAAA,GAEAsT,EAAAnzB,GAAA6yB,EAAA7yB,GACAozB,EAAAp1B,KAAAkM,EAAA9G,UAAApD,IAGAizB,GAAAkB,EA2DA,MAxDAd,KACAF,EAAAlqB,GAAAoqB,EACAD,EAAAp1B,KAAAiL,IAGA6pB,EAAA,GAAA5oB,EAAAnH,cAAA8vB,KACAM,EAAAiB,GAAAhB,EAAAn1B,KAAA,MACAk1B,EAAAkB,GAAAvB,EAAA,IACAK,EAAAmB,GAAAtB,EAAA,IACAG,EAAAoB,GAAAxB,GAGAG,EAAA,SAAAzjB,GAEA,GADA8jB,GAAA,EACA9jB,EAAA,CACA,GAAAA,EAAA7O,SAAA6O,EAAAmiB,cACA,MAEAtE,GAAAnd,IAAAV,EAAA7O,OAAAqyB,EAAAC,OAEA5F,GAAAnd,IAAAoE,EAAA0f,EAAAf,EAEA1e,GAAAC,IAAAF,EAAAigB,GACA1wB,GAAAA,EAAAtC,KAAAd,OAGAoyB,EAAA,IACAxF,EAAAze,GAAA0F,EAAA0e,EAAAC,GAGAhpB,EAAAlI,SAAA,WACAuxB,GAGAL,EAAA1xB,KAAA8xB,IACA,KAAAR,EAAAE,GAAA,OAIAze,EAAAkgB,WAEAjgB,EAAAC,IAAAF,EAAA4e,GAEAL,GAAA,GACA5oB,EAAAlI,SAAA,WACAuxB,GAGAL,EAAA1xB,KAAA8xB,IACA,KAGAzT,GACA6U,EAAAngB,EAAAse,EAAA,UAAAC,EAAAhvB,GAGApD,KAGA,QAAA4T,GAAAC,EAAAogB,EAAA7wB,GAUA,MATA0Q,GAAAF,KAAAC,GACAogB,KACA7wB,GAAAoG,EAAAzF,WAAAkwB,KACA7wB,EAAA6wB,EACAA,EAAA,UAEAngB,EAAAC,IAAAF,EAAA,UAAA,GACAqe,EAAAre,GAAAsB,QAAA,EAAA+e,MAAA,OAAAD,EAAA7wB,IAEApD,KAIA,QAAAiU,GAAAJ,EAAAogB,EAAA7wB,GAeA,MAdA6wB,KACA7wB,GAAAoG,EAAAzF,WAAAkwB,KACA7wB,EAAA6wB,EACAA,EAAA,UAEA/B,EAAAre,GAAAsB,QAAA,EAAA+e,MAAA,OAAAD,EAAA,WACAngB,EAAAG,KAAAJ,GACAzQ,GACAA,EAAAtC,KAAA+S,MAIAC,EAAAG,KAAAJ,GAEA7T,KAGA,QAAAg0B,GAAAngB,EAAAgL,EAAAoV,EAAA7wB,GACA,GAAA+wB,GAAAC,SAAAvgB,EAAAkL,WACA3hB,EAAA,EACAi3B,EAAA,EACAC,EAAA,IAAAL,EAAAI,EACApV,EAAAmV,SAAAvV,GAEA0V,EAAAC,YAAA,WACAp3B,IAEAA,GAAAk3B,IAAAzgB,EAAAkL,WAAAE,EAAAkV,GAAAG,EAAAl3B,EAAA+2B,GAEA/2B,GAAAk3B,EAAA,IACAG,cAAAF,GACAnxB,GAAAoG,EAAAlI,SAAA8B,EAAA,SAEAixB,GAGA,QAAAK,GAAA7gB,EAAAogB,EAAA7wB,GAMA,MALA0Q,GAAAE,YAAAH,GACAD,EAAAC,EAAAogB,EAAA7wB,GAEA6Q,EAAAJ,EAAAogB,EAAA7wB,GAEApD,KAGA,QAAA20B,GAAA9gB,EAAAogB,EAAA9e,EAAA2d,EAAA1vB,GAEA,MADA8uB,GAAAre,GAAAsB,QAAAA,GAAA8e,EAAAnB,EAAA1vB,GACApD,KAGA,QAAA40B,GAAA/gB,EAAAogB,EAAAnB,EAAA1vB,GACA,GAAAlD,GAAA4T,EAAAC,IAAAF,EAAA,UAUA,OATA3T,GAAA,EACA4T,EAAAC,IAAAF,EAAA,UAAA,GAEA3T,EAAA,EAEA4T,EAAAF,KAAAC,GAEA8gB,EAAA9gB,EAAAogB,EAAA/zB,EAAA4yB,EAAA1vB,GAEApD,KAGA,QAAA60B,GAAAhhB,EAAAogB,EAAAnB,EAAA1vB,GACA,GACA2vB,GACAxoB,IAwBA,OAtBAf,GAAAnH,cAAA4xB,IACA1pB,EAAAuoB,OAAAmB,EAAAnB,OACAvoB,EAAA6nB,SAAA6B,EAAA7B,SACAW,EAAAkB,EAAAlB,WAEAxoB,EAAA6nB,SAAA6B,EACA7wB,GACA2vB,EAAA3vB,EACAmH,EAAAuoB,OAAAA,GAEAC,EAAAD,GAGAvoB,EAAAwoB,SAAA,WACAjf,EAAAG,KAAAJ,GACAkf,GACAA,EAAAjyB,KAAA+S,IAIA8gB,EAAA9gB,EAAAtJ,EAAA,GAEAvK,KAGA,QAAA80B,GAAAjhB,EAAAogB,EAAAc,EAAAC,GAMA,MALAlhB,GAAAE,YAAAH,GACA+gB,EAAA/gB,EAAAogB,EAAAnB,OAAA1vB,UAEAyxB,EAAAhhB,EAAAogB,EAAAnB,OAAA1vB,UAEApD,KAGA,QAAAi1B,GAAAphB,EAAAue,EAAAhvB,GAGA,GAAAoV,GAAA1E,EAAAC,IAAAF,EAAA,WAGAD,GAAAC,GAGAC,EAAAC,IAAAF,GACA2E,SAAA,WACA0c,WAAA,UAIA,IAAA7X,GAAAvJ,EAAAC,IAAAF,EAAA,cACA0J,EAAAzJ,EAAAC,IAAAF,EAAA,iBACA4J,EAAA3J,EAAAC,IAAAF,EAAA,eACA8J,EAAA7J,EAAAC,IAAAF,EAAA,kBACA+E,EAAA9E,EAAAC,IAAAF,EAAA,SA+BA,OA5BAC,GAAAC,IAAAF,GACA2E,SAAAA,EACA0c,WAAA,UACAC,SAAA,SACAvc,OAAA,EACAyE,UAAA,EACAE,aAAA,EACAE,WAAA,EACAE,cAAA,IAIAuU,EAAAre,GACA+E,OAAAA,EACAyE,UAAAA,EACAE,aAAAA,EACAE,WAAAA,EACAE,cAAAA,IAEAyU,SAAAA,EACAW,SAAA,WACA3vB,GACAA,EAAA5E,MAAAqV,MAMA7T,KAGA,QAAAo1B,GAAAvhB,EAAAue,EAAAhvB,GAEA,GAAAmc,EAAA3G,OAAA/E,GAAA,EAAA,CAGA,GAGA+E,IAHA9E,EAAAC,IAAAF,EAAA,YAGAC,EAAAC,IAAAF,EAAA,WACAwJ,EAAAvJ,EAAAC,IAAAF,EAAA,cACA0J,EAAAzJ,EAAAC,IAAAF,EAAA,iBACA4J,EAAA3J,EAAAC,IAAAF,EAAA,eACA8J,EAAA7J,EAAAC,IAAAF,EAAA,iBAGAC,GAAAC,IAAAF,GACAqhB,WAAA,UACAC,SAAA,SACAvc,OAAAA,EACAyE,UAAAA,EACAE,aAAAA,EACAE,WAAAA,EACAE,cAAAA,IAIAuU,EAAAre,GACA+E,OAAA,EACAyE,UAAA,EACAE,aAAA,EACAE,WAAA,EACAE,cAAA,IAGAyU,SAAAA,EACAiD,OAAA,EACAtC,SAAA,WACA9e,EAAAJ,GACAC,EAAAC,IAAAF,GACAqhB,WAAA,UACAC,SAAA,SACAvc,OAAAA,EACAyE,UAAAA,EACAE,aAAAA,EACAE,WAAAA,EACAE,cAAAA,IAEAva,GACAA,EAAA5E,MAAAqV,MAKA,MAAA7T,MAIA,QAAAs1B,GAAAzhB,EAAAue,EAAAhvB,GAUA,MAPA,IAAAmc,EAAA3G,OAAA/E,GACAohB,EAAAphB,EAAAue,EAAAhvB,GAIAgyB,EAAAvhB,EAAAue,EAAAhvB,GAEApD,KAIA,QAAAgzB,KACA,MAAAA,GA3YA,GAAAI,GACAC,EACAC,EACAiC,EACA7B,EACAC,EACAE,EACAD,EAEAL,EAAAzT,EAAAN,kBAAA,gBACAiU,EAAA3T,EAAAN,kBAAA,iBAEAgU,EAAA,8EACAjrB,EAAAuX,EAAAG,eAAA,YACA6T,IAwZA,OArZAA,GAAAV,EAAAtT,EAAAJ,qBAAA,mBACAoU,EAAAT,EAAAvT,EAAAJ,qBAAA,uBACAoU,EAAAyB,EAAAzV,EAAAJ,qBAAA,oBACAoU,EAAAR,EAAAxT,EAAAJ,qBAAA,8BAAA,GAEAoU,EAAAJ,EAAA5T,EAAAJ,qBAAA,wBACAoU,EAAAH,EAAA7T,EAAAJ,qBAAA,wBACAoU,EAAAF,EAAA9T,EAAAJ,qBAAA,qBACAoU,EAAAD,EAAA/T,EAAAJ,qBAAA,+BAAA,GAqXAlW,EAAAtB,MAAA8qB,GACAvjB,KAAA,EAEAwjB,QACAC,OAAA,IACAsC,KAAA,IACAC,KAAA,KAGAvD,QAAAA,EACA0C,OAAAA,EACAC,QAAAA,EACAF,OAAAA,EACAG,WAAAA,EACA7gB,KAAAA,EACA+f,YAAAA,EAEAiB,UAAAA,EACAK,YAAAA,EACAF,QAAAA,EACAxhB,KAAAA,EACA8gB,OAAAA,IAGA/1B,EAAAq0B,GAAAA,IAEAx1B,EAAA,uBACA,YACA,UACA,UACA,UACA,YACA,WACA,SACA,WACA,QACA,SAAAmB,EAAA6K,EAAAwQ,EAAAkP,EAAA0D,EAAAjF,EAAApI,EAAAzL,EAAAkf,GAuCA,QAAA0C,GAAAC,EAAAhyB,GACA,MAAA,YACA,GAAAoI,GAAA/L,KACAqE,EAAAuC,EAAA9F,KAAA9B,WACAwE,EAAA6hB,EAAAvnB,IAAAiO,EAAA,SAAA6pB,EAAA/xB,GACA,MAAA8xB,GAAAn3B,MAAAmF,GAAAiyB,GAAAjvB,OAAAtC,KAEA,OAAAghB,GAAAjc,EAAA5F,KAIA,QAAAqyB,GAAAF,EAAAhyB,EAAAqe,GACA,MAAA,UAAA3T,GACA,GAEA7K,IADAoD,EAAA9F,KAAA9B,WACAgB,KAAAlC,IAAA,SAAA+F,EAAA+xB,GAEA,GAAAA,EAAAhU,cACA,MAAA+T,GAAAn3B,MAAAmF,EAAAqe,GAAA4T,IAAAA,EAAAvnB,MAGA,OAAA2T,IAAA3T,EACA7K,EAAAhB,OAAA6L,GAEA7K,GAKA,QAAAsyB,GAAAH,EAAAhyB,EAAAqe,GACA,MAAA,UAAA+T,EAAA1nB,GAEAzH,EAAA9F,KAAA9B,UACA6B,UAAAwN,IACAA,EAAA0nB,EACAA,EAAAl1B,OAEA,IAAA2C,GAAAxD,KAAAlC,IAAA,SAAA+F,EAAA+xB,GAEA,GAAAA,EAAAhU,cACA,MAAA+T,GAAAn3B,MAAAmF,EAAAqe,GAAA4T,EAAAG,IAAAH,EAAAvnB,EAAA0nB,KAGA,OAAA/T,IAAA3T,EACA7K,EAAAhB,OAAA6L,GAEA7K,GAMA,QAAAwyB,GAAAL,EAAAhyB,GACA,MAAA,YACA,GAAAoI,GAAA/L,KACAqE,EAAAuC,EAAA9F,KAAA9B,UAIA,OAHAgB,MAAAmD,KAAA,SAAAU,GACA8xB,EAAAn3B,MAAAmF,GAAA3D,MAAA2G,OAAAtC,MAEA0H,GAIA,QAAAkqB,GAAAN,EAAAhyB,EAAAuyB,GACA,MAAA,UAAAC,GACA,GAAApqB,GAAA/L,KACAqE,EAAAuC,EAAA9F,KAAA9B,UAKA,OAJAT,GAAAuC,KAAAiL,EAAA,SAAA6pB,EAAA/xB,GACAH,EAAAkyB,EAAAO,EAAAtyB,EAAAqyB,EAAAN,GACAD,GAAAn3B,MAAAmF,GAAAiyB,EAAAO,GAAAxvB,OAAAtC,EAAAuC,MAAA,OAEAmF,GAIA,QAAAqqB,GAAAT,EAAAhyB,GACA,MAAA,YACA,GAAAoI,GAAA/L,KACAqE,EAAAuC,EAAA9F,KAAA9B,UACA,OAAAq3B,GAAAv1B,KAAAiL,EAAA,SAAA6pB,GACA,MAAAD,GAAAn3B,MAAAmF,GAAAiyB,GAAAjvB,OAAAtC,OAKA,QAAAiyB,GAAAX,EAAAhyB,EAAAuyB,GACA,MAAA,UAAA7vB,EAAAtD,GACA,GAAAgJ,GAAA/L,KACAqE,EAAAuC,EAAA9F,KAAA9B,UAEA,OAAAwK,GAAAnH,cAAAgE,IAAAmD,EAAA7D,UAAA5C,IACAxE,EAAAuC,KAAAiL,EAAA,SAAA6pB,EAAA/xB,GACA,GAAA0yB,EAEAA,GADAL,EACAxyB,EAAAkyB,EAAA7yB,EAAAc,EAAAqyB,EAAAN,EAAAvvB,IAEAtD,EAEA4yB,EAAAn3B,MAAAmF,GAAAiyB,GAAAjvB,OAAAtC,MAEA0H,GAEAA,EAAA,GACA4pB,EAAAn3B,MAAAmF,GAAAoI,EAAA,GAAA1F,IADA,QAQA,QAAAmwB,GAAAb,EAAAhyB,EAAAuyB,GACA,MAAA,UAAAnzB,GACA,GAAAgJ,GAAA/L,IAEA,OAAAwJ,GAAA7D,UAAA5C,IACAxE,EAAAuC,KAAAiL,EAAA,SAAA6pB,EAAA/xB,GACA,GAAA0yB,EAEAA,GADAL,EACAxyB,EAAAkyB,EAAA7yB,EAAAc,EAAAqyB,EAAAN,IAEA7yB,EAEA4yB,EAAAn3B,MAAAmF,GAAAiyB,EAAAW,MAEAxqB,GAEAA,EAAA,GACA4pB,EAAAn3B,MAAAmF,GAAAoI,EAAA,KADA,QApKA,GAQA0qB,GARAJ,EAAAt0B,MAAA2D,UAAA2wB,KACA/4B,EAAAyE,MAAA2D,UAAApI,KAGAsJ,GAFA7E,MAAA2D,UAAAoP,MACA/S,MAAA2D,UAAAiB,OACA5E,MAAA2D,UAAAkB,OAEApE,GADAT,MAAA2D,UAAA5H,IACAiE,MAAA2D,UAAAlD,QACAjE,EAAAwD,MAAA2D,UAAAnH,QAGAm4B,EAAA,2CAEAhzB,EAAA8F,EAAA9F,QACAH,EAAAiG,EAAAjG,YACAuB,EAAA0E,EAAA1E,SACAsE,EAAAI,EAAAJ,KACArF,EAAAyF,EAAAzF,WAEAtE,EAAA+J,EAAA/J,KACA2C,EAAAoH,EAAApH,QAMApB,GAJAwI,EAAAhE,SAEAgE,EAAAvE,WAEAuE,EAAAxI,UAmJA21B,GAjJAntB,EAAAnH,cAEAmH,EAAAlH,QAEAkH,EAAAlG,QAEAkG,EAAAqI,UAEArI,EAAA9G,UACAilB,EAAAhO,SAwIAnQ,EAAAuI,OACA5G,UAAA,aACAD,KAAA,SAAAmD,EAAA1K,GACA,GACA+E,GAAA+M,EAAA3C,EAAA5R,EADA6K,EAAA/L,IAmDA,IAhDAqO,IACAtC,EAAApI,QAAAA,EAAAA,GAAAqW,EAAA1C,MAEAxS,EAAAuJ,IAEAtC,EAAAsC,SAAAA,EAGA3F,EADA,MAAA2F,EAAA4D,OAAA,IAAA,MAAA5D,EAAA4D,OAAA5D,EAAAhR,OAAA,IAAAgR,EAAAhR,QAAA,GACA,KAAAgR,EAAA,MAEAqoB,EAAAE,KAAAvoB,GAGA3F,EACAA,EAAA,IAEA+M,EAAAuE,EAAAtD,eAAArI,GAEA7E,EAAAnH,cAAAsB,KACAzC,EAAAyC,KAIAmP,EAAA6U,EAAAvG,KAAA1Y,EAAA,GAAAsR,EAAApC,SAAAjU,IAEAmP,IAEA2C,GAAA3C,KAMA2C,EAAAkS,EAAApG,YAAA5d,EAAA0K,IAKAoH,EAFArT,EAAAiM,GAEAA,GAGAA,IAOAoH,IAEAnY,EAAAkB,MAAAuN,EAAA0J,GAEAvU,GACA,IAAA,GAAAmF,KAAAnF,GAEAsI,EAAAzF,WAAA/D,KAAAqG,IACArG,KAAAqG,GAAAnF,EAAAmF,IAEArG,KAAAwQ,KAAAnK,EAAAnF,EAAAmF,GAMA,OAAA0F,KAEAhK,QAEA2f,EAAA,WAsWA,QAAAmV,GAAAlB,EAAAhyB,EAAAuyB,GACA,MAAA,UAAAlgB,GACA,GAAA8gB,GAAArhB,EAAAjM,EAAA1L,IAAAkB,UAAA,SAAA4E,GAEA,MADAkzB,GAAAr3B,EAAAmE,GACA,UAAAkzB,GAAA,SAAAA,GAAA,MAAAlzB,EACAA,EAAAoW,EAAAtD,eAAA9S,IAEA,OAAA6R,GAAApY,OAAA,EACA2C,MAEAA,KAAAmD,KAAA,SAAAU,GACA8xB,EAAAn3B,MAAAmF,GAAA3D,KAAAyV,EAAA5R,EAAA,MAEA7D,OAlXAy2B,EAAA,SAAA7xB,GACA,MAAAA,aAAA+xB,IAEAzrB,KAAA,SAAAmD,EAAA1K,GACA,MAAA,IAAAgzB,GAAAtoB,EAAA1K,GAGA,IAAA0hB,GAAA,SAAAhX,EAAA1K,GACA,MAAAI,GAAAsK,OACAue,GAAAjC,MAAA,WACAtc,EAAAgX,KAEAoR,EAAApoB,GACAA,EAEA1K,GAAA8yB,EAAA9yB,IAAAmB,EAAAuJ,GACA1K,EAAAke,KAAAxT,GAEAnD,KAAAmD,EAAA1K,GAIA0hB,GAAA9jB,GAAAo1B,EAAAjxB,UACA8D,EAAAtB,MAAAmd,EAAA9jB,IAIAzD,IAAA,SAAAyD,GACA,MAAA8jB,GAAAjc,EAAAI,EAAA1L,IAAAkC,KAAA,SAAA+2B,EAAA35B,GACA,MAAAmE,GAAAT,KAAAi2B,EAAA35B,EAAA25B,QAIAnwB,MAAA,WACA,MAAAye,GAAAze,EAAApI,MAAAwB,KAAAhB,aAGAuR,IAAA,SAAA1M,GACA,MAAAhD,UAAAgD,EAAA+C,EAAA9F,KAAAd,MAAAA,KAAA6D,GAAA,EAAAA,EAAAA,EAAA7D,KAAA3C,SAGA25B,QAAA,WACA,MAAApwB,GAAA9F,KAAAd,OAGAkc,KAAA,WACA,MAAAlc,MAAA3C,QAGA4C,OAAA+1B,EAAAhc,EAAA/Z,OAAA+Z,GAEA7W,KAAA,SAAAC,GAEA,MADAoG,GAAArG,KAAAnD,KAAAoD,GACApD,MAGAwC,OAAA,SAAA6L,GACA,MAAAtK,GAAAsK,GAAArO,KAAA+lB,IAAA/lB,KAAA+lB,IAAA1X,IACAgX,EAAA7iB,EAAA1B,KAAAd,KAAA,SAAAmT,GACA,MAAAwU,GAAA1G,QAAA9N,EAAA9E,OAIA+d,IAAA,SAAA/d,EAAA1K,GACA,MAAA0hB,GAAAjc,EAAApJ,KAAAg3B,UAAArwB,OAAA0e,EAAAhX,EAAA1K,GAAAqzB,cAGAC,GAAA,SAAA5oB,GACA,MAAArO,MAAA3C,OAAA,GAAAsqB,EAAA1G,QAAAjhB,KAAA,GAAAqO,IAGA0X,IAAA,SAAA1X,GACA,GAAAoH,KACA,IAAA1R,EAAAsK,IAAAxN,SAAAwN,EAAAvN,KACAd,KAAAmD,KAAA,SAAAU,GACAwK,EAAAvN,KAAAd,KAAA6D,IAAA4R,EAAAnY,KAAA0C,YAEA,CACA,GAAAk3B,GAAA,gBAAA7oB,GAAArO,KAAAwC,OAAA6L,GACA9K,EAAA8K,IAAAtK,EAAAsK,EAAA5L,MAAAmE,EAAA9F,KAAAuN,GAAAgX,EAAAhX,EACArO,MAAAzB,QAAA,SAAAw4B,GACAG,EAAAvyB,QAAAoyB,GAAA,GAAAthB,EAAAnY,KAAAy5B,KAGA,MAAA1R,GAAA5P,IAGAjR,IAAA,SAAA6J,GACA,MAAArO,MAAAwC,OAAA,WACA,MAAAxB,GAAAqN,GACA2L,EAAA/C,SAAAjX,KAAAqO,GACAgX,EAAArlB,MAAA6hB,KAAAxT,GAAA6N,UAIA3W,GAAA,SAAA1B,GACA,MAAAA,QAAA7D,KAAA4G,MAAA/C,GAAA7D,KAAA4G,MAAA/C,GAAAA,EAAA,IAGAyJ,MAAA,WACA,MAAAtN,MAAAuF,GAAA,IAGAyc,KAAA,WACA,MAAAhiB,MAAAuF,QAGAsc,KAAAgU,EAAAlO,EAAApG,YAAAoG,GAEArG,QAAAuU,EAAAlO,EAAArG,QAAAqG,GAaAwP,QAAAtB,EAAAlO,EAAAzG,UAAAyG,GAEAyP,aAAAtB,EAAAnO,EAAAzG,UAAAyG,GAGA1c,OAAA4qB,EAAAlO,EAAA1c,OAAA0c,GAEAhO,SAAAkc,EAAAlO,EAAAhO,SAAAgO,GAEA9R,SAAA6f,EAAA1b,EAAAnE,SAAAmE,GAEA9D,MAAA8f,EAAAhc,EAAA9D,MAAA8D,GAGAyO,MAAA,SAAAnU,GACA,MAAA9K,GAAA1L,IAAAkC,KAAA,SAAA+2B,GACA,MAAAA,GAAAziB,MAIAV,KAAAoiB,EAAAhD,EAAApf,KAAAof,GAEAqE,YAAA,SAAAC,GACA,MAAAt3B,MAAAS,OAAA62B,GAAAr3B,UAGAs3B,KAAA,SAAAC,GACA,GAAA7B,GAAA5xB,EAAAyzB,EACA,IAAAx3B,KAAA,KAAA21B,EACA,GAAA3e,GAAAqO,EAAAmS,GAAAjnB,IAAA,GACAvO,EAAAgV,EAAAtD,YAAA1T,KAAA3C,OAAA,CAEA,OAAA2C,MAAAmD,KAAA,SAAAjE,GACAmmB,EAAArlB,MAAAy3B,QACA9B,EAAA6B,EAAA12B,KAAAd,KAAAd,GACA8C,EAAAgV,EAAArB,WAAA,GAAAqB,MAKAygB,QAAA,SAAAC,GACA,GAAA13B,KAAA,GAAA,CACAqlB,EAAArlB,KAAA,IAAAS,OAAAi3B,EAAArS,EAAAqS,GAGA,KAFA,GAAA/d,IAEAA,EAAA+d,EAAA/d,YAAAtc,QACAq6B,EAAA/d,EAAArM,OAEA+X,GAAAqS,GAAAjhB,OAAAzW,MAEA,MAAAA,OAGA23B,UAAA,SAAAD,GACA,GAAA/B,GAAA5xB,EAAA2zB,EACA,OAAA13B,MAAAmD,KAAA,SAAAjE,GACA,GAAA6M,GAAAsZ,EAAArlB,MACA6V,EAAA9J,EAAA8J,WACAmB,EAAA2e,EAAA+B,EAAA52B,KAAAd,KAAAd,GAAAw4B,CACA7hB,GAAAxY,OAAAwY,EAAA4hB,QAAAzgB,GAAAjL,EAAA0K,OAAAO,MAIA+C,OAAA,SAAA1L,GAWA,MAVA,KAAArO,KAAAiL,SAAA0O,WAAAtc,OAEA2C,KAAAiL,OAAAoD,GAAA0X,IAAA,QAAA5iB,KAAA,WACAkiB,EAAArlB,MAAAq3B,YAAA1rB,SAAAyL,eAAApX,KAAA+V,WAAA,GAAA+S,gBAGA9oB,KAAAiL,SAAA9H,KAAA,WACAkiB,EAAArlB,MAAAq3B,YAAAhS,EAAArlB,MAAA2Z,cAGA3Z,MAGAgC,MAAA,WACA,MAAAhC,MAAAlC,IAAA,WACA,MAAAkC,MAAA2V,WAAA,MAIA1B,KAAA+hB,EAAAhD,EAAA/e,KAAA+e,GAEA0B,OAAA,SAAAlI,GACA,MAAAxsB,MAAAmD,KAAA,WACA,GAAA4zB,GAAA1R,EAAArlB,OACAa,SAAA2rB,EAAA,QAAAuK,EAAAhjB,IAAA,WAAAyY,GAAAuK,EAAAnjB,OAAAmjB,EAAA9iB,UAIA/C,KAAA,SAAA7C,GACA,MAAAgX,GAAArlB,KAAAyoB,MAAA,2BAAAjmB,OAAA6L,GAAA,MAGAupB,QAAA/B,EAAAlO,EAAA1F,gBAAA0F,GAEAxnB,KAAA,SAAAkO,GACA,MAAAgX,GAAArlB,KAAAyoB,MAAA,uBAAAjmB,OAAA6L,GAAA,MAGAwpB,QAAAhC,EAAAlO,EAAAtF,aAAAsF,GAEApF,SAAAsT,EAAAlO,EAAApF,SAAAoF,GAEA3R,KAAAwgB,EAAAxc,EAAAhE,KAAAgE,EAAAA,EAAAhE,MAEAqB,KAAAmf,EAAAtN,EAAA7R,KAAA6R,EAAAA,EAAA7R,MAEA7G,KAAA8lB,EAAApN,EAAA1Y,KAAA0Y,EAAAA,EAAA1Y,MAEAmY,WAAAqN,EAAA9M,EAAAP,WAAAO,GAEA9gB,KAAAkuB,EAAApN,EAAA9gB,KAAA8gB,EAAAA,EAAA9gB,MAEAwgB,WAAAoN,EAAA9M,EAAAN,WAAAM,GAEAlb,KAAAsoB,EAAApN,EAAAlb,KAAAkb,EAAAA,EAAAlb,MAEAwa,WAAAwN,EAAA9M,EAAAV,WAAAU,GAEAzY,IAAA+lB,EAAAtN,EAAAzY,IAAAyY,EAAAA,EAAAzY,KAEAhK,OAAA+vB,EAAAjX,EAAAxB,SAAAwB,EAAAA,EAAAxB,UAEAvJ,MAAA8hB,EAAAxiB,EAAAC,IAAAD,GAEAC,IAAAuiB,EAAAxiB,EAAAC,IAAAD,GAEA5U,MAAA,SAAA02B,GACA,MAAAA,GACA51B,KAAA2E,QAAA0gB,EAAAuQ,GAAA,IAEA51B,KAAAiL,SAAA0O,WAAAhV,QAAA3E,KAAA,KAKA2U,SAAAyhB,EAAAtiB,EAAAa,SAAAb,GAGAI,SAAA+hB,EAAAniB,EAAAI,SAAAJ,EAAAA,EAAA/J,WAGA6K,YAAAqhB,EAAAniB,EAAAc,YAAAd,EAAAA,EAAA/J,WAGA8K,YAAAohB,EAAAniB,EAAAe,YAAAf,EAAAA,EAAA/J,WAEAgV,UAAAyX,EAAAjX,EAAAR,UAAAQ,GAEAT,WAAA0X,EAAAjX,EAAAT,WAAAS,GAEA/G,SAAA,WACA,GAAAxY,KAAA3C,OAAA,CAEA,GAAAu4B,GAAA51B,KAAA,EAEA,OAAAuf,GAAAvD,iBAAA4Z,KAGA9a,aAAA4a,EAAAnW,EAAAzE,aAAAyE,KAIA8F,EAAA9jB,GAAAu2B,OAAAzS,EAAA9jB,GAAAtB,OAEAolB,EAAA9jB,GAAA+uB,MAAA,SAAAyH,EAAAC,GACA,MAAAh4B,MAAAqvB,WAAA0I,GAAAzI,WAAA0I,GAAAD,IAGA1S,EAAA9jB,GAAA2a,KAAAsa,EAAAjX,EAAArD,KAAAqD,GAEA8F,EAAA9jB,GAAAoX,MAAA6d,EAAAjX,EAAA5G,MAAA4G,EAAAA,EAAA5G,OAEA0M,EAAA9jB,GAAAqX,OAAA4d,EAAAjX,EAAA3G,OAAA2G,EAAAA,EAAA3G,SAEA,QAAA,UAAAra,QAAA,SAAA8d,GACA,GAAA4b,GAAA5b,EAAAzZ,QAAA,IAAA,SAAAs1B,GACA,MAAAA,GAAA,GAAApmB,eAGAuT,GAAA9jB,GAAA,QAAA02B,GAAA,SAAAE,EAAAp1B,GAWA,GAVA/D,UAAA3B,OACA,iBAAA86B,KACAp1B,EAAAo1B,EACAA,GAAA,IAGAA,GAAA,EACAp1B,EAAAlC,QAGAA,SAAAkC,EAAA,CACA,GAAAg0B,GAAA/2B,KAAA,EACA,KAAA+2B,EACA,MAEA,IAAAqB,GAAA7Y,EAAArD,KAAA6a,EACA,IAAAoB,EAAA,CACA,GAAAE,GAAA9Y,EAAAzD,cAAAib,EACAqB,GAAAzf,MAAAyf,EAAAzf,MAAA0f,EAAA3f,KAAA2f,EAAAhd,MACA+c,EAAAxf,OAAAwf,EAAAxf,OAAAyf,EAAA5f,IAAA4f,EAAA9c,OAEA,MAAA,UAAAc,EAAA+b,EAAAzf,MAAAyf,EAAAxf,OAEA,MAAA5Y,MAAAmD,KAAA,SAAAU,EAAAkzB,GACA,GAAAuB,MACAD,EAAA9Y,EAAAzD,cAAAib,EACA,WAAA1a,GACAic,EAAA3f,MAAA5V,EACAo1B,IACAG,EAAA3f,MAAA2f,EAAA3f,MAAA0f,EAAA3f,KAAA2f,EAAAhd,SAGAid,EAAA1f,OAAA7V,EACAo1B,IACAG,EAAA1f,OAAA0f,EAAA1f,OAAAyf,EAAA5f,IAAA4f,EAAA9c,SAGAgE,EAAArD,KAAA6a,EAAAuB,QAOAjT,EAAA9jB,GAAA8d,WAAAmX,EAAAjX,EAAA5G,MAAA4G,EAAAA,EAAA5G,OAEA0M,EAAA9jB,GAAA+d,YAAAkX,EAAAjX,EAAA3G,OAAA2G,EAAAA,EAAA3G,OAGAoB,GAAAN,QAgDA,OA5BA2L,GAAA9jB,GAAAZ,MAAAk2B,EAAA7c,EAAArZ,MAAAqZ,GAEAqL,EAAA9jB,GAAA8W,QAAAwe,EAAA7c,EAAA3B,QAAA2B,GAEAqL,EAAA9jB,GAAAd,OAAAo2B,EAAA7c,EAAAvZ,OAAAuZ,GAEAqL,EAAA9jB,GAAAkV,OAAAogB,EAAA7c,EAAAvD,OAAAuD,GAEAqL,EAAA9jB,GAAAg3B,YAAA,SAAAviB,GAEA,MADAqP,GAAArP,GAAArV,MAAAX,MACAA,MAGAqlB,EAAA9jB,GAAA6W,aAAA,SAAApC,GAEA,MADAqP,GAAArP,GAAAvV,OAAAT,MACAA,MAGAqlB,EAAA9jB,GAAAi3B,SAAA,SAAAxiB,GAEA,MADAqP,GAAArP,GAAAS,OAAAzW,MACAA,MAGAqlB,EAAA9jB,GAAAk3B,UAAA,SAAAziB,GAEA,MADAqP,GAAArP,GAAAqC,QAAArY,MACAA,MAGAqlB,IAyJA,OAtJA,UAAAA,GACAA,EAAA9jB,GAAA4M,GAAA6nB,EAAApJ,EAAAze,GAAAye,GAEAvH,EAAA9jB,GAAAkO,IAAAumB,EAAApJ,EAAAnd,IAAAmd,GAEAvH,EAAA9jB,GAAAkN,QAAAunB,EAAApJ,EAAAne,QAAAme,GAGA,uLAEA3vB,MAAA,KAAAsB,QAAA,SAAAwQ,GACAsW,EAAA9jB,GAAAwN,GAAA,SAAAf,EAAA5K,GACA,MAAA,KAAApE,WACAgB,KAAAmO,GAAAY,EAAAf,EAAA5K,GACApD,KAAAyO,QAAAM,MAKAsW,EAAA9jB,GAAAgN,IAAA,SAAAQ,EAAAV,EAAAL,EAAA5K,GAYA,MAXAoG,GAAA1E,SAAAuJ,IAAA7E,EAAAzF,WAAAX,KACAA,EAAA4K,EACAA,EAAAK,EACAA,EAAA,MAGA7E,EAAAzF,WAAAiK,KACA5K,EAAA4K,EACAA,EAAA,MAGAhO,KAAAmO,GAAAY,EAAAV,EAAAL,EAAA5K,EAAA,IAGAiiB,EAAA9jB,GAAA2wB,QAAA8D,EAAAhD,EAAAd,QAAAc,GAEA3N,EAAA9jB,GAAAqS,KAAAoiB,EAAAhD,EAAApf,KAAAof,GACA3N,EAAA9jB,GAAA0S,KAAA+hB,EAAAhD,EAAA/e,KAAA+e,GACA3N,EAAA9jB,GAAAm3B,OAAA1C,EAAAhD,EAAA0F,OAAA1F,GACA3N,EAAA9jB,GAAAozB,OAAAqB,EAAAhD,EAAA2B,OAAA3B,GACA3N,EAAA9jB,GAAAqzB,OAAAoB,EAAAhD,EAAA4B,OAAA5B,GACA3N,EAAA9jB,GAAAszB,QAAAmB,EAAAhD,EAAA6B,QAAA7B,GACA3N,EAAA9jB,GAAAuzB,WAAAkB,EAAAhD,EAAA8B,WAAA9B,GAEA3N,EAAA9jB,GAAA0zB,UAAAe,EAAAhD,EAAAiC,UAAAjC,GACA3N,EAAA9jB,GAAA+zB,YAAAU,EAAAhD,EAAAsC,YAAAtC,GACA3N,EAAA9jB,GAAA6zB,QAAAY,EAAAhD,EAAAoC,QAAApC,IACAtR,GAGA,SAAA2D,GACAA,EAAA9jB,GAAAkY,IAAA,WACA,MAAAzZ,MAAA24B,YAAAtT,KAGAA,EAAA9jB,GAAAq3B,QAAA,WACA,MAAA54B,MAAAosB,IAAApsB,KAAA24B,YAAAtT,MAGAA,EAAA9jB,GAAAs3B,QAAA,SAAAxqB,GACA,MAAArO,MAAA24B,WACAtqB,EACArO,KAAAosB,IAAApsB,KAAA24B,WAAAn2B,OAAA6L,IAEArO,KAAAosB,IAAApsB,KAAA24B,YAGA34B,MAIA,6EAAA/C,MAAA,KAAAsB,QAAA,SAAA+V,GACA,GAAA/S,GAAA8jB,EAAA9jB,GAAA+S,EACA+Q,GAAA9jB,GAAA+S,GAAA,WACA,GAAAtJ,GAAAzJ,EAAA/C,MAAAwB,KAAAhB,UAEA,OADAgM,GAAA2tB,WAAA34B,KACAgL,MAGA0W,GAGA,SAAA2D,GACAA,EAAA9jB,GAAAmgB,MAAA2D,EAAA9jB,GAAAsgB,KAEAwD,EAAA9jB,GAAAu3B,MAAA,SAAA5gB,EAAAM,GAwBA,MALAhP,GAAA1E,SAAAoT,GACAA,EAAAyP,EAAAhG,WAAAzJ,GACAue,EAAAve,KACAA,EAAAA,EAAA,IAEAlY,KAAAmD,KAAA,SAAA/F,EAAA0V,GACA,OAAA0F,GACA,IAAA,SACAwB,EAAAvZ,OAAAyX,EAAApF,EACA,MACA,KAAA,QACAkH,EAAArZ,MAAAuX,EAAApF,EACA,MACA,KAAA,UACAkH,EAAApX,QAAAsV,EAAApF,EACA,MACA,KAAA,OACAkH,EAAA9D,MAAAgC,GACA8B,EAAAvD,OAAAyB,EAAApF,EACA,MACA,KAAA,QACAkH,EAAA3B,QAAAH,EAAApF,EACA,MAEA,SACAkH,EAAAvD,OAAAyB,EAAApF,OAKAuS,EAAA9jB,GAAAw3B,WAAA,SAAAC,EAAAxgB,GAIA,MAHAwgB,GAAA1wB,WACA0wB,EAAAxvB,EAAAnB,WAAA2wB,EAAA1wB,SAAA0wB,IAEAh5B,KAAAyW,OAAAuiB,IAGA3T,EAAA9jB,GAAA03B,aAAA,SAAAC,EAAAC,GAGA,MAFAn5B,MAAA4U,YAAAukB,GACAn5B,KAAAkU,SAAAglB,GACAl5B,OAGA0hB,GAGA/iB,EAAA+iB,MAAAA,IAEAlkB,EAAA,sBACA,YACA,UACA,UACA,WACA,SACA,YACA,WACA,SAAAmB,EAAA6K,EAAAwQ,EAAAlG,EAAAyL,EAAAqN,EAAAlL,GAkIA,QAAA5V,GAAA6pB,GACA,GAAAyD,KAEA,UAAA,OAAAC,GAAAC,KAAA,EAAAC,OAAA,IAAA,aACA,SAAA,OAAAF,GAAAC,KAAA,EAAAC,OAAA,IAAA,aACA,SAAA,WAAAF,GAAAE,OAAA,MAEAC,EAAA,UACAvtB,GACAutB,MAAA,WACA,MAAAA,IAEAC,OAAA,WAEA,MADA7rB,GAAAhB,KAAA5N,WAAA8N,KAAA9N,WACAgB,MAEAuM,KAAA,WACA,GAAAmtB,GAAA16B,SACA,OAAA8M,GAAA,SAAAhF,GACA0C,EAAArG,KAAAi2B,EAAA,SAAAh8B,EAAAu8B,GACA,GAAAp4B,GAAA8jB,EAAAthB,WAAA21B,EAAAt8B,KAAAs8B,EAAAt8B,EACAwQ,GAAA+rB,EAAA,IAAA,WACA,GAAAC,GAAAr4B,GAAAA,EAAA/C,MAAAwB,KAAAhB,UACA,IAAA46B,GAAApwB,EAAAzF,WAAA61B,EAAA3tB,SACA2tB,EAAA3tB,UACAW,KAAA9F,EAAAqF,SACAW,KAAAhG,EAAAsF,QACAO,SAAA7F,EAAA+yB,YACA,CACA,GAAAl2B,GAAA3D,OAAAiM,EAAAnF,EAAAmF,UAAAjM,KACA6B,EAAAN,GAAAq4B,GAAA56B,SACA8H,GAAA6yB,EAAA,GAAA,QAAAh2B,EAAA9B,QAIA63B,EAAA,OACAztB,WAGAA,QAAA,SAAAlN,GACA,MAAA,OAAAA,EAAAyK,EAAAtB,MAAAnJ,EAAAkN,GAAAA,IAGA2B,IAuBA,OArBApE,GAAArG,KAAAi2B,EAAA,SAAAh8B,EAAAu8B,GACA,GAAAG,GAAAH,EAAA,GACAI,EAAAJ,EAAA,EAEA1tB,GAAA0tB,EAAA,IAAAG,EAAA1N,IAEA2N,GACAD,EAAA1N,IAAA,WACAoN,EAAAO,GACAX,EAAA,EAAAh8B,GAAA,GAAA48B,QAAAZ,EAAA,GAAA,GAAAa,MAGArsB,EAAA+rB,EAAA,IAAA,WAEA,MADA/rB,GAAA+rB,EAAA,GAAA,QAAA35B,OAAA4N,EAAA3B,EAAAjM,KAAAhB,WACAgB,MAEA4N,EAAA+rB,EAAA,GAAA,QAAAG,EAAAI,WAGAjuB,EAAAA,QAAA2B,GACA+nB,GAAAA,EAAA70B,KAAA8M,EAAAA,GACAA,EA2DA,QAAAusB,GAAAx2B,EAAA+K,EAAAV,GACA,GAAAe,GAAA6d,EAAAvhB,OAAAqD,EAEA,OADA2W,GAAA1hB,GAAA8K,QAAAM,EAAAf,IACAe,EAAAgb,qBAIA,QAAAqQ,GAAAC,EAAA12B,EAAA+K,EAAAV,GACA,GAAAqsB,EAAAC,OAAA,MAAAH,GAAAx2B,GAAAgI,EAAA+C,EAAAV,GAMA,QAAAusB,GAAAF,GACAA,EAAAC,QAAA,IAAAE,KAAAJ,EAAAC,EAAA,KAAA,aAGA,QAAAI,GAAAJ,GACAA,EAAAC,WAAAE,GAAAJ,EAAAC,EAAA,KAAA,YAIA,QAAAK,GAAAC,EAAAN,GACA,GAAA12B,GAAA02B,EAAA12B,OACA,OAAA02B,GAAAO,WAAA95B,KAAA6C,EAAAg3B,EAAAN,MAAA,GACAD,EAAAC,EAAA12B,EAAA,kBAAAg3B,EAAAN,OAAA,OAGAD,GAAAC,EAAA12B,EAAA,YAAAg3B,EAAAN,IAGA,QAAAQ,GAAA7sB,EAAA2sB,EAAAN,EAAAzsB,GACA,GAAAjK,GAAA02B,EAAA12B,QACAm3B,EAAA,SACAT,GAAAU,QAAAj6B,KAAA6C,EAAAqK,EAAA8sB,EAAAH,GACA/sB,GAAAA,EAAAotB,YAAAr3B,GAAAqK,EAAA8sB,EAAAH,IACAP,EAAAC,EAAA12B,EAAA,eAAAg3B,EAAAN,EAAArsB,IACAitB,EAAAH,EAAAH,EAAAN,GAGA,QAAAa,GAAAjuB,EAAAxN,EAAAk7B,EAAAN,EAAAzsB,GACA,GAAAjK,GAAA02B,EAAA12B,OACA02B,GAAAptB,MAAAnM,KAAA6C,EAAAg3B,EAAAl7B,EAAAwN,GACAW,GAAAA,EAAAutB,WAAAx3B,GAAAg3B,EAAAl7B,EAAAwN,IACAmtB,EAAAC,EAAA12B,EAAA,aAAAg3B,EAAAN,EAAAptB,GAAAxN,IACAw7B,EAAAx7B,EAAAk7B,EAAAN,GAGA,QAAAY,GAAAH,EAAAH,EAAAN,GACA,GAAA12B,GAAA02B,EAAA12B,OACA02B,GAAAtH,SAAAjyB,KAAA6C,EAAAg3B,EAAAG,GACAV,EAAAC,EAAA12B,EAAA,gBAAAg3B,EAAAN,IACAI,EAAAJ,GAIA,QAAAnkB,MA6FA,QAAAklB,GAAAC,GAEA,MADAA,KAAAA,EAAAA,EAAAp+B,MAAA,IAAA,GAAA,IACAo+B,IAAAA,GAAAC,EAAA,OACAD,GAAAE,EAAA,OACAC,EAAAx4B,KAAAq4B,GAAA,SACAI,EAAAz4B,KAAAq4B,IAAA,QAAA,OAGA,QAAAK,GAAAz3B,EAAAyd,GACA,MAAA,IAAAA,EAAAzd,GACAA,EAAA,IAAAyd,GAAA9e,QAAA,YAAA,KAIA,QAAA+4B,GAAApxB,GACAA,EAAAqxB,aAAArxB,EAAAyD,MAAA,UAAAxE,EAAA/J,KAAA8K,EAAAyD,QACAzD,EAAAyD,KAAA6tB,EAAAtxB,EAAAyD,KAAAzD,EAAAuxB,eACAvxB,EAAAyD,MAAAzD,EAAA9K,MAAA,OAAA8K,EAAA9K,KAAAqS,gBACAvH,EAAAtG,IAAAy3B,EAAAnxB,EAAAtG,IAAAsG,EAAAyD,MAAAzD,EAAAyD,KAAAnN,QAGA,QAAAk7B,GAAAxxB,GACA,GAEAyxB,GAFA3B,EAAA7wB,EAAAtB,SAAAqC,OACAqD,EAAA9B,GAEA,KAAAxM,IAAA28B,GACAp7B,SAAAw5B,EAAA/6B,KAAA+6B,EAAA/6B,GAAA28B,EAAA38B,GAEAi7B,GAAAF,GAEAA,EAAA6B,cACAF,EAAArwB,EAAAC,cAAA,KACAowB,EAAA73B,KAAAk2B,EAAAp2B,IACA+3B,EAAA73B,KAAA63B,EAAA73B,KACAk2B,EAAA6B,YAAAC,EAAAn2B,SAAA,KAAAm2B,EAAAC,MAAAJ,EAAAh2B,SAAA,KAAAg2B,EAAAI,MAGA/B,EAAAp2B,MAAAo2B,EAAAp2B,IAAAxF,OAAAyF,SAAA+E,YACA0yB,EAAAtB,EAEA,IAAAgC,GAAAhC,EAAAgC,SACAC,EAAA,UAAAt5B,KAAAq3B,EAAAp2B,IASA,IARAq4B,IAAAD,EAAA,SAEAhC,EAAA/V,SAAA,IACA/Z,GAAAA,EAAA+Z,SAAA,GACA,UAAA+X,GAAA,SAAAA,KAEAhC,EAAAp2B,IAAAy3B,EAAArB,EAAAp2B,IAAA,KAAAs4B,KAAAC,QAEA,SAAAH,EAIA,MAHAC,KACAjC,EAAAp2B,IAAAy3B,EAAArB,EAAAp2B,IACAo2B,EAAAoC,MAAApC,EAAAoC,MAAA,KAAApC,EAAAoC,SAAA,EAAA,GAAA,eACAC,EAAArC,EAAAzsB,EAGA,IAMA+uB,GANAtB,EAAAhB,EAAAuC,QAAAP,GACAQ,KACAC,EAAA,SAAAz2B,EAAAtD,GAAA85B,EAAAx2B,EAAAxD,gBAAAwD,EAAAtD,IACAiD,EAAA,iBAAAhD,KAAAq3B,EAAAp2B,KAAA4O,OAAA+D,GAAAnY,OAAAyF,SAAA8B,SACA20B,EAAAN,EAAAM,MACAoC,EAAApC,EAAAqC,gBAcA,IAXApvB,GAAAA,EAAA3B,QAAA0uB,GAEAN,EAAA6B,aAAAY,EAAA,mBAAA,kBACAA,EAAA,SAAAzB,GAAA,QACAA,EAAAhB,EAAA4C,UAAA5B,KACAA,EAAA12B,QAAA,UAAA02B,EAAAA,EAAAp+B,MAAA,IAAA,GAAA,IACA09B,EAAAuC,kBAAAvC,EAAAuC,iBAAA7B,KAEAhB,EAAA8C,aAAA9C,EAAA8C,eAAA,GAAA9C,EAAArsB,MAAA,OAAAqsB,EAAA56B,KAAAqS,gBACAgrB,EAAA,eAAAzC,EAAA8C,aAAA,qCAEA9C,EAAAwC,QACA,IAAAx2B,IAAAg0B,GAAAwC,QAAAC,EAAAz2B,EAAAg0B,EAAAwC,QAAAx2B,GA2BA,IA1BAs0B,EAAAqC,iBAAAF,EAEAnC,EAAAyC,mBAAA,WACA,GAAA,GAAAzC,EAAArP,WAAA,CACAqP,EAAAyC,mBAAAlnB,EACAvU,aAAAg7B,EACA,IAAAn5B,GAAAyJ,GAAA,CACA,IAAA0tB,EAAAG,QAAA,KAAAH,EAAAG,OAAA,KAAA,KAAAH,EAAAG,QAAA,GAAAH,EAAAG,QAAA,SAAA90B,EAAA,CACAq2B,EAAAA,GAAAjB,EAAAf,EAAA4C,UAAAtC,EAAA0C,kBAAA,iBACA75B,EAAAm3B,EAAA2C,YAEA,KAEA,UAAAjB,GAAA,EAAAkB,MAAA/5B,GACA,OAAA64B,EAAA74B,EAAAm3B,EAAA6C,YACA,QAAAnB,IAAA74B,EAAAi6B,EAAAz6B,KAAAQ,GAAA,KAAAP,KAAAC,MAAAM,IACA,MAAArC,GAAA8L,EAAA9L,EAEA8L,EAAAiuB,EAAAjuB,EAAA,cAAA0tB,EAAAN,EAAAzsB,GACAitB,EAAAr3B,EAAAm3B,EAAAN,EAAAzsB,OAEAstB,GAAAP,EAAA+C,YAAA,KAAA/C,EAAAG,OAAA,QAAA,QAAAH,EAAAN,EAAAzsB,KAKA8sB,EAAAC,EAAAN,MAAA,EAGA,MAFAM,GAAA1M,QACAiN,EAAA,KAAA,QAAAP,EAAAN,EAAAzsB,GACA+sB,CAGA,IAAAN,EAAAsD,UACA,IAAAt3B,IAAAg0B,GAAAsD,UAAAhD,EAAAt0B,GAAAg0B,EAAAsD,UAAAt3B,EAEA,IAAAu3B,KAAA,SAAAvD,KAAAA,EAAAuD,KACAjD,GAAAkD,KAAAxD,EAAA56B,KAAA46B,EAAAp2B,IAAA25B,EAAAvD,EAAAyD,SAAAzD,EAAA0D,SAEA,KAAA13B,IAAAw2B,GAAAE,EAAAv+B,MAAAm8B,EAAAkC,EAAAx2B,GAUA,OARAg0B,GAAA54B,QAAA,IAAAk7B,EAAA/6B,WAAA,WACA+4B,EAAAyC,mBAAAlnB,EACAykB,EAAA1M,QACAiN,EAAA,KAAA,UAAAP,EAAAN,EAAAzsB,IACAysB,EAAA54B,UAGAk5B,EAAAqD,KAAA3D,EAAArsB,KAAAqsB,EAAArsB,KAAA,MACA2sB,EAIA,QAAAsD,GAAAh6B,EAAA+J,EAAA+sB,EAAAsB,GAGA,MAFA7yB,GAAAzF,WAAAiK,KAAAquB,EAAAtB,EAAAA,EAAA/sB,EAAAA,EAAAnN,QACA2I,EAAAzF,WAAAg3B,KAAAsB,EAAAtB,EAAAA,EAAAl6B,SAEAoD,IAAAA,EACA+J,KAAAA,EACA+sB,QAAAA,EACAsB,SAAAA,GAuCA,QAAA6B,GAAA75B,EAAAtF,EAAA+8B,EAAAqC,GACA,GAAA1+B,GAAA8C,EAAAiH,EAAApH,QAAArD,GACAq/B,EAAA50B,EAAAnH,cAAAtD,EACAyK,GAAArG,KAAApE,EAAA,SAAAO,EAAAyD,GACAtD,EAAA+J,EAAA/J,KAAAsD,GACAo7B,IAAA7+B,EAAAw8B,EAAAqC,EACAA,EAAA,KAAAC,GAAA,UAAA3+B,GAAA,SAAAA,EAAAH,EAAA,IAAA,MAEA6+B,GAAA57B,EAAA8B,EAAA+nB,IAAArpB,EAAAsD,KAAAtD,EAAAA,OAEA,SAAAtD,IAAAq8B,GAAA,UAAAr8B,EACAy+B,EAAA75B,EAAAtB,EAAA+4B,EAAAx8B,GACA+E,EAAA+nB,IAAA9sB,EAAAyD,KAqCA,QAAAs7B,GAAA7G,GAGA,MAAA,UAAA8G,EAAA3I,GAEA,gBAAA2I,KACA3I,EAAA2I,EACAA,EAAA,IAGA,IAAAjC,GACAj/B,EAAA,EACAmhC,EAAAD,EAAAz7B,cAAA6F,MAAA81B,MAEA,IAAAC,OAAA16B,WAAA4xB,GAGA,KAAA0G,EAAAkC,EAAAnhC,MAGA,MAAAi/B,EAAA,IACAA,EAAAA,EAAAz1B,MAAA,IAAA,KACA4wB,EAAA6E,GAAA7E,EAAA6E,QAAAl1B,QAAAwuB,KAIA6B,EAAA6E,GAAA7E,EAAA6E,QAAA/+B,KAAAq4B,IAaA,QAAA+I,GAAAx+B,EAAA+B,GACA,GAAA3C,GAAAuI,EACA82B,EAAA1C,EAAA0C,eAEA,KAAAr/B,IAAA2C,GACApB,SAAAoB,EAAA3C,MACAq/B,EAAAr/B,GAAAY,EAAA2H,IAAAA,OAAAvI,GAAA2C,EAAA3C,GAOA,OAJAuI,IACA42B,OAAAG,QAAA,EAAA1+B,EAAA2H,GAGA3H,EA9pBA,GAsOAZ,GACA+G,EAvOAgzB,EAAA,SAAA9uB,GACAA,EAAAf,EAAAtB,SAAAqC,EAEA,IAAAgvB,GACA1G,EACAgM,EACAC,EACAC,EACAC,EACAlF,KACA98B,GAAAuN,EAAA+uB,SACA2F,EAAA,SAAAjxB,GAOA,IANAurB,EAAAhvB,EAAAgvB,QAAAvrB,EACA6kB,GAAA,EACAmM,EAAAF,GAAA,EACAA,EAAA,EACAC,EAAAjF,EAAAz8B,OACAwhC,GAAA,EACA/E,GAAAkF,EAAAD,IAAAC,EACA,GAAAlF,EAAAkF,GAAAxgC,MAAAwP,EAAA,GAAAA,EAAA,OAAA,GAAAzD,EAAA20B,YAAA,CACA3F,GAAA,CACA,OAGAsF,GAAA,EACA/E,IACA98B,EAAAA,EAAAK,QAAA4hC,EAAAjiC,EAAAgL,SACAuxB,EAAAO,EAAAz8B,OAAA,EACAg8B,EAAAW,YAIAX,GACAjN,IAAA,WACA,GAAA0N,EAAA,CACA,GAAAqF,GAAArF,EAAAz8B,OACA+uB,EAAA,SAAA9tB,GACAkL,EAAArG,KAAA7E,EAAA,SAAAwD,EAAA8B,GACA,kBAAAA,GACA2G,EAAA60B,QAAA/F,EAAA70B,IAAAZ,IAAAk2B,EAAAx8B,KAAAsG,GACAA,GAAAA,EAAAvG,QAAA,gBAAAuG,IAAAwoB,EAAAxoB,KAGAwoB,GAAAptB,WACA6/B,EAAAE,EAAAjF,EAAAz8B,OACAk8B,IACAuF,EAAAK,EACAF,EAAA1F,IAGA,MAAAv5B,OAEAC,OAAA,WAcA,MAbA65B,IACAtwB,EAAArG,KAAAnE,UAAA,SAAA8C,EAAA8B,GAEA,IADA,GAAA1E,IACAA,EAAAsK,EAAA9E,QAAAd,EAAAk2B,EAAA56B,QACA46B,EAAAnyB,OAAAzI,EAAA,GAEA2/B,IACA3/B,GAAA6/B,KAAAA,EACA7/B,GAAA8/B,KAAAA,KAKAh/B,MAEAwE,IAAA,SAAAjD,GACA,SAAAu4B,KAAAv4B,EAAAiI,EAAA9E,QAAAnD,EAAAu4B,MAAAA,EAAAz8B,UAEA6Y,MAAA,WAEA,MADA6oB,GAAAjF,EAAAz8B,OAAA,EACA2C,MAEAg6B,QAAA,WAEA,MADAF,GAAA98B,EAAAu8B,EAAA14B,OACAb,MAEAslB,SAAA,WACA,OAAAwU,GAEAG,KAAA,WAGA,MAFAj9B,GAAA6D,OACA04B,GAAAF,EAAAW,UACAh6B,MAEAq/B,OAAA,WACA,OAAAriC,GAEAk9B,SAAA,SAAAv2B,EAAArF,GAOA,OANAw7B,GAAAjH,IAAA71B,IACAsB,EAAAA,MACAA,GAAAqF,EAAArF,EAAAsI,MAAAtI,EAAAsI,QAAAtI,GACAugC,EAAA7hC,EAAAM,KAAAgB,GACA2gC,EAAA3gC,IAEA0B,MAEAi/B,KAAA;AACA,MAAA5F,GAAAa,SAAAl6B,KAAAhB,YAEA6zB,MAAA,WACA,QAAAA,GAIA,OAAAwG,IASAzyB,EAAA7E,MAAA2D,UAAAkB,MAuEA4G,EAAA,SAAA8xB,GACA,GAKAC,GAAAC,EAAAC,EALAC,EAAA94B,EAAA9F,KAAA9B,WACA4P,EAAA8wB,EAAAriC,OACAD,EAAA,EACAuiC,EAAA,IAAA/wB,GAAA0wB,GAAA91B,EAAAzF,WAAAu7B,EAAArzB,SAAA2C,EAAA,EACAhB,EAAA,IAAA+xB,EAAAL,EAAAxzB,IAEA8zB,EAAA,SAAAxiC,EAAAkR,EAAAmC,GACA,MAAA,UAAA1N,GACAuL,EAAAlR,GAAA4C,KACAyQ,EAAArT,GAAA4B,UAAA3B,OAAA,EAAAuJ,EAAA9F,KAAA9B,WAAA+D,EACA0N,IAAA8uB,EACA3xB,EAAAiyB,WAAAvxB,EAAAmC,KACAkvB,GACA/xB,EAAAotB,YAAA1sB,EAAAmC,IAKA,IAAA7B,EAAA,EAIA,IAHA2wB,EAAA,GAAAx9B,OAAA6M,GACA4wB,EAAA,GAAAz9B,OAAA6M,GACA6wB,EAAA,GAAA19B,OAAA6M,GACAxR,EAAAwR,IAAAxR,EACAsiC,EAAAtiC,IAAAoM,EAAAzF,WAAA27B,EAAAtiC,GAAA6O,SACAyzB,EAAAtiC,GAAA6O,UACAW,KAAAgzB,EAAAxiC,EAAAqiC,EAAAC,IACA5yB,KAAAc,EAAAxB,QACAO,SAAAizB,EAAAxiC,EAAAoiC,EAAAD,MAEAI,CAKA,OADAA,IAAA/xB,EAAAotB,YAAAyE,EAAAC,GACA9xB,EAAA3B,WAMA6zB,EAAA,EACAn0B,EAAAlN,OAAAkN,SAGAo0B,EAAA,sDACAvE,EAAA,qCACAC,EAAA,8BACAF,EAAA,mBACAD,EAAA,YACAmC,EAAA,QACAtB,EAAAxwB,EAAAC,cAAA,IAEAuwB,GAAAh4B,KAAA1F,OAAAyF,SAAAC,IAeA,IAAAq2B,GAAA,EA+CAkC,EAAA,SAAAnyB,EAAAqD,GACA,KAAA,QAAArD,IAAA,MAAAwxB,GAAAxxB,EAEA,IAKAy1B,GAKArD,EAVAsD,EAAA11B,EAAA21B,cACAC,GAAA32B,EAAAzF,WAAAk8B,GACAA,IAAAA,IAAA,WAAAH,EACAM,EAAAz0B,EAAAC,cAAA,UACAy0B,EAAA5hC,OAAA0hC,GAEAlS,EAAA,SAAAqS,GACAjb,EAAA+a,GAAAG,eAAA,QAAAD,GAAA,UAEA3F,GAAA1M,MAAAA,EAsBA,OAnBArgB,IAAAA,EAAA3B,QAAA0uB,GAEAtV,EAAA+a,GAAAjyB,GAAA,aAAA,SAAAhN,EAAAm/B,GACA3+B,aAAAg7B,GACAtX,EAAA+a,GAAA3wB,MAAAxP,SAEA,SAAAkB,EAAA1B,MAAAugC,EAGAnF,EAAAmF,EAAA,GAAArF,EAAApwB,EAAAqD,GAFAstB,EAAA,KAAAoF,GAAA,QAAA3F,EAAApwB,EAAAqD,GAKAnP,OAAA0hC,GAAAE,EACAL,GAAAx2B,EAAAzF,WAAAs8B,IACAA,EAAAL,EAAA,IAEAK,EAAAL,EAAAn/B,SAGA65B,EAAAC,EAAApwB,MAAA,GACA0jB,EAAA,SACA0M,IAGAl8B,OAAA0hC,GAAA,WACAH,EAAAhhC,WAGAohC,EAAAn+B,IAAAsI,EAAAtG,IAAArB,QAAA,YAAA,OAAAu9B,GACAx0B,EAAA60B,KAAAjtB,YAAA6sB,GAEA71B,EAAA9I,QAAA,IAAAk7B,EAAA/6B,WAAA,WACAqsB,EAAA,YACA1jB,EAAA9I,UAEAk5B,IAGAsB,GAEAx8B,KAAA,MAEAm7B,WAAA1kB,EAEA6kB,QAAA7kB,EAEAjJ,MAAAiJ,EAEA6c,SAAA7c,EAEAvS,QAAA,KAEA22B,QAAA,EAEAK,IAAA,WACA,MAAA,IAAAl8B,QAAAgiC,gBAIA7D,SACAwD,OAAA,oEACAM,KAAAnF,EACAoF,IAAA,4BACA3qB,KAAAslB,EACAjkB,KAAA,cAGA6kB,aAAA,EAEAz6B,QAAA,EAEAm6B,aAAA,EAEAtX,OAAA,GAgJA/T,EAAA,WACA,MAAAwrB,GAAAkC,EAAAz/B,MAAA,KAAAQ,aAGA4hC,EAAA,WACA,GAAAr2B,GAAA0zB,EAAAz/B,MAAA,KAAAQ,UAEA,OADAuL,GAAA9K,KAAA,OACAs8B,EAAAxxB,IAGAs2B,EAAA,WACA,GAAAt2B,GAAA0zB,EAAAz/B,MAAA,KAAAQ,UAEA,OADAuL,GAAA8xB,SAAA,OACAN,EAAAxxB,GAGAmX,GAAAngB,GAAAouB,KAAA,SAAA1rB,EAAA+J,EAAA+sB,GACA,IAAA/6B,KAAA3C,OAAA,MAAA2C,KACA,IAEAqO,GAFAtC,EAAA/L,KACA9C,EAAA+G,EAAAhH,MAAA,MAEAsN,EAAA0zB,EAAAh6B,EAAA+J,EAAA+sB,GACA33B,EAAAmH,EAAAwwB,OAQA,OAPA79B,GAAAG,OAAA,IAAAkN,EAAAtG,IAAA/G,EAAA,GAAAmR,EAAAnR,EAAA,IACAqN,EAAAwwB,QAAA,SAAA+F,GACA/0B,EAAAiK,KAAA3H,EACAgX,EAAA,SAAArP,KAAA8qB,EAAAl+B,QAAAm9B,EAAA,KAAAle,KAAAxT,GAAAyyB,GACA19B,GAAAA,EAAA5E,MAAAuN,EAAA/M,YAEA+8B,EAAAxxB,GACAvK,KAGA,IAAA+gC,GAAAC,mBAkBAnF,EAAA,SAAA98B,EAAA+8B,GACA,GAAAz3B,KAOA,OANAA,GAAA+nB,IAAA,SAAA9sB,EAAAyD,GACAyG,EAAAzF,WAAAhB,KAAAA,EAAAA,KACA,MAAAA,IAAAA,EAAA,IACA/C,KAAA1C,KAAAyjC,EAAAzhC,GAAA,IAAAyhC,EAAAh+B,KAEAm7B,EAAA75B,EAAAtF,EAAA+8B,GACAz3B,EAAA9G,KAAA,KAAAqF,QAAA,OAAA,MAaAq+B,KAOAC,KACA1C,EAAA,OAqCA2C,EAAA9C,EAAA4C,GACAG,EAAA/C,EAAA6C,GAwBAG,EAAA,SAAAnhC,EAAAm6B,GACA,MAAAA,GAGAqE,EAAAA,EAAAx+B,EAAA+7B,GAAA5B,GAGAqE,EAAAzC,EAAA/7B,GAoDA,OArBAsJ,GAAAtB,MAAA6zB,GACAW,UAAAA,EACAyE,cAAAA,EACAC,cAAAA,EACAnF,aAAAA,EACAoF,UAAAA,EAEAhI,UAAAA,EAEAvtB,SAAAA,EAEAyE,IAAAA,EACAswB,QAAAA,EACAhF,MAAAA,EACA+E,KAAAA,EAEApzB,KAAAA,IAKA7O,EAAAo9B,KAAAA,IAGAv+B,EAAA,qBACA,YACA,UACA,WACA,SAAAmB,EAAA6K,EAAA83B,GAkCA,QAAAC,KACA,GAAAC,GAAA71B,SAAAC,cAAA,QACA7N,EAAA0jC,GAUA,OARAD,GAAAE,IAAA,aACAF,EAAA/hC,KAAA,WACA+hC,EAAA5D,OAAA,EACA4D,EAAA16B,OAAA,EAEA05B,EAAAjtB,YAAAiuB,GACAG,EAAA5jC,GAAAyjC,EAEAzjC,EAGA,QAAAgW,KACA,MAAAA,GAhDA,GAOA6tB,GAPApB,EAAA70B,SAAAk2B,qBAAA,QAAA,GACAJ,EAAA,EACAK,KACAH,KACAI,EAAAR,IACAS,EAAAL,EAAAI,GACAE,EAAA,YAAAD,GAAA,WAAA,QAEAE,EAAAF,EAAAG,YAAAH,EAAAI,UAEA,IAAAJ,EAAAK,WAAA,CACA,GAAAC,GAAAN,EAAAK,UACAT,GAAA,SAAAvzB,EAAA0F,EAAA7U,GACAojC,EAAAxhC,KAAAd,KAAAqO,EAAA,IAAA0F,EAAA,IAAA7U,QAGA0iC,GAAAI,EAAAO,OA+JA,OA5HA/4B,GAAAtB,MAAA6L,GACAyuB,iBAAA,SAAA9tB,GACA,MAAA6sB,MAGAkB,eAAA,SAAAx+B,EAAAy+B,EAAAC,GACA,GAAAC,GAAAd,EAAA79B,EAYA,IAXA2+B,IACAA,EAAAd,EAAA79B,IACAu1B,MAAA,EACAqJ,mBACAC,oBAIAF,EAAAC,gBAAAvlC,KAAAolC,GACAE,EAAAE,eAAAxlC,KAAAqlC,GAEA,IAAAC,EAAApJ,MACAoJ,EAAA9vB,KAAAiwB,aACA,IAAAH,EAAApJ,WACAoJ,EAAA9vB,KAAAkwB,cACA,CACAJ,EAAA7kC,GAAAwjC,GACA,IAAAzuB,GAAA8vB,EAAA9vB,KAAA6uB,EAAAiB,EAAA7kC,GAEAklC,YAAA,GAAA1G,OAAA2G,UAEApwB,EAAAiwB,OAAA,WACAH,EAAApJ,MAAA,EACAoJ,EAAApJ,QAIA,KAHA,GAAA2J,GAAAP,EAAAC,gBACAzlC,EAAA+lC,EAAA9lC,OAEAD,KACA+lC,EAAA/lC,IAEAwlC,GAAAC,mBACAD,EAAAE,mBAEAhwB,EAAAkwB,QAAA,WACAJ,EAAApJ,QAIA,KAHA,GAAA2J,GAAAP,EAAAE,eACA1lC,EAAA+lC,EAAA9lC,OAEAD,KACA+lC,EAAA/lC,IAEAwlC,GAAAC,mBACAD,EAAAE,mBAGAhwB,EAAA3O,KAAAy+B,EAAA3+B,IAAAA,EAEA69B,EAAAhvB,EAAA7O,KAAA2+B,EAGA,MAAAA,GAAA7kC,IAGAqlC,gBAAA,SAAAC,EAAAC,GACA,GAAAV,GAAAjB,EAAA0B,EACA75B,GAAA3D,SAAAy9B,GACApB,EAAAphC,KAAA8hC,EAAAU,GAEA95B,EAAArG,KAAAy/B,EAAAX,GAAA,SAAA7kC,EAAAmmC,GACA,GAAAD,IAAAC,EAEA,MADArB,GAAAphC,KAAA8hC,EAAAxlC,IACA,KAMA+kC,WAAA,SAAAmB,GAEA,MADAtjC,MAAAojC,gBAAArB,EAAAuB,GACAtjC,MAGAwjC,iBAAA,SAAAH,GACA,GAAAA,IAAAtB,EACA,KAAA,IAAA3jC,OAAA,4CAEA,IAAAwkC,GAAAjB,EAAA0B,EAKA,cAJA1B,GAAA0B,GAGA/B,EAAArhC,OAAA2iC,GACA5iC,MAGAyjC,UAAA,SAAAp1B,EAAAg1B,GAEA,GAAAK,MACAC,EAAAze,cAAA7W,EAUA,OATAgX,GAAA1Z,SAAAi4B,aAAAzgC,KAAA,SAAA/F,EAAAymC,GACAC,iBAAAH,EAAAE,WAAAA,IACAxe,EAAA0e,MAAAL,EAAAre,EAAAwe,EAAAG,SAAAxhC,OAAA,WACA,MAAAyhC,eAAAjkC,KAAA2jC,EAAAO,aAAA,MAAAP,EAAAE,cACA/lC,IAAA,WACA,MAAAqmC,eAAA9e,EAAAzE,QAAAwjB,mBAAApkC,KAAA,GAAAqkC,cAAArkC,MAAA6jC,QAIAH,EAAA56B,WAGAu5B,WAAA,SAAAh0B,EAAA0F,EAAA7U,GACA,MAAAc,MAAAskC,gBAAAvC,EAAA1zB,EAAA0F,EAAA7U,IAGAolC,gBAAA,SAAAjB,EAAAh1B,EAAA0F,EAAA7U,GACA,IAAAmP,IAAA0F,EACA,QAGA,IAAA6uB,GAAAjB,EAAA0B,EAGA,OAFAnkC,GAAAA,GAAA0jC,EAAAX,GAAA5kC,OAEAukC,EAAA9gC,KAAA8hC,EAAAv0B,EAAA0F,EAAA7U,MAKAP,EAAAoV,IAAAA,IAGAvW,EAAA,qBACA,YACA,UACA,UACA,UACA,WACA,SACA,YACA,YACA,SAAAmB,EAAA6K,EAAAwQ,EAAAkP,EAAAvB,EAAApI,EAAAqN,EAAA9Y,GA+SA,QAAAywB,GAAA1wB,EAAAxP,GACA,MAAA,IAAAmgC,GAAA3wB,EAAAxP,GAGA,QAAAogC,GAAA5wB,EAAAxP,GACA,MAAA,IAAAqgC,GAAA7wB,EAAAxP,GAGA,QAAAsgC,KACA,MAAAA,GAvTA,GASAC,IATAhY,EAAAze,GACAye,EAAAnd,IACAyZ,EAAA1Y,KACA0Y,EAAAP,WACApJ,EAAA3B,aACA9J,EAAAI,SACAqL,EAAA3G,OAGApP,EAAA0E,QAAA1C,SACAL,UAAA,aAEAD,KAAA,aAIA25B,QAAA,SAAAN,GACA,GAAApjC,GAAAyrB,EAAAvhB,OAAA,aACAy5B,WAAAP,EAAA1wB,IACAkxB,UAAAR,EAAAQ,WAEAR,GAAA91B,QAAAtN,GACAojC,EAAAO,WAAA3jC,EAAA2jC,YAGA3F,MAAA,SAAAoF,EAAAx1B,GAEA,GAAA/C,GAAAuT,EAAA3B,aAAA2mB,EAAA1wB,IACA7T,MAAAglC,gBAAA5Q,SAAArlB,EAAAk2B,MAAAj5B,EAAA0M,MACA1Y,KAAAklC,gBAAA9Q,SAAArlB,EAAAo2B,MAAAn5B,EAAAyM,IAEA,IAAAtX,GAAAyrB,EAAAvhB,OAAA,WACAwI,IAAA0wB,EAAA1wB,IACAixB,WAAAP,EAAAO,WACAC,UAAAR,EAAAQ,UACAK,MAAA,KAEAC,aAIAd,GAAA91B,QAAAtN,GAGAnB,KAAAslC,SAAAf,EAEAA,EAAAgB,eACAzxB,EAAAI,SAAAqwB,EAAAO,WAAAP,EAAAgB,eAGAvlC,KAAAwlC,cAAArkC,EAAAikC,MACAplC,KAAAwlC,gBACAxlC,KAAAwlC,cAAAjB,EAAA1wB,KAGA7T,KAAAylC,iBAAAtkC,EAAAkkC,SACArlC,KAAAylC,kBAEAj8B,EAAArG,KAAAnD,KAAAylC,iBAAA,SAAAnmC,EAAAyD,GACAgM,EAAA22B,aAAAC,QAAArmC,EAAAyD,KAIAgM,EAAA22B,aAAAE,aAAA5lC,KAAAwlC,cAAAxlC,KAAAglC,gBAAAhlC,KAAAklC,iBAEAn2B,EAAA22B,aAAAG,cAAA,WAEA7lC,KAAAyO,QAAAtN,IAGA2kC,KAAA,aAIArsB,IAAA,SAAAssB,GACA,GAAAT,GAAAtlC,KAAAslC,QACAA,IACAA,EAAAC,eACAzxB,EAAAc,YAAA0wB,EAAAR,WAAAQ,EAAAC,cAIA,IAAApkC,GAAAyrB,EAAAvhB,OAAA,WAEArL,MAAAyO,QAAAtN,GAGAnB,KAAAslC,SAAA,KACAtlC,KAAAylC,iBAAA,KACAzlC,KAAAwlC,cAAA,KACAxlC,KAAAglC,gBAAA,KACAhlC,KAAAklC,gBAAA,SAIAc,EAAA,GAAApB,GAMAJ,EAAAh7B,EAAA0E,QAAA1C,SACAL,UAAA,YAEAD,KAAA,SAAA2I,EAAAxP,GACA,GAAA0H,GAAA/L,IAEA+L,GAAA8H,IAAAA,EACA9H,EAAAw5B,cAAAlhC,EAAAkhC,eAAA,WACAx5B,EAAAk6B,QAAA5hC,GAEA,YAAA,UAAA,QAAA,UAAA9F,QAAA,SAAAmQ,GACAlF,EAAAzF,WAAAM,EAAAqK,KACA3C,EAAAoC,GAAAO,EAAArK,EAAAqK,MAKAke,EAAAze,GAAA0F,GACAmb,UAAA,SAAA7tB,GACAkD,EAAA6hC,SACAn6B,EAAAg5B,UAAApd,EAAArG,QAAAngB,EAAAjB,OAAAmE,EAAA6hC,SACAn6B,EAAAg5B,aAIAiB,EAAAnB,QAAA94B,GACAA,EAAA+4B,YACA5b,EAAA9gB,KAAA2D,EAAA+4B,WAAA,aAAA,KAIA7V,QAAA,SAAA9tB,GACA4K,EAAA+4B,aACA5b,EAAA9gB,KAAA2D,EAAA+4B,WAAA,aAAA,GACA/4B,EAAA+4B,WAAA,KACA/4B,EAAAg5B,UAAA,OAIAhX,UAAA,SAAA5sB,GACA+nB,EAAA9gB,KAAA2D,EAAA+4B,WAAA,aAAA,GACAkB,EAAA7G,MAAApzB,EAAA5K,IAGAusB,QAAA,SAAAvsB,GACAyrB,EAAA/B,KAAA1pB,GAEA6kC,EAAAV,UAIAU,EAAAvsB,KAAA,SASAirB,EAAAl7B,EAAA0E,QAAA1C,SACAL,UAAA,YAEAD,KAAA,SAAA2I,EAAAxP,GACA,GAEA8hC,GACAC,EAHAr6B,EAAA/L,KAIAqmC,GAHAhiC,EAAAkhC,eAAA,YAGA,EAEAx5B,GAAA8H,IAAAA,EACA9H,EAAAk6B,QAAA5hC,GAEA,UAAA,UAAA,SAAA,UAAA,WAAA9F,QAAA,SAAAmQ,GACAlF,EAAAzF,WAAAM,EAAAqK,KACA3C,EAAAoC,GAAAO,EAAArK,EAAAqK,MAIAke,EAAAze,GAAA0F,GACAia,SAAA,SAAA3sB,GAGA,GAFAA,EAAA6pB,kBAEAqb,EAAA,CAIA,GAAAC,GAAA1Z,EAAAvhB,OAAA,WACAk7B,QAAAplC,EAAAjB,OACAmlC,SAAAW,EAAAP,iBACAY,YAAA,GAEAt6B,GAAA0C,QAAA63B,GAEAA,EAAAD,aACAllC,EAAA4pB,iBAEA5pB,EAAAukC,aAAAc,WAAA,cAKA7Y,UAAA,SAAAxsB,GACA,GACA0S,IADA9H,EAAAk6B,QACAl6B,EAAA8H,KAEAyyB,EAAA1Z,EAAAvhB,OAAA,WACAg6B,SAAAW,EAAAP,kBAGA15B,GAAA0C,QAAA63B,GAEAnlC,EAAA6pB,kBAEAmb,GAAAE,GACAvyB,EAAAI,SAAAL,EAAAsyB,IAIAtY,UAAA,SAAA1sB,GACA,GACA0S,IADA9H,EAAAk6B,QACAl6B,EAAA8H,IACA,KAAAwyB,EAAA,OAAA,CAEA,IAAAC,GAAA1Z,EAAAvhB,OAAA,UACAg6B,SAAAW,EAAAP,kBAGA15B,GAAA0C,QAAA63B,GAEAnlC,EAAA6pB,kBAEAmb,GAAAE,GACAvyB,EAAAc,YAAAf,EAAAsyB,IAIAnY,KAAA,SAAA7sB,GACA,GACA0S,IADA9H,EAAAk6B,QACAl6B,EAAA8H,IAIA,IAFA+Y,EAAA/B,KAAA1pB,GAEA6kC,EAAAV,SAAA,CAIAa,GAAAE,GACAvyB,EAAAI,SAAAL,EAAAsyB,EAGA,IAAAG,GAAA1Z,EAAAvhB,OAAA,WACAg6B,SAAAW,EAAAP,kBAGA15B,GAAA0C,QAAA63B,GAEAN,EAAAvsB,KAAA,OAIAusB,EAAA73B,GAAA,UAAA,SAAAhN,GACA,GAAAmlC,GAAA1Z,EAAAvhB,OAAA,WACAg6B,SAAAW,EAAAP,iBACAY,YAAA,GAGAt6B,GAAA0C,QAAA63B,GAEAD,EAAAC,EAAAD,WACAF,EAAAG,EAAAH,WACAC,EAAAE,EAAAF,YAEAA,GAAAC,GACAvyB,EAAAI,SAAAL,EAAAuyB,KAGAj4B,GAAA,QAAA,SAAAhN,GACA,GAAAmlC,GAAA1Z,EAAAvhB,OAAA,SACAg6B,SAAAW,EAAAP,iBACAY,YAAA,GAGAt6B,GAAA0C,QAAA63B,GAEAH,GAAAE,GACAvyB,EAAAc,YAAAf,EAAAsyB,GAEAC,GAAAC,GACAvyB,EAAAc,YAAAf,EAAAuyB,GAGAC,GAAA,EACAD,EAAA,KACAD,EAAA,SAmDA,OAhCA38B,GAAAtB,MAAAy8B,GAgBAJ,UAAAA,EASAE,UAAAA,EAEAuB,QAAAA,IAKArnC,EAAAgmC,IAAAA,IAGAnnC,EAAA,oCACA,YACA,SAAAgM,GASA,QAAAi9B,KACA,MAAAA,GATAxsB,UAAAysB,aAAAzsB,UAAAysB,cACAzsB,UAAA0sB,oBACA1sB,UAAA2sB,iBACA3sB,UAAA4sB,cAEA,IAAA/6B,GAAAtC,EAAAsC,SACAg7B,EAAA,IA4CA,OAtCAt9B,GAAAtB,MAAAu+B,GACAM,YAAA,WACA,QAAA9sB,UAAAysB,cAGAvH,MAAA,SAAA6H,EAAAC,GAEA,GAAAl5B,GAAA,GAAAjC,EAmBA,OAlBAmO,WAAAysB,cACAM,OAAA,EAAAC,OAAA,GAEA,SAAAC,GACAJ,EAAAI,EACAF,EAAA/kC,IAAAxD,OAAA8T,IAAA40B,gBAAAC,kBACAJ,EAAAK,iBAAA,SAAAlmC,KAGA4M,EAAA5B,WAIA,SAAA2B,GACAC,EAAA3B,OAAA0B,KAIAC,EAAA9B,SAGA4e,KAAA,WACAic,IACAA,EAAAjc,OACAic,EAAA,SAMAL,IAGAjpC,EAAA,kCACA,YACA,SAAAgM,GAOA,QAAA89B,KACA,MAAAA,GAkBA,MAzBArtB,WAAAqtB,QAAArtB,UAAAqtB,SACArtB,UAAAstB,eACAttB,UAAAutB,YACAvtB,UAAAwtB,UAOAj+B,EAAAtB,MAAAo/B,GACAP,YAAA,WACA,QAAA9sB,UAAAqtB,SAGAnI,MAAA,SAAA/M,GACAnY,UAAAqtB,QAAAlV,IAGAvH,KAAA,WACA5Q,UAAAqtB,QAAA,MAKAA,IAGA9pC,EAAA,yBACA,YACA,UACA,uBACA,sBACA,SAAAmB,EAAA6K,EAAAi9B,EAAAa,GAEA,QAAAI,KACA,MAAAA,GASA,MANAl+B,GAAAtB,MAAAw/B,GACAjB,UAAAA,EACAa,QAAAA,IAIA3oC,EAAA+oC,QAAAA,IAGAlqC,EAAA,uBACA,YACA,UACA,YACA,YACA,SAAAmB,EAAA6K,EAAAojB,EAAA9Y,GAmBA,QAAA6zB,GAAAvkC,GAKA,QAAAwkC,GAAAC,GACA,IAAA,GAAAzqC,GAAAyqC,EAAAxqC,OAAAD,KACAyqC,EAAAzqC,GAAA8e,KAAA4rB,GACAD,EAAAlgC,OAAAvK,EAAA,EAGA2qC,GAAAF,GATA,GADAE,EAAA3kC,GACA4kC,EAAA,CACA,GAAAC,GAAAD,EAAAr8B,SAAAC,cAAA,QAWAq8B,GAAAxoC,KAAA,OACAwoC,EAAAzzB,MAAAgE,SAAA,QACAyvB,EAAAzzB,MAAAkE,KAAA,EACAuvB,EAAAzzB,MAAAiE,IAAA,EACAwvB,EAAAzzB,MAAAW,QAAA,KACAxJ,SAAA2H,KAAAC,YAAA00B,GAEAA,EAAAC,SAAA,SAAA/mC,GACAymC,EAAA7lC,MAAA2D,UAAAkB,MAAA9F,KAAAK,EAAAjB,OAAAioC,QAEAF,EAAAllC,MAAA,IAGAilC,EAAAnZ,QA7CA,GAIAmZ,GAEAD,EANA55B,EAAAye,EAAAze,GAEArC,GADA8gB,EAAApc,KACAhH,EAAAsC,UAKAg8B,EAAA,EAAA,EA6MAM,EAAA,WACA,MAAAA,GA8GA,OA3GA5+B,GAAAtB,MAAAkgC,GACAC,SAAA,SAAAx0B,EAAAxP,GACAA,EAAAA,KACA,IAAA8hC,GAAA9hC,EAAA8hC,YAAA,WACAmC,EAAAjkC,EAAA0hC,QAEAwC,EAAA,CAoCA,OAnCAp6B,GAAA0F,EAAA,YAAA,SAAA1S,GACAA,EAAAukC,cAAAvkC,EAAAukC,aAAA8C,MAAA7jC,QAAA,cACAioB,EAAA/B,KAAA1pB,GACAonC,IACAz0B,EAAAI,SAAAL,EAAAsyB,MAIAh4B,EAAA0F,EAAA,WAAA,SAAA1S,GACAA,EAAAukC,cAAAvkC,EAAAukC,aAAA8C,MAAA7jC,QAAA,aACAioB,EAAA/B,KAAA1pB,KAKAgN,EAAA0F,EAAA,YAAA,SAAA1S,GACAA,EAAAukC,cAAAvkC,EAAAukC,aAAA8C,MAAA7jC,QAAA,cACA4jC,IACA,GAAAA,GACAz0B,EAAAc,YAAAf,EAAAsyB,MAKAh4B,EAAA0F,EAAA,OAAA,SAAA1S,GACAA,EAAAukC,cAAAvkC,EAAAukC,aAAA8C,MAAA7jC,QAAA,cACAmP,EAAAc,YAAAf,EAAAsyB,GACAvZ,EAAA/B,KAAA1pB,GACAmnC,GACAA,EAAAnnC,EAAAukC,aAAAyC,UAMAnoC,MAGAyoC,OAAA,SAAA50B,EAAAxP,GACAA,EAAAA,KAEA,IAAAqkC,GAAArkC,EAAAskC,MAMA,OAJAx6B,GAAA0F,EAAA,QAAA,SAAA1S,GACAA,EAAA4pB,iBACA4c,EAAAe,KAEA1oC,MAGA4oC,SAAA,SAAAC,EAAAxkC,GACAA,EAAAA,KACA,IAAA0J,GAAA,GAAAjC,GACAg9B,EAAA,GAAAC,WAwBA,OAtBAD,GAAA/F,OAAA,SAAAiG,GACAj7B,EAAA5B,QAAA68B,EAAA9oC,OAAAsD,SAEAslC,EAAA9F,QAAA,SAAA7hC,GACA,GAAA8nC,GAAA9nC,EAAAjB,OAAA+M,MAAAg8B,IACA,KAAAA,EACAC,MAAA,uDAEAA,MAAA,eAAAD,IAIA5kC,EAAA8kC,cACAL,EAAAM,kBAAAP,GACAxkC,EAAAglC,UACAP,EAAAQ,cAAAT,GACAxkC,EAAAklC,OACAT,EAAAU,WAAAX,GAEAC,EAAAM,kBAAAP,GAGA96B,EAAA9B,SAGAw9B,UAAA,SAAAz7B,EAAA3H,GACA,GAAA5H,OAAAwb,UAAAyvB,WACAlgC,EAAA1E,SAAAkJ,KACAA,EAAA27B,cAAA37B,IAEAvP,OAAAwb,UAAAyvB,WAAA17B,EAAA3H,OACA,CACA,GAAAhB,GAAAsG,SAAAC,cAAA,IACAoC,aAAA47B,QACA57B,EAAAxE,EAAA+I,IAAA40B,gBAAAn5B,IAEA3I,EAAAlB,KAAA6J,EACA3I,EAAAmR,aAAA,WAAAnQ,GAAA,UACAhB,EAAA+lB,cAAA,GAAAhqB,aAAA,cAOAzC,EAAAypC,MAAAA,IAGA5qC,EAAA,wBACA,YACA,UACA,WACA,SAAAmB,EAAA6K,EAAA6b,GAkTA,QAAAwkB,KACA,MAAAA,GAjTA,GAAAC,IACAC,GAAA,EACAC,GAAA,EACAC,IAAA,GAGAC,EAAA1gC,EAAA0E,QAAA1C,SAMAN,KAAA,SAAA0qB,EAAArrB,EAAA4/B,GAEA,MAAAnqC,gBAAAkqC,IAIA,gBAAAtU,KACAA,EAAAjqB,SAAA6V,iBAAAoU,IAGA51B,KAAA6G,SAAA2C,EAAAhD,UAAAovB,GACA51B,KAAAuK,QAAAf,EAAAtB,SAAAlI,KAAAuK,SAEA,kBAAAA,GACA4/B,EAAA5/B,EAEAf,EAAAtB,MAAAlI,KAAAuK,QAAAA,GAGA4/B,GACAnqC,KAAAmO,GAAA,SAAAg8B,GAGAnqC,KAAAoqC,gBAGAxoC,YAAA,WACA5B,KAAAmiB,SACApV,KAAA/M,QAzBA,GAAAkqC,GAAAtU,EAAArrB,EAAA4/B,IA6BA5/B,WAEA6/B,UAAA,WACApqC,KAAA6pC,UAGA7pC,KAAA6G,SAAAtI,QAAAyB,KAAAqqC,iBAAArqC,OAMAqqC,iBAAA,SAAAzU,GAEA,OAAAA,EAAA1iB,UACAlT,KAAAsqC,SAAA1U,GAGA51B,KAAAuK,QAAAggC,cAAA,GACAvqC,KAAAwqC,2BAAA5U,EAKA,IAAA1wB,GAAA0wB,EAAA1wB,QACA,IAAAA,GAAA4kC,EAAA5kC,GAAA,CAKA,IAAA,GAFAulC,GAAA7U,EAAApU,iBAAA,OAEApkB,EAAA,EAAAA,EAAAqtC,EAAAptC,OAAAD,IAAA,CACA,GAAAstC,GAAAD,EAAArtC,EACA4C,MAAAsqC,SAAAI,GAIA,GAAA,gBAAA1qC,MAAAuK,QAAAggC,WAAA,CACA,GAAA5wB,GAAAic,EAAApU,iBAAAxhB,KAAAuK,QAAAggC,WACA,KAAAntC,EAAA,EAAAA,EAAAuc,EAAAtc,OAAAD,IAAA,CACA,GAAA8Z,GAAAyC,EAAAvc,EACA4C,MAAAwqC,2BAAAtzB,OAKAszB,2BAAA,SAAA5U,GACA,GAAAphB,GAAAhB,iBAAAoiB,EACA,IAAAphB,EAOA,IAFA,GAAAm2B,GAAA,0BACA1pB,EAAA0pB,EAAA/T,KAAApiB,EAAAo2B,iBACA,OAAA3pB,GAAA,CACA,GAAAhd,GAAAgd,GAAAA,EAAA,EACAhd,IACAjE,KAAA6qC,cAAA5mC,EAAA2xB,GAEA3U,EAAA0pB,EAAA/T,KAAApiB,EAAAo2B,mBAOAN,SAAA,SAAAI,GACA,GAAAI,GAAA,GAAAC,GAAAL,EACA1qC,MAAA6pC,OAAAvsC,KAAAwtC,IAGAD,cAAA,SAAA5mC,EAAA2xB,GACA,GAAA2U,GAAA,GAAAS,GAAA/mC,EAAA2xB,EACA51B,MAAA6pC,OAAAvsC,KAAAitC,IAGApoB,MAAA,WAUA,QAAAzV,GAAAvL,GAEAS,WAAA,WACAqpC,EAAAt+B,SAAAxL,KAZA,GAAA8pC,GAAAjrC,IAIA,OAHAA,MAAAkrC,gBAAA,EACAlrC,KAAAmrC,cAAA,EAEAnrC,KAAA6pC,OAAAxsC,WAYA2C,MAAA6pC,OAAAtrC,QAAA,SAAAusC,GACAA,EAAAv8B,IAAA,WAAA7B,GACAo+B,EAAA3oB,cAbAniB,MAAA+yB,YAiBApmB,SAAA,SAAAxL,GAEAnB,KAAAkrC,kBACAlrC,KAAAmrC,aAAAnrC,KAAAmrC,eAAAhqC,EAAAiqC,SAEAprC,KAAAyO,QAAAjF,EAAAvI,YAAA,YACAypC,IAAAvpC,EAAAupC,IACAv3B,QAAAhS,EAAAgS,QACAyb,QAAAztB,EAAAytB,QACAwc,SAAAjqC,EAAAiqC,YAIAprC,KAAAkrC,iBAAAlrC,KAAA6pC,OAAAxsC,QACA2C,KAAA+yB,WAGA/yB,KAAAuK,QAAA8gC,OAAAvyB,SACAA,QAAAwyB,IAAA,aAAA1c,QAAAztB,EAAAjB,OAAAiB,EAAAgS,UAIA4f,SAAA,WACA,GAAArkB,GAAA1O,KAAAmrC,aAAA,OAAA,MACAnrC,MAAAurC,YAAA,EACAvrC,KAAAyO,QAAAC,GACA1O,KAAAyO,QAAA,aASAs8B,EAAAvhC,EAAA0E,QAAA1C,SACAN,KAAA,SAAAw/B,GACA1qC,KAAA0qC,IAAAA,GAEAvoB,MAAA,WAGA,GAAAopB,GAAAvrC,KAAAwrC,oBACA,OAAAD,OAEAvrC,MAAAkoB,QAAA,IAAAloB,KAAA0qC,IAAAe,aAAA,iBAKAzrC,KAAA0rC,WAAA,GAAAC,OACA3rC,KAAA0rC,WAAAngB,iBAAA,OAAAvrB,MACAA,KAAA0rC,WAAAngB,iBAAA,QAAAvrB,MAEAA,KAAA0qC,IAAAnf,iBAAA,OAAAvrB,MACAA,KAAA0qC,IAAAnf,iBAAA,QAAAvrB,WACAA,KAAA0rC,WAAAzpC,IAAAjC,KAAA0qC,IAAAzoC,OAGAupC,mBAAA,WACA,MAAAxrC,MAAA0qC,IAAA3X,UAAAlyB,SAAAb,KAAA0qC,IAAAe,cAGAvjB,QAAA,SAAAkjB,EAAAxc,GACA5uB,KAAAorC,SAAAA,EACAprC,KAAAyO,QAAAjF,EAAAvI,YAAA,YACAypC,IAAA1qC,KAAA0qC,IACAv3B,QAAAnT,KAAA0qC,IACA9b,QAAAA,EACAwc,SAAAA,MAOAQ,YAAA,SAAA78B,GACA,GAAA88B,GAAA,KAAA98B,EAAAtP,IACAO,MAAA6rC,IACA7rC,KAAA6rC,GAAA98B,IAIAg0B,OAAA,WACA/iC,KAAAkoB,SAAA,EAAA,UACAloB,KAAA8rC,gBAGA9I,QAAA,WACAhjC,KAAAkoB,SAAA,EAAA,WACAloB,KAAA8rC,gBAGAA,aAAA,WACA9rC,KAAA0rC,WAAAja,oBAAA,OAAAzxB,MACAA,KAAA0rC,WAAAja,oBAAA,QAAAzxB,MACAA,KAAA0qC,IAAAjZ,oBAAA,OAAAzxB,MACAA,KAAA0qC,IAAAjZ,oBAAA,QAAAzxB,SAOAgrC,EAAAD,EAAAv/B,SAEAN,KAAA,SAAAjH,EAAAkP,GACAnT,KAAAiE,IAAAA,EACAjE,KAAAmT,QAAAA,EACAnT,KAAA0qC,IAAA,GAAAiB,QAGAxpB,MAAA,WACAniB,KAAA0qC,IAAAnf,iBAAA,OAAAvrB,MACAA,KAAA0qC,IAAAnf,iBAAA,QAAAvrB,MACAA,KAAA0qC,IAAAzoC,IAAAjC,KAAAiE,GAEA,IAAAsnC,GAAAvrC,KAAAwrC,oBACAD,KACAvrC,KAAAkoB,QAAA,IAAAloB,KAAA0qC,IAAAe,aAAA,gBACAzrC,KAAA8rC,iBAIAA,aAAA,WACA9rC,KAAA0qC,IAAAjZ,oBAAA,OAAAzxB,MACAA,KAAA0qC,IAAAjZ,oBAAA,QAAAzxB,OAGAkoB,QAAA,SAAAkjB,EAAAxc,GACA5uB,KAAAorC,SAAAA,EACAprC,KAAAyO,QAAAjF,EAAAvI,YAAA,YACAypC,IAAA1qC,KAAA0qC,IACAv3B,QAAAnT,KAAAmT,QACAyb,QAAAA,EACAwc,SAAAA,OAkCA,OA5BA/lB,GAAA9jB,GAAAwqC,aAAA,SAAAxhC,EAAAnH,GACA,GAAA4oC,GAAA,GAAA9B,GAAAlqC,KAAAuK,EAAAnH,GAEA2K,EAAA,GAAAvE,GAAAsC,QAcA,OAZAkgC,GAAA79B,GAAA,WAAA,SAAAhN,GACA4M,EAAApB,SAAAxL,KAGA6qC,EAAA79B,GAAA,OAAA,SAAAhN,GACA4M,EAAA5B,QAAAhL,KAGA6qC,EAAA79B,GAAA,OAAA,SAAAhN,GACA4M,EAAA3B,OAAAjL,KAGA4M,EAAA9B,SAOAzC,EAAAtB,MAAA2hC,GACAoC,OAAA/B,IAGAvrC,EAAAkrC,OAAAA,IAGArsC,EAAA,wBACA,YACA,UACA,UACA,SAAAmB,EAAA6K,EAAAuyB,GAuoBA,QAAAmQ,KACA,MAAAA,GAroBA,GAAAC,IACA9gC,OAAA,OACAkO,OAAA,MACA6yB,MAAA,QACApa,SAAA,SACAqa,KAAA,OAIAC,EAAA,SAAAT,EAAAU,EAAAhiC,GACA,GAAA9K,GAAA0sC,EAAAN,EAGAriC,GAAA1K,SAAAyL,IAAAA,OACAiiC,YAAAN,EAAAM,YACAC,YAAAP,EAAAO,aAIA,IAAApoC,IAAA5E,KAAAA,EAAA48B,SAAA,OAqBA,IAlBA9xB,EAAAtG,MACAI,EAAAJ,IAAAuF,EAAAhG,OAAA+oC,EAAA,QAAAG,YAIA,MAAAniC,EAAAyD,OAAAu+B,GAAA,WAAAV,GAAA,WAAAA,GAAA,UAAAA,IACAxnC,EAAA84B,YAAA,mBACA94B,EAAA2J,KAAA/K,KAAAoP,UAAA9H,EAAAhE,OAAAgmC,EAAAj8B,OAAA/F,KAIAA,EAAAkiC,cACApoC,EAAA84B,YAAA,oCACA94B,EAAA2J,KAAA3J,EAAA2J,MAAAu+B,OAAAloC,EAAA2J,UAKAzD,EAAAiiC,cAAA,QAAA/sC,GAAA,WAAAA,GAAA,UAAAA,GAAA,CACA4E,EAAA5E,KAAA,OACA8K,EAAAkiC,cAAApoC,EAAA2J,KAAA2+B,QAAAltC,EACA,IAAAm7B,GAAArwB,EAAAqwB,UACArwB,GAAAqwB,WAAA,SAAAD,GAEA,GADAA,EAAAqC,iBAAA,yBAAAv9B,GACAm7B,EAAA,MAAAA,GAAAp8B,MAAAwB,KAAAhB,YAKA,QAAAqF,EAAA5E,MAAA8K,EAAAkiC,cACApoC,EAAAu3B,aAAA,EAIA,IAAA3uB,GAAA1C,EAAA0C,KACA1C,GAAA0C,MAAA,SAAA0tB,EAAAiS,EAAAC,GACAtiC,EAAAqiC,WAAAA,EACAriC,EAAAsiC,YAAAA,EACA5/B,GAAAA,EAAAnM,KAAAyJ,EAAA5G,QAAAg3B,EAAAiS,EAAAC,GAIA,IAAAlS,GAAApwB,EAAAowB,IAAAoB,EAAAvyB,EAAAtB,MAAA7D,EAAAkG,GAEA,OADAgiC,GAAA99B,QAAA,UAAA89B,EAAA5R,EAAApwB,GACAowB,GAIAmS,EAAAtjC,EAAAqG,SAAArE,SACA8gC,KAAA,WACA,MAAAJ,GAAAI,KAAA9tC,MAAAwB,KAAAhB,YASAiiB,QAAA,SAAA1a,GACA,MAAAiD,GAAAlD,QAAAtG,KAAA8P,WAAAvJ,IAKAwmC,MAAA,SAAAxiC,GACAA,EAAAf,EAAAtB,OAAAhF,OAAA,GAAAqH,EACA,IAAAgiC,GAAAvsC,KACA+6B,EAAAxwB,EAAAwwB,OAQA,OAPAxwB,GAAAwwB,QAAA,SAAAiS,GACA,GAAAC,GAAA1iC,EAAArH,MAAAqpC,EAAArpC,MAAA8pC,EAAAziC,GAAAyiC,CACA,SAAAT,EAAAr8B,IAAA+8B,EAAA1iC,KACAwwB,GAAAA,EAAAj6B,KAAAyJ,EAAA5G,QAAA4oC,EAAAS,EAAAziC,OACAgiC,GAAA99B,QAAA,OAAA89B,EAAAS,EAAAziC,KAEA2iC,UAAAltC,KAAAuK,GACAvK,KAAAssC,KAAA,OAAAtsC,KAAAuK,IAMA4iC,KAAA,SAAA7tC,EAAAmR,EAAAlG,GAEA,GAAAhE,EACA,OAAAjH,GAAA,gBAAAA,IACAiH,EAAAjH,EACAiL,EAAAkG,IAEAlK,MAAAjH,GAAAmR,EAGAlG,EAAAf,EAAAtB,OAAA0J,UAAA,EAAA1O,OAAA,GAAAqH,EACA,IAAA/I,GAAA+I,EAAA/I,IAKA,IAAA+E,IAAA/E,GACA,IAAAxB,KAAAkQ,IAAA3J,EAAAgE,GAAA,OAAA,MACA,KAAAvK,KAAA0Q,UAAAnK,EAAAgE,GACA,OAAA,CAKA,IAAAgiC,GAAAvsC,KACA+6B,EAAAxwB,EAAAwwB,QACAjrB,EAAA9P,KAAA8P,UACAvF,GAAAwwB,QAAA,SAAAiS,GAEAT,EAAAz8B,WAAAA,CACA,IAAAm9B,GAAA1iC,EAAArH,MAAAqpC,EAAArpC,MAAA8pC,EAAAziC,GAAAyiC,CAEA,OADAxrC,KAAAyrC,EAAAzjC,EAAAtB,SAAA3B,EAAA0mC,MACAA,IAAAV,EAAAr8B,IAAA+8B,EAAA1iC,MACAwwB,GAAAA,EAAAj6B,KAAAyJ,EAAA5G,QAAA4oC,EAAAS,EAAAziC,OACAgiC,GAAA99B,QAAA,OAAA89B,EAAAS,EAAAziC,KAEA2iC,UAAAltC,KAAAuK,GAGAhE,GAAA/E,IAAAxB,KAAA8P,WAAAtG,EAAAtB,SAAA4H,EAAAvJ,GAEA,IAAAslC,GAAA7rC,KAAA0R,QAAA,SAAAnH,EAAA6hC,MAAA,QAAA,QACA,WAAAP,GAAAthC,EAAAhE,QAAAgE,EAAAhE,MAAAA,EACA,IAAAo0B,GAAA36B,KAAAssC,KAAAT,EAAA7rC,KAAAuK,EAKA,OAFAvK,MAAA8P,WAAAA,EAEA6qB,GAMAyS,QAAA,SAAA7iC,GACAA,EAAAA,EAAAf,EAAAxH,MAAAuI,KACA,IAAAgiC,GAAAvsC,KACA+6B,EAAAxwB,EAAAwwB,QACAv5B,EAAA+I,EAAA/I,KAEA4rC,EAAA,WACAb,EAAAc,gBACAd,EAAA99B,QAAA,UAAA89B,EAAAA,EAAAt8B,WAAA1F,GAGAA,GAAAwwB,QAAA,SAAAiS,GACAxrC,GAAA4rC,IACArS,GAAAA,EAAAj6B,KAAAyJ,EAAA5G,QAAA4oC,EAAAS,EAAAziC,GACAgiC,EAAA76B,SAAA66B,EAAA99B,QAAA,OAAA89B,EAAAS,EAAAziC,GAGA,IAAAowB,IAAA,CAQA,OAPA36B,MAAA0R,QACAlI,EAAA1C,MAAAyD,EAAAwwB,UAEAmS,UAAAltC,KAAAuK,GACAowB,EAAA36B,KAAAssC,KAAA,SAAAtsC,KAAAuK,IAEA/I,GAAA4rC,IACAzS,GAMA12B,IAAA,WACA,GAAAlH,GACAyM,EAAAhG,OAAAxD,KAAA,YACAwJ,EAAAhG,OAAAxD,KAAAiQ,WAAA,QACAy8B,UACA,IAAA1sC,KAAA0R,QAAA,MAAA3U,EACA,IAAAgB,GAAAiC,KAAAuQ,IAAAvQ,KAAAqQ,YACA,OAAAtT,GAAA6F,QAAA,SAAA,OAAAo+B,mBAAAjjC,IAKAmF,MAAA,SAAA8pC,EAAAziC,GACA,MAAAyiC,MAIAM,EAAA9jC,EAAA0E,QAAA1C,SACAN,KAAA,SAAAqiC,EAAAhjC,GACAA,IAAAA,MACAA,EAAAgiC,SAAAvsC,KAAAusC,OAAAhiC,EAAAgiC,QACA,SAAAhiC,EAAAijC,aAAAxtC,KAAAwtC,WAAAjjC,EAAAijC,YACAxtC,KAAAytC,SACAF,GAAAvtC,KAAAquB,MAAAkf,EAAA/jC,EAAAtB,OAAA0I,QAAA,GAAArG,OAKAmjC,GAAAthB,KAAA,EAAAnsB,QAAA,EAAA8jC,OAAA,GACA4J,GAAAvhB,KAAA,EAAAnsB,QAAA,GAGA0H,EAAA,SAAApF,EAAAqrC,EAAAC,GACAA,EAAA9wB,KAAA+wB,IAAA/wB,KAAAD,IAAA+wB,EAAA,GAAAtrC,EAAAlF,OACA,IAEAD,GAFA2wC,EAAAhsC,MAAAQ,EAAAlF,OAAAwwC,GACAxwC,EAAAuwC,EAAAvwC,MAEA,KAAAD,EAAA,EAAAA,EAAA2wC,EAAA1wC,OAAAD,IAAA2wC,EAAA3wC,GAAAmF,EAAAnF,EAAAywC,EACA,KAAAzwC,EAAA,EAAAA,EAAAC,EAAAD,IAAAmF,EAAAnF,EAAAywC,GAAAD,EAAAxwC,EACA,KAAAA,EAAA,EAAAA,EAAA2wC,EAAA1wC,OAAAD,IAAAmF,EAAAnF,EAAAC,EAAAwwC,GAAAE,EAAA3wC,GAqbA,OAjbAkwC,GAAA/hC,SAIAghC,OAAAO,EAIAkB,WAAA,aAIA19B,OAAA,SAAA/F,GACA,MAAAvK,MAAAlC,IAAA,SAAAyuC,GAAA,MAAAA,GAAAj8B,OAAA/F,MAIA+hC,KAAA,WACA,MAAAJ,GAAAI,KAAA9tC,MAAAwB,KAAAhB,YAMAotB,IAAA,SAAAmhB,EAAAhjC,GACA,MAAAvK,MAAAkQ,IAAAq9B,EAAA/jC,EAAAtB,OAAA67B,OAAA,GAAAx5B,EAAAojC,KAIA1tC,OAAA,SAAAstC,EAAAhjC,GACAA,EAAAf,EAAAtB,SAAAqC,EACA,IAAA0jC,IAAAzkC,EAAApH,QAAAmrC,EACAA,GAAAU,GAAAV,GAAAA,EAAA3mC,OACA,IAAAsnC,GAAAluC,KAAAmuC,eAAAZ,EAAAhjC,EAKA,QAJAA,EAAAqG,QAAAs9B,EAAA7wC,SACAkN,EAAAsG,SAAAu9B,SAAAC,UAAAH,QAAAA,GACAluC,KAAAyO,QAAA,SAAAzO,KAAAuK,IAEA0jC,EAAAC,EAAA,GAAAA,GAOAh+B,IAAA,SAAAq9B,EAAAhjC,GACA,GAAA,MAAAgjC,EAAA,CAEAhjC,EAAAf,EAAAtB,SAAAwlC,EAAAnjC,GACAA,EAAArH,QAAAlD,KAAAsuC,UAAAf,KACAA,EAAAvtC,KAAAkD,MAAAqqC,EAAAhjC,OAGA,IAAA0jC,IAAAzkC,EAAApH,QAAAmrC,EACAA,GAAAU,GAAAV,GAAAA,EAAA3mC,OAEA,IAAAinC,GAAAtjC,EAAAsjC,EACA,OAAAA,IAAAA,GAAAA,GACAA,EAAA7tC,KAAA3C,SAAAwwC,EAAA7tC,KAAA3C,QACAwwC,EAAA,IAAAA,GAAA7tC,KAAA3C,OAAA,EAEA,IAgBAkvC,GAAAnvC,EAhBA8S,KACAq+B,KACAC,KACAC,KACAC,KAEAtiB,EAAA7hB,EAAA6hB,IACA2X,EAAAx5B,EAAAw5B,MACA9jC,EAAAsK,EAAAtK,OAEAmqB,GAAA,EACAukB,EAAA3uC,KAAAwtC,YAAA,MAAAK,GAAAtjC,EAAA6f,QAAA,EACAwkB,EAAAplC,EAAA1E,SAAA9E,KAAAwtC,YAAAxtC,KAAAwtC,WAAA,IAKA,KAAApwC,EAAA,EAAAA,EAAAmwC,EAAAlwC,OAAAD,IAAA,CACAmvC,EAAAgB,EAAAnwC,EAIA,IAAAmD,GAAAP,KAAAuQ,IAAAg8B,EACA,IAAAhsC,EAAA,CACA,GAAAwjC,GAAAwI,IAAAhsC,EAAA,CACA,GAAAgG,GAAAvG,KAAAsuC,UAAA/B,GAAAA,EAAAz8B,WAAAy8B,CACAhiC,GAAArH,QAAAqD,EAAAhG,EAAA2C,MAAAqD,EAAAgE,IACAhK,EAAA2P,IAAA3J,EAAAgE,GACAikC,EAAAlxC,KAAAiD,GACAouC,IAAAvkB,IAAAA,EAAA7pB,EAAA8Q,WAAAu9B,IAEAF,EAAAnuC,EAAAwP,OACA2+B,EAAAnuC,EAAAwP,MAAA,EACAG,EAAA5S,KAAAiD,IAEAgtC,EAAAnwC,GAAAmD,MAGA6rB,KACAmgB,EAAAgB,EAAAnwC,GAAA4C,KAAA6uC,eAAAtC,EAAAhiC,GACAgiC,IACAgC,EAAAjxC,KAAAivC,GACAvsC,KAAA8uC,cAAAvC,EAAAhiC,GACAmkC,EAAAnC,EAAAx8B,MAAA,EACAG,EAAA5S,KAAAivC,KAMA,GAAAtsC,EAAA,CACA,IAAA7C,EAAA,EAAAA,EAAA4C,KAAA3C,OAAAD,IACAmvC,EAAAvsC,KAAAutC,SAAAnwC,GACAsxC,EAAAnC,EAAAx8B,MAAA0+B,EAAAnxC,KAAAivC,EAEAkC,GAAApxC,QAAA2C,KAAAmuC,eAAAM,EAAAlkC,GAIA,GAAAwkC,IAAA,EACAnsC,GAAA+rC,GAAAviB,GAAAnsB,CAkBA,IAjBAiQ,EAAA7S,QAAAuF,GACAmsC,EAAA/uC,KAAA3C,SAAA6S,EAAA7S,QAAA2C,KAAAutC,SAAAlX,KAAA,SAAA6B,EAAAh5B,GACA,MAAAg5B,KAAAhoB,EAAAhR,KAEAc,KAAAutC,SAAAlwC,OAAA,EACAsK,EAAA3H,KAAAutC,SAAAr9B,EAAA,GACAlQ,KAAA3C,OAAA2C,KAAAutC,SAAAlwC,QACAkxC,EAAAlxC,SACAsxC,IAAAvkB,GAAA,GACAziB,EAAA3H,KAAAutC,SAAAgB,EAAA,MAAAV,EAAA7tC,KAAA3C,OAAAwwC,GACA7tC,KAAA3C,OAAA2C,KAAAutC,SAAAlwC,QAIA+sB,GAAApqB,KAAAoqB,MAAAxZ,QAAA,KAGArG,EAAAqG,OAAA,CACA,IAAAxT,EAAA,EAAAA,EAAAmxC,EAAAlxC,OAAAD,IACA,MAAAywC,IAAAtjC,EAAArL,MAAA2uC,EAAAzwC,GACAmvC,EAAAgC,EAAAnxC,GACAmvC,EAAA99B,QAAA,MAAA89B,EAAAvsC,KAAAuK,IAEA6f,GAAA2kB,IAAA/uC,KAAAyO,QAAA,OAAAzO,KAAAuK,IACAgkC,EAAAlxC,QAAAoxC,EAAApxC,QAAAmxC,EAAAnxC,UACAkN,EAAAsG,SACAu9B,MAAAG,EACAL,QAAAO,EACAJ,OAAAG,GAEAxuC,KAAAyO,QAAA,SAAAzO,KAAAuK,IAKA,MAAA0jC,GAAAV,EAAA,GAAAA,IAOAlf,MAAA,SAAAkf,EAAAhjC,GACAA,EAAAA,EAAAf,EAAAxH,MAAAuI,KACA,KAAA,GAAAnN,GAAA,EAAAA,EAAA4C,KAAAutC,SAAAlwC,OAAAD,IACA4C,KAAAgvC,iBAAAhvC,KAAAutC,SAAAnwC,GAAAmN,EAMA,OAJAA,GAAA0kC,gBAAAjvC,KAAAutC,SACAvtC,KAAAytC,SACAF,EAAAvtC,KAAAosB,IAAAmhB,EAAA/jC,EAAAtB,OAAA0I,QAAA,GAAArG,IACAA,EAAAqG,QAAA5Q,KAAAyO,QAAA,QAAAzO,KAAAuK,GACAgjC,GAIAjwC,KAAA,SAAAivC,EAAAhiC,GACA,MAAAvK,MAAAosB,IAAAmgB,EAAA/iC,EAAAtB,OAAA2lC,GAAA7tC,KAAA3C,QAAAkN,KAIApN,IAAA,SAAAoN,GACA,GAAAgiC,GAAAvsC,KAAA6tC,GAAA7tC,KAAA3C,OAAA,EACA,OAAA2C,MAAAC,OAAAssC,EAAAhiC,IAIApD,QAAA,SAAAolC,EAAAhiC,GACA,MAAAvK,MAAAosB,IAAAmgB,EAAA/iC,EAAAtB,OAAA2lC,GAAA,GAAAtjC,KAIAvC,MAAA,SAAAuC,GACA,GAAAgiC,GAAAvsC,KAAA6tC,GAAA,EACA,OAAA7tC,MAAAC,OAAAssC,EAAAhiC,IAIA3D,MAAA,WACA,MAAAA,OAAApI,MAAAwB,KAAAutC,SAAAvuC,YAKAuR,IAAA,SAAAxR,GACA,GAAA,MAAAA,EACA,MAAAiB,MAAAkvC,MAAAnwC,IACAiB,KAAAkvC,MAAAlvC,KAAAmvC,SAAApwC,EAAA+Q,YAAA/Q,KACAA,EAAAgR,KAAA/P,KAAAkvC,MAAAnwC,EAAAgR,MAIAvL,IAAA,SAAAzF,GACA,MAAA,OAAAiB,KAAAuQ,IAAAxR,IAIA8uC,GAAA,SAAA3uC,GAEA,MADAA,GAAA,IAAAA,GAAAc,KAAA3C,QACA2C,KAAAutC,SAAAruC,IAKAkwC,MAAA,SAAA7oC,EAAA+G,GACA,MAAAtN,MAAAsN,EAAA,OAAA,UAAA/G,IAKA8oC,UAAA,SAAA9oC,GACA,MAAAvG,MAAAovC,MAAA7oC,GAAA,IAMA6jB,KAAA,SAAA7f,GACA,GAAAijC,GAAAxtC,KAAAwtC,UACA,KAAAA,EAAA,KAAA,IAAApvC,OAAA,yCACAmM,KAAAA,KAEA,IAAAlN,GAAAmwC,EAAAnwC,MAUA,OATAmM,GAAAzF,WAAAypC,KAAAA,EAAAhkC,EAAAvC,MAAAumC,EAAAxtC,OAGA,IAAA3C,GAAAmM,EAAA1E,SAAA0oC,GACAxtC,KAAAutC,SAAAvtC,KAAAsvC,OAAA9B,GAEAxtC,KAAAutC,SAAAnjB,KAAAojB,GAEAjjC,EAAAqG,QAAA5Q,KAAAyO,QAAA,OAAAzO,KAAAuK,GACAvK,MAIAyoB,MAAA,SAAAjY,GACA,MAAAxQ,MAAAlC,IAAA0S,EAAA,KAMAu8B,MAAA,SAAAxiC,GACAA,EAAAf,EAAAtB,OAAAhF,OAAA,GAAAqH,EACA,IAAAwwB,GAAAxwB,EAAAwwB,QACA9qB,EAAAjQ,IAQA,OAPAuK,GAAAwwB,QAAA,SAAAiS,GACA,GAAAnB,GAAAthC,EAAA8jB,MAAA,QAAA,KACApe,GAAA47B,GAAAmB,EAAAziC,GACAwwB,GAAAA,EAAAj6B,KAAAyJ,EAAA5G,QAAAsM,EAAA+8B,EAAAziC,GACA0F,EAAAxB,QAAA,OAAAwB,EAAA+8B,EAAAziC,IAEA2iC,UAAAltC,KAAAuK,GACAvK,KAAAssC,KAAA,OAAAtsC,KAAAuK,IAMAc,OAAA,SAAAkhC,EAAAhiC,GACAA,EAAAA,EAAAf,EAAAxH,MAAAuI,KACA,IAAA/I,GAAA+I,EAAA/I,IAEA,IADA+qC,EAAAvsC,KAAA6uC,eAAAtC,EAAAhiC,IACAgiC,EAAA,OAAA,CACA/qC,IAAAxB,KAAAosB,IAAAmgB,EAAAhiC,EACA,IAAA0F,GAAAjQ,KACA+6B,EAAAxwB,EAAAwwB,OAMA,OALAxwB,GAAAwwB,QAAA,SAAA7C,EAAA8U,EAAAuC,GACA/tC,GAAAyO,EAAAmc,IAAA8L,EAAAqX,GACAxU,GAAAA,EAAAj6B,KAAAyuC,EAAA5rC,QAAAu0B,EAAA8U,EAAAuC,IAEAhD,EAAAY,KAAA,KAAA5iC,GACAgiC,GAKArpC,MAAA,SAAA8pC,EAAAziC,GACA,MAAAyiC,IAIAhrC,MAAA,WACA,MAAA,IAAAhC,MAAA6E,YAAA7E,KAAAutC,UACAhB,OAAAvsC,KAAAusC,OACAiB,WAAAxtC,KAAAwtC,cAKA2B,SAAA,SAAA5oC,GACA,MAAAA,GAAAvG,KAAAusC,OAAA7mC,UAAA2K,aAAA,OAKAo9B,OAAA,WACAztC,KAAA3C,OAAA,EACA2C,KAAAutC,YACAvtC,KAAAkvC,UAKAL,eAAA,SAAAtoC,EAAAgE,GACA,GAAAvK,KAAAsuC,UAAA/nC,GAEA,MADAA,GAAA0J,aAAA1J,EAAA0J,WAAAjQ,MACAuG,CAEAgE,GAAAA,EAAAf,EAAAxH,MAAAuI,MACAA,EAAA0F,WAAAjQ,IACA,IAAAusC,GAAA,GAAAvsC,MAAAusC,OAAAhmC,EAAAgE,EACA,OAAAgiC,GAAAn8B,iBACApQ,KAAAyO,QAAA,UAAAzO,KAAAusC,EAAAn8B,gBAAA7F,IACA,GAFAgiC,GAMA4B,eAAA,SAAAZ,EAAAhjC,GAEA,IAAA,GADA2jC,MACA9wC,EAAA,EAAAA,EAAAmwC,EAAAlwC,OAAAD,IAAA,CACA,GAAAmvC,GAAAvsC,KAAAuQ,IAAAg9B,EAAAnwC,GACA,IAAAmvC,EAAA,CAEA,GAAArtC,GAAAc,KAAA2E,QAAA4nC,EACAvsC,MAAAutC,SAAA5lC,OAAAzI,EAAA,GACAc,KAAA3C,eAIA2C,MAAAkvC,MAAA3C,EAAAx8B,IACA,IAAAhS,GAAAiC,KAAAmvC,SAAA5C,EAAAz8B,WACA,OAAA/R,SAAAiC,MAAAkvC,MAAAnxC,GAEAwM,EAAAqG,SACArG,EAAArL,MAAAA,EACAqtC,EAAA99B,QAAA,SAAA89B,EAAAvsC,KAAAuK,IAGA2jC,EAAA5wC,KAAAivC,GACAvsC,KAAAgvC,iBAAAzC,EAAAhiC,IAEA,MAAA2jC,IAKAI,UAAA,SAAA/B,GACA,MAAAA,aAAAO,IAIAgC,cAAA,SAAAvC,EAAAhiC,GACAvK,KAAAkvC,MAAA3C,EAAAx8B,KAAAw8B,CACA,IAAAxuC,GAAAiC,KAAAmvC,SAAA5C,EAAAz8B,WACA,OAAA/R,IAAAiC,KAAAkvC,MAAAnxC,GAAAwuC,GACAA,EAAAp+B,GAAA,MAAAnO,KAAAwvC,eAAAxvC,OAIAgvC,iBAAA,SAAAzC,EAAAhiC,SACAvK,MAAAkvC,MAAA3C,EAAAx8B,IACA,IAAAhS,GAAAiC,KAAAmvC,SAAA5C,EAAAz8B,WACA,OAAA/R,SAAAiC,MAAAkvC,MAAAnxC,GACAiC,OAAAusC,EAAAt8B,kBAAAs8B,GAAAt8B,WACAs8B,EAAA98B,IAAA,MAAAzP,KAAAwvC,eAAAxvC,OAOAwvC,eAAA,SAAAzgC,EAAAw9B,EAAAt8B,EAAA1F,GACA,GAAAgiC,EAAA,CACA,IAAA,QAAAx9B,GAAA,WAAAA,IAAAkB,IAAAjQ,KAAA,MAEA,IADA,YAAA+O,GAAA/O,KAAAC,OAAAssC,EAAAhiC,GACA,WAAAwE,EAAA,CACA,GAAA0gC,GAAAzvC,KAAAmvC,SAAA5C,EAAA96B,sBACA1T,EAAAiC,KAAAmvC,SAAA5C,EAAAz8B,WACA2/B,KAAA1xC,IACA,MAAA0xC,SAAAzvC,MAAAkvC,MAAAO,GACA,MAAA1xC,IAAAiC,KAAAkvC,MAAAnxC,GAAAwuC,KAIAvsC,KAAAyO,QAAAjQ,MAAAwB,KAAAhB,cASAwK,EAAAtB,MAAAgkC,GAEAM,aAAA,EAMAC,aAAA,EAEAH,KAAAA,EAEAQ,OAAAA,EACAQ,WAAAA,IAIA3uC,EAAAutC,OAAAA,IAGA1uC,EAAA,uBACA,YACA,UACA,UACA,UACA,SACA,YACA,YACA,SAAAmB,EAAA6K,EAAAwQ,EAAAkP,EAAA3J,EAAAqN,EAAA9Y,GAWA,QAAA47B,GAAA58B,EAAA68B,EAAAC,EAAAC,GAoBA,GAAAv4B,GAAA0C,EAAApC,SAAA9E,GACAg9B,EAAA91B,EAAAlC,YAAAR,GACAy4B,EAAAxwB,EAAArD,KAAA4zB,EAEAC,GAAAr3B,KAAA,EACAq3B,EAAAt3B,IAAA,EAEA3F,EAAAY,YAAA,QAAAlM,OAAAsL,EAAAY,WAAAmP,SAAAhgB,eACAyU,EAAAhE,KAAAC,YAAAT,EAGA,IAAAk9B,GAAA,IA8EA,OA5EA3Z,GAAA73B,MAAAmxC,EAAA,SAAAM,GACA,GAAAC,GAAAD,EAAAC,OACArxB,EAAAoxB,EAAApxB,IACAsW,EAAA,EAGAgb,GACAC,GACAC,EAAAN,EAAAr3B,KAAAq3B,EAAAp3B,MAAAkG,EAAAP,EACAgyB,EAAAzxB,EAAAP,EAAAyxB,EAAAr3B,KACA63B,EAAAR,EAAAp3B,OACAu3B,EAAAj+B,OAAA,IAEAu+B,GACAC,EAAAV,EAAAt3B,IAAAs3B,EAAAn3B,OAAAiG,EAAAN,EACAmyB,EAAA7xB,EAAAN,EAAAwxB,EAAAt3B,IACA83B,EAAAR,EAAAn3B,QACAs3B,EAAAj+B,OAAA,IAGA,IAAA29B,EAAA,CACA,GAAAe,GAAAf,EAAA98B,EAAAm9B,EAAAW,aAAAV,EAAAC,EAAAN,EACA1a,GAAA,mBAAAwb,GAAA,EAAAA,EAGA,GAAAE,GAAAtxB,EAAArD,KAAApJ,GAKAg+B,GACAT,EAAAxxB,EAAAP,EACAgyB,EAAAzxB,EAAAP,EAAAuyB,EAAAl4B,MACA43B,EAAAxzB,KAAAD,IAAAizB,EAAAr3B,KAAAqE,KAAA+wB,IAAAiC,EAAAr3B,KAAAq3B,EAAAp3B,MAAAkG,EAAAP,GAAAuyB,EAAAl4B,OAAA,IAAAk4B,EAAAl4B,QACAu3B,EAAAj+B,OAAA,IAEA8+B,GACAN,EAAA5xB,EAAAN,EACAmyB,EAAA7xB,EAAAN,EAAAsyB,EAAAj4B,OACA23B,EAAAxzB,KAAAD,IAAAizB,EAAAt3B,IAAAsE,KAAA+wB,IAAAiC,EAAAt3B,IAAAs3B,EAAAn3B,OAAAiG,EAAAN,GAAAsyB,EAAAj4B,QAAA,IAAAi4B,EAAAj4B,SACAs3B,EAAAj+B,OAAA,IAEA++B,EAAAj0B,KAAAD,IAAAizB,EAAAr3B,KAAAo4B,GACAG,EAAAl0B,KAAAD,IAAAizB,EAAAt3B,IAAAs4B,GACAG,EAAAn0B,KAAA+wB,IAAAiC,EAAAr3B,KAAAq3B,EAAAp3B,MAAAm4B,EAAAD,EAAAl4B,OACAw4B,EAAAp0B,KAAA+wB,IAAAiC,EAAAt3B,IAAAs3B,EAAAn3B,OAAAm4B,EAAAF,EAAAj4B,QACAD,EAAAu4B,EAAAF,EACAp4B,EAAAu4B,EAAAF,CAiBA,OAfA9b,IAAA0b,EAAAl4B,MAAAA,GAAAk4B,EAAAj4B,OAAAA,IAEA,MAAAo3B,GAAA7a,EAAA6a,EAAA7a,YACA6a,GACAE,OAAAA,EACAU,aAAAX,EAAAW,aACAl4B,KAAAs4B,EACAv4B,IAAAw4B,EACAt4B,MAAAA,EACAC,OAAAA,EACAuc,SAAAA,EACAgb,eAAAA,KAIAhb,IAKA6a,EAAA7a,UAAAya,GACAA,EAAA98B,EAAAk9B,EAAAY,aAAAZ,EAAAE,OAAAF,EAAAG,eAAAN,GAIAtwB,EAAA9D,iBAAA3I,EAAAk9B,GAEAA,EAGA,QAAAnC,GAAA/6B,EAAA+L,EAAAuyB,EAAAC,EAAAzB,GACA,GAAAD,GAAA7xC,EAAAU,MAAA4yC,EAAA,SAAAlB,GACA,GAAAoB,IACApB,OAAAA,EACAU,aAAA9nC,QAAAonC,GACArxB,KAAAP,EAAAO,EAAAP,EAAAC,EAAAM,EAAAN,GAMA,OAJA8yB,KACAC,EAAAzyB,IAAAP,GAAA,KAAA4xB,EAAAj+B,OAAA,GAAAo/B,EAAA/yB,GAAA+yB,EAAA/yB,EACAgzB,EAAAzyB,IAAAN,GAAA,KAAA2xB,EAAAj+B,OAAA,GAAAo/B,EAAA9yB,GAAA8yB,EAAA9yB,GAEA+yB,GAGA,OAAA5B,GAAA58B,EAAA68B,EAAAC,GAGA,QAAA9vC,GACAgT,EACAy+B,EACAC,EACAC,EACA7B,GAkGA,QAAAtyC,GAAAszC,EAAAV,GACAP,EAAAryC,MACAszC,aAAAA,EACAV,OAAAA,EACArxB,KACAP,GACA+xB,EAAA/xB,EACAgyB,EAAAhyB,EAAA3F,EACA43B,EAAAjyB,GAAA3F,GAAA,IACAi4B,EAAA3+B,OAAA,IACAsM,GACAkyB,EAAAlyB,EACAmyB,EAAAnyB,EAAA3F,EACA23B,EAAAhyB,GAAA3F,GAAA,IACAg4B,EAAA3+B,OAAA,OAnEA,GAAAy/B,EACA,IAAA,gBAAAH,IAAA,eAAAA,IAAA,mBAAAA,IAMA,GALAG,EAAAC,YAAAn5B,SAAA+4B,GAAA,GAKA,iBAAAvuC,KAAAwuC,EAAA,IAAA,CACA,GAAAI,GAAAD,YAAAE,iBAAAN,GACAO,EAAAP,EAAA/5B,WAAAm6B,YAAAE,iBAAAN,EAAA/5B,aAAAu6B,EAAA,EAAA1yC,EAAA,EAAAiG,EAAA,EAAA0sC,EAAA,GACAC,EAAAN,YAAAE,iBAAA/+B,GACAo/B,EAAAp/B,EAAA0E,WAAAm6B,YAAAE,iBAAA/+B,EAAA0E,aAAAu6B,EAAA,EAAA1yC,EAAA,EAAAiG,EAAA,EAAA0sC,EAAA,EACAN,GAAAnzB,GAAAxB,KAAA+wB,IAAA8D,EAAAG,EAAAD,EAAAC,EAAAE,EAAAF,EAAAG,EAAAH,GACAL,EAAAlB,GAAAzzB,KAAA+wB,IAAA8D,EAAAG,EAAAD,EAAAC,EAAAE,EAAAF,EAAAG,EAAAH,GACAh1B,KAAA+wB,IAAA8D,EAAAtsC,EAAAwsC,EAAAxsC,EAAA2sC,EAAA3sC,EAAA4sC,EAAA5sC,QAGAosC,GAAAH,CAIA,IAAAA,EAAA79B,WAIA,IAFA,GAAAy+B,GAAA,YAAAC,SAAA5+B,iBAAA+9B,GAAA/4B,SACAvN,EAAAsmC,EAAA79B,WACAzI,GAAA,GAAAA,EAAA/F,UAAA,QAAA+F,EAAAiI,UAAA,CACA,GAAAm/B,GAAAV,YAAAn5B,SAAAvN,GAAA,GACAqnC,EAAAF,SAAA5+B,iBAAAvI,EAIA,IAHA,oBAAAjI,KAAAsvC,EAAA95B,YACA25B,GAAA,IAEAA,GAAA,qBAAAnvC,KAAAsvC,EAAAnd,UAAA,CACA,GAAAod,GAAAx1B,KAAA+wB,IAAA4D,EAAAnzB,EAAAmzB,EAAAlB,EAAA6B,EAAA9zB,EAAA8zB,EAAA7B,GACAgC,EAAAz1B,KAAA+wB,IAAA4D,EAAApzB,EAAAozB,EAAAtB,EAAAiC,EAAA/zB,EAAA+zB,EAAAjC,EACAsB,GAAApzB,EAAAvB,KAAAD,IAAA40B,EAAApzB,EAAA+zB,EAAA/zB,GACAozB,EAAAnzB,EAAAxB,KAAAD,IAAA40B,EAAAnzB,EAAA8zB,EAAA9zB,GACAmzB,EAAAlB,EAAA+B,EAAAb,EAAAnzB,EACAmzB,EAAAtB,EAAAoC,EAAAd,EAAApzB,EAEA,YAAAg0B,EAAA95B,WACA25B,GAAA,GAEAlnC,EAAAA,EAAAyI,WAIA,GAAA4K,GAAAozB,EAAApzB,EACAC,EAAAmzB,EAAAnzB,EACA5F,EAAA,KAAA+4B,GAAAA,EAAAtB,EAAAsB,EAAAtB,EAAAsB,EAAA/4B,MACAC,EAAA,KAAA84B,GAAAA,EAAAlB,GAAAiC,OAAAC,WAAA,8CAAAp0B,EAAA,OAAAC,EAAA,YAAAmzB,EAAA94B,OAAA,WAAAD,EAAA,2CAAA2F,EAAA,OAAAC,EAAA,OAAAmzB,EAAA94B,OAAA,OAAAD,EAAA,KAAA,GAAA,OAAA+4B,EAAAlB,EAAAkB,EAAA94B,QAGA+2B,IAmBAptC,OAAAhE,QAAAizC,EAAA,SAAA3yB,GACA,GAAA8zB,GAAAlB,CACA,QAAA5yB,GACA,IAAA,iBACAvhB,EAAA,KAAA,KACA,MACA,KAAA,iBACAA,EAAA,KAAA,KACA,MACA,KAAA,iBACAq1C,GAAAA,CAEA,KAAA,kBACAr1C,EAAAq1C,EAAA,KAAA,KAAAA,EAAA,KAAA,KACA,MACA,KAAA,QACAA,GAAAA,CAEA,KAAA,SACAr1C,EAAAq1C,EAAA,KAAA,KAAAA,EAAA,KAAA,MACAr1C,EAAAq1C,EAAA,KAAA,KAAAA,EAAA,KAAA,KACA,MACA,KAAA,YACAA,GAAAA,CAEA,KAAA,QAEAr1C,EAAAq1C,EAAA,KAAA,KAAAA,EAAA,KAAA,MACAr1C,EAAAq1C,EAAA,KAAA,KAAAA,EAAA,KAAA,KACA,MACA,KAAA,YACAA,GAAAA,CAEA,KAAA,QAEAr1C,EAAAq1C,EAAA,KAAA,KAAAA,EAAA,KAAA,MACAr1C,EAAAq1C,EAAA,KAAA,KAAAA,EAAA,KAAA,KACA,MACA,SAGAr1C,EAAAuhB,EAAA+xB,aAAA/xB,EAAAqxB,UAIA,IAAA13B,GAAAk3B,EAAA58B,EAAA68B,EAAAC,GAAAQ,EAAAz3B,EAAA63B,EAAA53B,GAGA,OAFAJ,GAAAk5B,cAAAA,EAEAl5B,EAGA,QAAAo6B,GAAA/+B,EAAAxP,GACA,QAAAwuC,GAAA1xC,GACA,GAAA/B,GAAAhC,CAEA,IAAA+D,EAAA2xC,eAEA,IADA1zC,EAAA,8CAAAnC,MAAA,KACAG,EAAA,EAAAA,EAAAgC,EAAA/B,OAAAD,IACA+D,EAAA/B,EAAAhC,IAAA+D,EAAA2xC,eAAA,GAAA1zC,EAAAhC,IAKAiH,EAAAA,KACA,IAGAkU,GAEAw6B,EACA5T,EACAtU,EAEAmmB,EACAC,EACA+B,EACA92B,EAZA+2B,EAAA5uC,EAAA6hC,QAAAryB,EACAq/B,EAAA7uC,EAAA6uC,QAAA,EACAC,EAAA9uC,EAAA8uC,YAEA77B,EAAAjT,EAAAsH,UAAAA,SASAynC,EAAA/uC,EAAAgvC,QACAC,EAAAjvC,EAAAkvC,OACAC,EAAAnvC,EAAAovC,QAEAtU,EAAA,SAAAh+B,GACA,GACAuyC,GADAC,EAAAp0B,EAAA1C,gBAAAvF,EAGAu7B,GAAA1xC,GAEAA,EAAA4pB,iBACAgoB,EAAA5xC,EAAAyyC,OAEA5C,EAAA7vC,EAAA0yC,QACA5C,EAAA9vC,EAAA2yC,QAEAd,EAAAzzB,EAAAvD,iBAAAnI,GACAqI,EAAAqD,EAAArD,KAAArI,GAGA6/B,EAAA5/B,EAAAC,IAAAk/B,EAAA,UAEA16B,EAAAyB,EAAApO,cAAA,OACAkI,EAAAC,IAAAwE,GACAC,SAAA,WACAC,IAAA,EACAC,KAAA,EACAC,MAAAg7B,EAAAh7B,MACAC,OAAA+6B,EAAA/6B,OACAC,OAAA,WACA1D,QAAA,KACAu+B,OAAAA,IAEA15B,EAAAvD,OAAAa,EAAAhE,KAAAiF,GAEAqU,EAAAze,GAAAmJ,EAAA,sBAAAy8B,GAAA5lC,GAAAmJ,EAAA,mBAAAuT,GAEAuoB,GACAA,EAAAjyC,IAIA4yC,EAAA,SAAA5yC,GAGA,GAFA0xC,EAAA1xC,GAEA,IAAAA,EAAAyyC,OACA,MAAA/oB,GAAA1pB,EAMA,IAHAA,EAAA6yC,OAAA7yC,EAAA0yC,QAAA7C,EACA7vC,EAAA8yC,OAAA9yC,EAAA2yC,QAAA7C,EAEAiC,EAAA,CACA,GAAA7zC,GAAA2zC,EAAAt6B,KAAAvX,EAAA6yC,OACAjC,EAAAiB,EAAAv6B,IAAAtX,EAAA8yC,MACAd,KAEA9zC,EAAA8zC,EAAAe,OACA70C,EAAA8zC,EAAAe,MAGA70C,EAAA8zC,EAAAgB,OACA90C,EAAA8zC,EAAAgB,MAGApC,EAAAoB,EAAAiB,OACArC,EAAAoB,EAAAiB,MAGArC,EAAAoB,EAAAkB,OACAtC,EAAAoB,EAAAkB,OAKA90B,EAAAvD,iBAAAnI,GACA6E,KAAArZ,EACAoZ,IAAAs5B,IAGA5wC,EAAA4pB,iBACAuoB,GACAA,EAAAnyC,IAIA0pB,EAAA,SAAA1pB,GACA0xC,EAAA1xC,GAEAyrB,EAAAnd,IAAA6H,EAAA,sBAAAy8B,GAAAtkC,IAAA6H,EAAA,mBAAAuT,GAEA7Q,EAAA/Z,OAAAsY,GAEAi7B,GACAA,EAAAryC,GAMA,OAFAyrB,GAAAze,GAAA8kC,EAAA,uBAAA9T,IAIAl/B,OAAA,WACA2sB,EAAAnd,IAAAwjC,KAKA,QAAAqB,KACA,MAAAA,GA9bA,GAOAje,IAPAzJ,EAAAze,GACAye,EAAAnd,IACAyZ,EAAA1Y,KACA0Y,EAAAP,WACApJ,EAAA3B,aACA9J,EAAAI,SACAqL,EAAA3G,OACA7W,MAAA2D,UAAA2wB,MACAv4B,EAAAiE,MAAA2D,UAAA5H,GAkcA,OATA0L,GAAAtB,MAAAosC,GACAx0C,OAAAA,EAEA+tC,GAAAA,EAEA+E,QAAAA,IAIAj0C,EAAA21C,MAAAA,IAGA92C,EAAA,yBACA,YACA,UACA,UACA,UACA,WACA,SACA,YACA,UACA,WACA,WACA,SAAAmB,EAAA6K,EAAAwQ,EAAAkP,EAAAvB,EAAApI,EAAAqN,EAAA0nB,EAAAxgC,EAAAuR,GAaA,QAAAkvB,GAAA1gC,EAAAxP,GAEA,GAAAmwC,IAEAC,iBAAA,EAEAC,WACAj8B,KAAA,EACAC,MAAA,EACA2C,OAAA,EACAE,QAAA,GAGA2qB,QACAyO,QAAA,EACAC,QAAA,GACAvmC,UAAA,GAIAhK,GAAAA,KACA,IACA4uC,GAEA4B,EACAC,EAJA5O,EAAA7hC,EAAA6hC,WAEAwO,EAAArwC,EAAAqwC,WAAAF,EAAAE,UAGAtB,EAAA/uC,EAAAgvC,QACAC,EAAAjvC,EAAAkvC,OACAC,EAAAnvC,EAAAovC,OA2CA,OAzCAjqC,GAAA1E,SAAAohC,GACA+M,EAAAtrB,EAAA9F,KAAAhO,EAAAqyB,GACA18B,EAAAzE,WAAAmhC,KACA+M,EAAA/M,GAEAoO,EAAA1B,QAAAK,GACAC,MAAA,EACAG,QAAA,SAAAlyC,GACA0zC,EAAAt1B,EAAArD,KAAArI,GACAu/B,GACAA,EAAAjyC,IAGAoyC,OAAA,SAAApyC,GACA2zC,KAEAJ,EAAAh8B,MAAAg8B,EAAAr5B,MACAy5B,EAAAn8B,MAAAk8B,EAAAl8B,MAAAxX,EAAA6yC,OAEAc,EAAAn8B,MAAAk8B,EAAAl8B,MAGA+7B,EAAAj8B,KAAAi8B,EAAAn5B,OACAu5B,EAAAl8B,OAAAi8B,EAAAj8B,OAAAzX,EAAA8yC,OAEAa,EAAAl8B,OAAAi8B,EAAAj8B,OAGA2G,EAAArD,KAAArI,EAAAihC,GAEAxB,GACAA,EAAAnyC,IAGAsyC,QAAA,SAAAtyC,GACAqyC,GACAA,EAAAryC,OAOAlB,OAAA,WACA2sB,EAAAnd,IAAAwjC,KAYA,QAAA8B,KACA,MAAAA,GAnGAnoB,EAAAze,GACAye,EAAAnd,IACAyZ,EAAA1Y,KACA0Y,EAAAP,WACApJ,EAAA3B,aACA9J,EAAAI,SACAqL,EAAA3G,OACA7W,MAAA2D,UAAA2wB,KACAt0B,MAAA2D,UAAA5H,GAkGA,OAdAunB,GAAA9jB,GAAAgzC,UAAA,SAAAlwC,GACArE,KAAAmD,KAAA,SAAA4zB,GACAwd,EAAAv0C,KAAAqE,MAQAmF,EAAAtB,MAAA6sC,GACAR,UAAAA,IAGA51C,EAAAo2C,QAAAA,IAGAv3C,EAAA,0BACA,YACA,UACA,UACA,YACA,SAAAmB,EAAA6K,EAAAwQ,EAAA2N,GAOA,QAAAqtB,KACA,MAAAA,GANA,GAAAxU,GAAA70B,SAAAk2B,qBAAA,QAAA,GACAoT,KACAC,KACAzT,EAAA,CA4EA,OAtEAj4B,GAAAtB,MAAA8sC,GAEAG,eAAA,SAAAlxC,EAAAy+B,EAAAC,GACA,GAAAvC,GAAA6U,EAAAhxC,EAYA,IAXAm8B,IACAA,EAAA6U,EAAAhxC,IACAu1B,MAAA,EACAqJ,mBACAC,oBAIA1C,EAAAyC,gBAAAvlC,KAAAolC,GACAtC,EAAA0C,eAAAxlC,KAAAqlC,GAEA,IAAAvC,EAAA5G,MACA4G,EAAAttB,KAAAiwB,aACA,IAAA3C,EAAA5G,WACA4G,EAAAttB,KAAAkwB,cACA,CACA,GAAAlwB,GAAAstB,EAAAttB,KAAAnH,SAAAC,cAAA,UACA7N,EAAAqiC,EAAAriC,GAAA0jC,GAEA3uB,GAAArT,KAAA,kBACAqT,EAAA8qB,OAAA,EACA9qB,EAAAhM,OAAA,EACAm8B,WAAA,GAAA1G,OAAA2G,UACA1C,EAAAjtB,YAAAT,GAEAA,EAAAiwB,OAAA,WACA3C,EAAA5G,MAAA,CAKA,KAHA,GAAA2J,GAAA/C,EAAAyC,gBACAzlC,EAAA+lC,EAAA9lC,OAEAD,KACA+lC,EAAA/lC,IAEAgjC,GAAAyC,mBACAzC,EAAA0C,mBAEAhwB,EAAAkwB,QAAA,WACA5C,EAAA5G,QAIA,KAHA,GAAA2J,GAAA/C,EAAA0C,eACA1lC,EAAA+lC,EAAA9lC,OAEAD,KACA+lC,EAAA/lC,IAEAgjC,GAAAyC,mBACAzC,EAAA0C,mBAEAhwB,EAAA7Q,IAAAgC,EAEAixC,EAAAn3C,GAAA+U,EAEA,MAAAstB,GAAAriC,IAGAq3C,iBAAA,SAAAr3C,GACA,GAAA+U,GAAAoiC,EAAAn3C,EACA,IAAA+U,EAAA,CACA,GAAA7O,GAAA6O,EAAA7Q,GACA+X,GAAA/Z,OAAA6S,SACAoiC,GAAAn3C,SACAk3C,GAAAhxC,OAKAtF,EAAAq2C,SAAAA,IAGAx3C,EAAA,0BACA,YACA,UACA,UACA,UACA,SACA,YACA,UACA,WACA,WACA,SAAAmB,EAAA6K,EAAAwQ,EAAAkP,EAAA3J,EAAAqN,EAAA0nB,EAAAxgC,EAAAuR,GA8FA,QAAAna,GAAAX,GACAA,EAAAA,MACA8qC,EAAA9qC,EAAA8qC,aAAA,EAEA,IAAA7c,GAAAjuB,EAAAiuB,UAAA7sB,SAAA2H,IACAyD,GAAAiD,EAAApO,cAAA,OACAyd,QAAAgsB,EAAA,cAEAr7B,EAAAvD,OAAA+hB,EAAAzhB,GAIAyZ,MACA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MAAAjyB,QAAA,SAAAqtB,GACA,MAAA4E,GAAA5E,GAAA5R,EAAApO,cAAA,KACAyd,QAAAgsB,EAAA,aAAAA,EAAA,aAAAzpB,EACA0pB,sBAAA1pB,KAIA,KAAA,GAAAA,KAAA4E,GAAA,CACA,GAAA3jB,GAAA2jB,EAAA5E,EACA5R,GAAAvD,OAAAM,EAAAlK,GACAynC,EAAA1B,QAAA/lC,GACAqmC,MAAA,EACAG,QAAAA,EACAE,OAAAgC,EACA9B,QAAAA,KAKA,QAAAJ,GAAAlyC,GACAA,EAAAjB,MACA20C,GAAAt1B,EAAArD,KAAAhc,GACAkzC,GACAA,EAAAjyC,GAIA,QAAAo0C,GAAAp0C,GACA2zC,KAEAJ,EAAAh8B,MAAAg8B,EAAAr5B,MACAy5B,EAAAn8B,MAAAk8B,EAAAl8B,MAAAxX,EAAA6yC,OAEAc,EAAAn8B,MAAAk8B,EAAAl8B,MAGA+7B,EAAAj8B,KAAAi8B,EAAAn5B,OACAu5B,EAAAl8B,OAAAi8B,EAAAj8B,OAAAzX,EAAA8yC,OAEAa,EAAAl8B,OAAAi8B,EAAAj8B,OAGA2G,EAAArD,KAAAhc,EAAA40C,GACAv1B,EAAAxB,SAAAhH,EAAAwI,EAAAxB,SAAA7d,IAEAs1C,GACAA,EAAAr0C,GAKA,QAAAsyC,GAAAtyC,GACAqyC,GACAA,EAAAryC,GAKA,QAAA0uB,GAAAkH,EAAAxsB,GAEAwsB,GAAAA,IAAA72B,IAIAA,EAAA62B,EACA0e,SAAAC,QAAAC,SAAA,KAEAp2B,EAAAxB,SAAAhH,EAAAwI,EAAAxB,SAAA7d,IACA4T,EAAAF,KAAAmD,IAKA,QAAA6+B,GAAAz0C,GACA4V,GACAjD,EAAAG,KAAA8C,GAEA7W,EAAA,KAiBA,QAAAmO,KACA,MAAAA,GAzMA,GA2EA0I,GACAyZ,EACAtwB,EAOA20C,EACAC,EAEA1B,EACAoC,EACAhC,EAfA6B,GA1EAzoB,EAAAze,GACAye,EAAAnd,IACAyZ,EAAA1Y,KACA0Y,EAAAP,WACApJ,EAAA3B,aACA9J,EAAAI,SACAqL,EAAA3G,OACA7W,MAAA2D,UAAA2wB,KACAt0B,MAAA2D,UAAA5H,IAkEA,IAIA42C,GACAh8B,MAAA,EACA2C,OAAA,EACA5C,KAAA,EACA8C,QAAA,EAmIA,OATA/R,GAAAtB,MAAAmG,GACAnD,KAAAA,EAEA2kB,OAAAA,EAEA+lB,SAAAA,IAIAj3C,EAAA0P,SAAAA,IAGA7Q,EAAA,mCACA,YACA,SAAAgM,GACA,QAAAqsC,KACA,MAAAA,GAmDA,MAhDArsC,GAAAtB,MAAA2tC,GACAtlC,IAAA,SAAAlK,GACA,MAAAyvC,OAAA91C,KAAAwE,IAAA6B,GACA0vC,SAAApqC,SAAAqqC,OAAApzC,QAAA,GAAAiQ,QAAA,gBAAAkuB,OAAA16B,GAAAzD,QAAA,cAAA,QAAA,sCAAA,OADA,MAKA4B,IAAA,SAAA6B,GACA,MAAA,IAAAwM,QAAA,cAAAkuB,OAAA16B,GAAAzD,QAAA,cAAA,QAAA,WAAAI,KAAA2I,SAAAqqC,SAIAlc,KAAA,WAEA,IAAA,GADA+b,GAAAlqC,SAAAqqC,OAAApzC,QAAA,0DAAA,IAAA3F,MAAA,uBACAG,EAAA,EAAAA,EAAAy4C,EAAAx4C,OAAAD,IACAy4C,EAAAz4C,GAAA24C,SAAAF,EAAAz4C,GAEA,OAAAy4C,IAGA51C,OAAA,SAAAoG,EAAA5B,GACA4B,GAAArG,KAAAwE,IAAA6B,KAGAsF,SAAAqqC,OAAAjV,OAAA16B,GAAA,4CAAA5B,EAAA,UAAAA,EAAA,MAGAyL,IAAA,SAAA7J,EAAAtD,EAAAkzC,EAAAxxC,EAAAyxC,EAAAC,GACA,GAAA9vC,IAAA,6CAAArD,KAAAqD,GAAA,CACA,GAAA+vC,GAAA,EACA,IAAAH,EACA,OAAAA,EAAApxC,aACA,IAAAwxC,QACAD,EAAAE,OAAAC,EAAAA,EAAA,0CAAA,aAAAN,CACA,MACA,KAAAzuC,QACA4uC,EAAA,aAAAH,CACA,MACA,KAAA1Z,MACA6Z,EAAA,aAAAH,EAAAO,cAIA7qC,SAAAqqC,OAAAjV,OAAA16B,GAAA,IAAA06B,OAAAh+B,GAAAqzC,GAAAF,EAAA,YAAAA,EAAA,KAAAzxC,EAAA,UAAAA,EAAA,KAAA0xC,EAAA,WAAA;KAKAN,IAaAr4C,EAAA,mCACA,YACA,SAAAgM,GAOA,QAAAitC,GAAAt1C,GACA,GAAAu1C,GAAA,EAEA,QAAAv1C,EAAA8nC,MACA,IAAA0N,WAAAC,mBACAF,EAAA,oBACA,MACA,KAAAC,WAAAE,cACAH,EAAA,eACA,MACA,KAAAC,WAAAG,aACAJ,EAAA,cACA,MACA,KAAAC,WAAAI,yBACAL,EAAA,0BACA,MACA,KAAAC,WAAAK,kBACAN,EAAA,mBACA,MACA,SACAA,EAAA,gBAIA,MAAAA,GA+NA,QAAAO,KACA,MAAAA,GA9PA,GAAAnrC,GAAAtC,EAAAsC,SACAorC,EAAAz4C,OAAAy4C,mBAAAz4C,OAAA04C,wBAgCAC,GA/BA34C,OAAA44C,2BAAA54C,OAAA64C,gCACA74C,OAAA84C,gBAAA94C,OAAA+4C,mBAAA/4C,OAAAg5C,YA8BAjuC,EAAA0E,QAAA1C,SACAksC,IAAA,KACAC,cAAA,EACAC,KAAA,KAEA1sC,KAAA,SAAA2sC,GACA73C,KAAA03C,IAAAG,EACA73C,KAAA43C,KAAAC,EAAA92B,MAIA+2B,sBAAA,SAAArzC,EAAArB,EAAA+J,GACAnN,KAAA43C,KAAAG,QAAAtzC,KAAA,SAAAuzC,GACAA,EAAAnP,KAAA,SAAAA,GACA,GAAAC,GAAA,GAAAC,WACAD,GAAAmP,UAAA,WACA70C,EAAA,KAAApD,KAAAwD,SAEAslC,EAAAM,kBAAAP,IACA17B,IACAA,IAGA+qC,kBAAA,SAAAzzC,EAAArB,EAAA+J,GACAnN,KAAA43C,KAAAG,QAAAtzC,KAAA,SAAAuzC,GACAA,EAAAnP,KAAA,SAAAA,GACA,GAAAC,GAAA,GAAAC,WACAD,GAAAmP,UAAA,WACA70C,EAAA,KAAApD,KAAAwD,SAEAslC,EAAAQ,cAAAT,IACA17B,IACAA,IAGAgrC,eAAA,SAAA1zC,EAAArB,EAAA+J,GACAnN,KAAA43C,KAAAG,QAAAtzC,KAAA,SAAAuzC,GACAA,EAAAnP,KAAA,SAAAA,GACA,GAAAC,GAAA,GAAAC,WACAD,GAAAmP,UAAA,WACA70C,EAAA,KAAApD,KAAAwD,SAEAslC,EAAAU,WAAAX,IACA17B,IACAA,IAGAirC,UAAA,SAAA3zC,EAAAoR,EAAAzS,EAAA+J,GACA,GAAApB,GAAA/L,KACAq4C,EAAA5zC,EAAAxH,MAAA,IACAo7C,GAAAA,EAAAzxC,MAAA,EAAAyxC,EAAAh7C,OAAA,GAEA2C,KAAAs4C,MAAAD,EAAA96C,KAAA,KAAA,WACAwO,EAAA6rC,KAAAG,QAAAtzC,GAAA4G,QAAA,GAAA,SAAA2sC,GACAA,EAAAO,aAAA,SAAAC,GACA,GAAAC,IAAA,CACAD,GAAAE,WAAA,WACA,MAAAD,QAKAr1C,GAAAA,MAJAq1C,GAAA,MACAz4C,MAAA24C,SAAA34C,KAAAwY,YAKAggC,EAAAxV,QAAA71B,CAEA,IAAAyrC,GAAA/iC,GACA+iC,YAAAhP,QACAgP,EAAA,GAAAhP,OAAA/zB,IAAApW,KAAA,gBAEA+4C,EAAAK,MAAAD,IACAzrC,IACAA,MAKA2rC,OAAA,SAAAr0C,EAAArB,EAAA+J,GACAnN,KAAA43C,KAAAG,QAAAtzC,KAAA,SAAAuzC,GACAA,EAAA/3C,OAAA,WACAmD,KACA+J,IACAA,IAGA4rC,QAAA,SAAAt0C,EAAArB,EAAA+J,GACAnN,KAAA43C,KAAAoB,aAAAv0C,KAAA,SAAAw0C,GAIA,QAAAC,KACAC,EAAAD,YAAA,SAAAx4C,GACAA,EAAArD,QAIA+7C,EAAAA,EAAAzyC,OACA5E,MAAA2D,UAAAkB,MAAA9F,KAAAJ,GAAA5C,IACA,SAAAu7C,GACA,MAAAA,GAAAhzC,MAAAgzC,EAAAC,YAAA,IAAA,OAIAJ,KAVA91C,EAAA,KAAAg2C,IAYAjsC,GAlBA,GAAAgsC,GAAAF,EAAAM,eACAH,IACAF,MAkBA/rC,IAGAmrC,MAAA,SAAA7zC,EAAArB,EAAA+J,GACA,GAAAqsC,GAAA/0C,EAAAxH,MAAA,KAEAw8C,EAAA,SAAAC,EAAArB,GAMA,MAJA,KAAAA,EAAA,IAAA,IAAAA,EAAA,KACAA,EAAAA,EAAAzxC,MAAA,IAGA,GAAAyxC,EAAAh7C,WACA+F,GAAAs2C,OAGAA,GAAAV,aAAAX,EAAA,IAAAhtC,QAAA,EAAAsuC,WAAA,GACA,SAAAV,GACA,GAAAA,EAAAK,YAGAjB,EAAAh7C,QAAA,GAAAm8C,EAAAn8C,OACAo8C,EAAAR,EAAAZ,EAAAzxC,MAAA,IAGAxD,GAAAA,EAAA61C,OAEA,CACA,GAAA93C,GAAA,GAAA/C,OAAAqG,EAAA,sBACA,KAAA0I,EAGA,KAAAhM,EAFAgM,GAAAhM,KAMA,SAAAA,GACA,IAAAgM,EAGA,KAAAhM,EAFAgM,GAAAhM,KAQAs4C,GAAAz5C,KAAA43C,KAAA4B,IAIAI,MAAA,SAAAn1C,EAAArB,EAAA+J,GACAnN,KAAA43C,KAAAoB,aAAAv0C,KAAA,SAAAw0C,GACAA,EAAAY,kBAAA,WACAz2C,KACA+J,IACAA,IAGAhL,KAAA,SAAAF,EAAA63C,EAAA12C,GAEApD,KAAA43C,KAAAG,QAAA91C,KAAA,SAAA+1C,GACA+B,IAAAf,aAAAc,KAAA,SAAAb,GACAjB,EAAAgC,OAAAf,EAAA,WACA71C,KACAA,IACAA,IACAA,IAGA2wC,KAAA,SAAA9xC,EAAA63C,EAAA12C,GAEApD,KAAA43C,KAAAG,QAAA91C,KAAA,SAAA+1C,GACA+B,IAAAf,aAAAc,KAAA,SAAAb,GACAjB,EAAAiC,OAAAhB,EAAA,WACA71C,KACAA,IACAA,IACAA,IAGA82C,MAAA,SAAAz1C,EAAArB,GACApD,KAAA43C,KAAAoB,aAAAv0C,KAAA,SAAAw0C,GACAc,IAAAd,EACApB,GAAAsC,SACAtC,GAAAsC,QAAAJ,IAAAK,UAEAh3C,KACAA,IAGAi3C,eAAA,SAAAlS,GAGA,IAAA,GAAAU,GADAj7B,EAAA,GAAA9B,GACA1O,EAAA,EAAAyrC,EAAAV,EAAA/qC,KAAAA,GACA,SAAAk9C,GACAP,IAAAhC,QAAAlP,EAAAxiC,MAAAgF,QAAA,EAAAsuC,WAAA,GAAA,SAAA3B,GACAA,EAAAO,aAAA,SAAAC,GACAA,EAAAK,MAAAyB,IACA7D,IACAA,IACA5N,EAEA,OAAAj7B,GAAA3B,SAGAsuC,aAAA,eAiCA,OArBA/wC,GAAAtB,MAAA+uC,GACAlQ,YAAA,WACA,QAAAmQ,GAEAsD,QAAA,SAAAt+B,EAAAu+B,GACAv+B,EAAAA,GAAA,QACA,IAAAw+B,GAAAD,EAAAE,WAAAC,UACA7sC,EAAA,GAAAjC,EAQA,OAPAorC,GAAAwD,EAAAx+B,EAAA,SAAAw7B,GACA,GAAAG,GAAA,GAAAT,GAAAM,KAAA+C,GACA1sC,GAAA5B,QAAA0rC,IACA,SAAA12C,GACA4M,EAAA3B,OAAAjL,KAGA4M,EAAA9B,SAGAmrC,WAAAA,IAGAH,IAEAz5C,EAAA,wCACA,YACA,SAAAgM,GASA,QAAAqxC,KACA,MAAAA,GATA,GAAAC,GAAA,IAEA,KACAA,EAAAr8C,OAAA,aACA,MAAA0C,IA0CA,MAlCAqI,GAAAtB,MAAA2yC,GACA9T,YAAA,WACA,QAAA+T,GAGA5qC,IAAA,SAAA5Q,EAAAmR,GACA,MAAA5P,UAAA4P,EACAzQ,KAAAC,OAAAX,IAEAw7C,EAAAC,QAAAz7C,EAAAkK,EAAA4I,eAAA3B,IACAA,IAGAF,IAAA,SAAAjR,EAAA07C,GACA,GAAAvqC,GAAAjH,EAAA1G,iBAAAg4C,EAAAG,QAAA37C,GACA,OAAAuB,UAAA4P,EAAAuqC,EAAAvqC,GAGAxQ,OAAA,SAAAX,GACAw7C,EAAArzC,WAAAnI,IAGA8R,MAAA,WACA0pC,EAAA1pC,SAGA7S,QAAA,SAAA6E,GACA,IAAA,GAAAhG,GAAA,EAAAA,EAAA09C,EAAAz9C,OAAAD,IAAA,CACA,GAAAkC,GAAAw7C,EAAAx7C,IAAAlC,EACAgG,GAAA9D,EAAA0oB,MAAAzX,IAAAjR,QAKAu7C,IAKAr9C,EAAA,0CACA,YACA,SAAAgM,GASA,QAAA0xC,KACA,MAAAA,GATA,GAAAJ,GAAA,IAEA,KACAA,EAAAr8C,OAAA,gBACA,MAAA0C,IA0CA,MAlCAqI,GAAAtB,MAAAgzC,GACAnU,YAAA,WACA,QAAA+T,GAGA5qC,IAAA,SAAA5Q,EAAAmR,GACA,MAAA5P,UAAA4P,EACAzQ,KAAAC,OAAAX,IAEAw7C,EAAAC,QAAAz7C,EAAAkK,EAAA4I,eAAA3B,IACAA,IAGAF,IAAA,SAAAjR,EAAA07C,GACA,GAAAvqC,GAAAjH,EAAA1G,iBAAAg4C,EAAAG,QAAA37C,GACA,OAAAuB,UAAA4P,EAAAuqC,EAAAvqC,GAGAxQ,OAAA,SAAAX,GACAw7C,EAAArzC,WAAAnI,IAGA8R,MAAA,WACA0pC,EAAA1pC,SAGA7S,QAAA,SAAA6E,GACA,IAAA,GAAAhG,GAAA,EAAAA,EAAA09C,EAAAz9C,OAAAD,IAAA,CACA,GAAAkC,GAAAw7C,EAAAx7C,IAAAlC,EACAgG,GAAA9D,EAAA0oB,MAAAzX,IAAAjR,QAKA47C,IAKA19C,EAAA,0BACA,YACA,UACA,sBACA,sBACA,2BACA,8BACA,SAAAmB,EAAA6K,EAAAqsC,EAAAoB,EAAA4D,EAAAM,GACA,QAAAC,KACA,MAAAA,GAWA,MARA5xC,GAAAtB,MAAAkzC,GACAvF,QAAAA,EACAoB,QAAAA,EACA4D,aAAAA,EACAM,eAAAA,IAIAx8C,EAAAy8C,SAAAA,IAGA59C,EAAA,0BAAA,WAcA,GAAA69C,GAAA,WACA,QAAAA,KACAr7C,KAAAs7C,YAAA,OACAt7C,KAAAu7C,eAAA,MACAv7C,KAAAw7C,SA0FA,MAxFAv8C,QAAAw8C,eAAAJ,EAAA31C,UAAA,cAKA6K,IAAA,WACA,MAAAvQ,MAAAs7C,aAEAprC,IAAA,SAAAnN,GACA/C,KAAAs7C,YAAAv4C,GAEA24C,YAAA,EACAC,cAAA,IAEA18C,OAAAw8C,eAAAJ,EAAA31C,UAAA,iBAMA6K,IAAA,WACA,MAAAvQ,MAAAu7C,gBAEArrC,IAAA,SAAAnN,GACA/C,KAAAu7C,eAAAx4C,GAEA24C,YAAA,EACAC,cAAA,IAEA18C,OAAAw8C,eAAAJ,EAAA31C,UAAA,SAIA6K,IAAA,WACA,MAAAtR,QAAAG,KAAAY,KAAAw7C,QAEAE,YAAA,EACAC,cAAA,IAWAN,EAAA31C,UAAAk2C,UAAA,SAAAn8C,GACA,MAAAA,QACAO,MAAAw7C,MAAA/7C,GAEAO,KAAAw7C,MAAA,MASAH,EAAA31C,UAAAm2C,QAAA,SAAAp8C,GACA,MAAAO,MAAAw7C,MAAA/7C,IAAA,IAWA47C,EAAA31C,UAAAigC,QAAA,SAAAlmC,EAAAsD,GACA/C,KAAAw7C,MAAA/7C,GAAAsD,GASAs4C,EAAA31C,UAAAkgC,aAAA,SAAA8E,EAAAoR,EAAAC,GACA,GAAAC,GAAAC,EAAAC,SACAF,GAAAG,WAAAzR,EACAsR,EAAAI,YAAA99B,EAAAw9B,EAAAv9B,EAAAw9B,IAEAV,KAqBAY,EAAA,WAIA,QAAAA,KAGA,GAFAj8C,KAAAq8C,WAAA,EAEAJ,EAAAC,UACA,KAAA,yCAIA,IAAAI,IAAA,CAQA,IAPA3wC,SAAA4f,iBAAA,OAAA,MACAgxB,GAAAA,WAEA,MADAD,IAAA,GACA,KAIA,gBAAA3wC,UAAA,CACA,GAAAoC,GAAApC,SACA6wC,EAAAx8C,KAAAy8C,YAAA1vC,KAAA/M,MACA08C,EAAA18C,KAAA28C,WAAA5vC,KAAA/M,MACA48C,EAAA58C,KAAA68C,UAAA9vC,KAAA/M,MACA88C,IAAAR,IAAAC,SAAA,EAAAQ,SAAA,EACAhvC,GAAAwd,iBAAA,aAAAixB,EAAAM,GACA/uC,EAAAwd,iBAAA,YAAAmxB,EAAAI,GACA/uC,EAAAwd,iBAAA,WAAAqxB,GACA7uC,EAAAwd,iBAAA,cAAAqxB,IAkPA,MA5OAX,GAAAe,YAAA,WACA,MAAAf,GAAAC,WAGAD,EAAAv2C,UAAA+2C,YAAA,SAAAt7C,GACA,GAAA8pC,GAAAjrC,IACA,IAAAA,KAAAi9C,cAAA97C,GAAA,CAEA,GAAAo7B,KAAAC,MAAAx8B,KAAAq8C,WAAAJ,EAAAiB,WACAl9C,KAAAm9C,eAAAh8C,EAAA,WAAAA,EAAAjB,QAGA,MAFAiB,GAAA4pB,qBACA/qB,MAAAytC,QAKAztC,MAAAytC,QAEA,IAAAxrC,GAAAjC,KAAAo9C,kBAAAj8C,EAAAjB,OACA+B,KAEAjC,KAAAm9C,eAAAh8C,EAAA,YAAAA,EAAAjB,SACAF,KAAAm9C,eAAAh8C,EAAA,YAAAA,EAAAjB,UAEAF,KAAAq9C,YAAAp7C,EACAjC,KAAAs9C,QAAAt9C,KAAAu9C,UAAAp8C,GACAnB,KAAAw9C,WAAAr8C,EACAA,EAAA4pB,iBAEAnpB,WAAA,WACAqpC,EAAAoS,aAAAp7C,GAAA,MAAAgpC,EAAAwS,MACAxS,EAAAkS,eAAAh8C,EAAA,cAAAc,IACAgpC,EAAAwC,UAGAwO,EAAAyB,cAKAzB,EAAAv2C,UAAAi3C,WAAA,SAAAx7C,GACA,GAAAnB,KAAAi9C,cAAA97C,GAAA,CAEA,GAAAjB,GAAAF,KAAA29C,WAAAx8C,EACA,IAAAnB,KAAAm9C,eAAAh8C,EAAA,YAAAjB,GAGA,MAFAF,MAAAw9C,WAAAr8C,MACAA,GAAA4pB,gBAIA,IAAA/qB,KAAAq9C,cAAAr9C,KAAAy9C,KAAA,CACA,GAAAG,GAAA59C,KAAA69C,UAAA18C,EACAy8C,GAAA3B,EAAA6B,aACA99C,KAAAm9C,eAAAh8C,EAAA,YAAAnB,KAAAq9C,aACAr9C,KAAA+9C,aAAA58C,GACAnB,KAAAm9C,eAAAh8C,EAAA,YAAAjB,IAIAF,KAAAy9C,OACAz9C,KAAAw9C,WAAAr8C,EACAA,EAAA4pB,iBACA7qB,GAAAF,KAAAg+C,cACAh+C,KAAAm9C,eAAAn9C,KAAAw9C,WAAA,YAAAx9C,KAAAg+C,aACAh+C,KAAAm9C,eAAAh8C,EAAA,YAAAjB,GACAF,KAAAg+C,YAAA99C,GAEAF,KAAAi+C,WAAA98C,GACAnB,KAAAm9C,eAAAh8C,EAAA,WAAAjB,MAIA+7C,EAAAv2C,UAAAm3C,UAAA,SAAA17C,GACA,GAAAnB,KAAAi9C,cAAA97C,GAAA,CAEA,GAAAnB,KAAAm9C,eAAAn9C,KAAAw9C,WAAA,UAAAr8C,EAAAjB,QAEA,WADAiB,GAAA4pB,gBAIA/qB,MAAAy9C,OACAz9C,KAAAq9C,YAAA,KACAr9C,KAAAm9C,eAAAn9C,KAAAw9C,WAAA,QAAAr8C,EAAAjB,QACAF,KAAAq8C,WAAA9f,KAAAC,OAGAx8B,KAAAk+C,gBACAl+C,KAAAq9C,cACAl8C,EAAA1B,KAAAkF,QAAA,UAAA,GACA3E,KAAAm9C,eAAAn9C,KAAAw9C,WAAA,OAAAx9C,KAAAg+C,aAEAh+C,KAAAm9C,eAAAn9C,KAAAw9C,WAAA,UAAAx9C,KAAAq9C,aACAr9C,KAAAytC,YAMAwO,EAAAv2C,UAAAu3C,cAAA,SAAA97C,GACA,MAAAA,KACAA,EAAAg9C,kBACAh9C,EAAAi9C,SAAAj9C,EAAAi9C,QAAA/gD,OAAA,GAGA4+C,EAAAv2C,UAAA+nC,OAAA,WACAztC,KAAAk+C,gBACAl+C,KAAAq9C,YAAA,KACAr9C,KAAAw9C,WAAA,KACAx9C,KAAAg+C,YAAA,KACAh+C,KAAAs9C,QAAA,KACAt9C,KAAAq+C,cAAA,GAAAhD,IAGAY,EAAAv2C,UAAA63C,UAAA,SAAAp8C,EAAAm9C,GAIA,MAHAn9C,IAAAA,EAAAi9C,UACAj9C,EAAAA,EAAAi9C,QAAA,KAEA9/B,EAAAggC,EAAAn9C,EAAA8jC,MAAA9jC,EAAAo9C,QAAAhgC,EAAA+/B,EAAAn9C,EAAAgkC,MAAAhkC,EAAAq9C,UAGAvC,EAAAv2C,UAAAm4C,UAAA,SAAA18C,GACA,GAAA6K,GAAAhM,KAAAu9C,UAAAp8C,EACA,OAAA4b,MAAA0hC,IAAAzyC,EAAAsS,EAAAte,KAAAs9C,QAAAh/B,GAAAvB,KAAA0hC,IAAAzyC,EAAAuS,EAAAve,KAAAs9C,QAAA/+B,IAGA09B,EAAAv2C,UAAAi4C,WAAA,SAAAx8C,GAGA,IAFA,GAAAu9C,GAAA1+C,KAAAu9C,UAAAp8C,GACA41B,EAAAprB,SAAAgzC,iBAAAD,EAAApgC,EAAAogC,EAAAngC,GACAwY,GAAA,QAAAvjB,iBAAAujB,GAAA6nB,eACA7nB,EAAAA,EAAA8nB,aAEA,OAAA9nB,IAGAklB,EAAAv2C,UAAAq4C,aAAA,SAAA58C,GAEAnB,KAAAy9C,MACAz9C,KAAAk+C,eAGA,IAAAj8C,GAAAjC,KAAAm8C,YAAAn8C,KAAAq9C,WAKA,IAJAr9C,KAAAy9C,KAAAx7C,EAAA0T,WAAA,GACA3V,KAAA8+C,WAAA78C,EAAAjC,KAAAy9C,MACAz9C,KAAAy9C,KAAAjpC,MAAAiE,IAAAzY,KAAAy9C,KAAAjpC,MAAAkE,KAAA,WAEA1Y,KAAAm8C,WAAA,CACA,GAAA4C,GAAA98C,EAAA0Z,wBACA+iC,EAAA1+C,KAAAu9C,UAAAp8C,EACAnB,MAAAo8C,YAAA99B,EAAAogC,EAAApgC,EAAAygC,EAAArmC,KAAA6F,EAAAmgC,EAAAngC,EAAAwgC,EAAAtmC,KACAzY,KAAAy9C,KAAAjpC,MAAAW,QAAA8mC,EAAA+C,SAAA/1C,WAGAjJ,KAAAi+C,WAAA98C,GACAwK,SAAA2H,KAAAC,YAAAvT,KAAAy9C,OAGAxB,EAAAv2C,UAAAw4C,cAAA,WACAl+C,KAAAy9C,MAAAz9C,KAAAy9C,KAAAoB,eACA7+C,KAAAy9C,KAAAoB,cAAAlrC,YAAA3T,KAAAy9C,MAEAz9C,KAAAy9C,KAAA,KACAz9C,KAAAm8C,WAAA,MAGAF,EAAAv2C,UAAAu4C,WAAA,SAAA98C,GACA,GAAA8pC,GAAAjrC,IACAA,MAAAy9C,MACA12C,sBAAA,WACA,GAAA23C,GAAAzT,EAAAsS,UAAAp8C,GAAA,GACA8Z,EAAAgwB,EAAAwS,KAAAjpC,KACAyG,GAAAzC,SAAA,WACAyC,EAAA2jC,cAAA,OACA3jC,EAAApC,OAAA,SACAoC,EAAAvC,KAAAqE,KAAAiB,MAAA0gC,EAAApgC,EAAA2sB,EAAAmR,WAAA99B,GAAA,KACArD,EAAAxC,IAAAsE,KAAAiB,MAAA0gC,EAAAngC,EAAA0sB,EAAAmR,WAAA79B,GAAA,QAKA09B,EAAAv2C,UAAAu5C,WAAA,SAAAC,EAAAj9C,EAAAf,GACA,IAAA,GAAA9D,GAAA,EAAAA,EAAA8D,EAAA7D,OAAAD,IAAA,CACA,GAAA4O,GAAA9K,EAAA9D,EACA8hD,GAAAlzC,GAAA/J,EAAA+J,KAGAiwC,EAAAv2C,UAAAo5C,WAAA,SAAA78C,EAAAi9C,GAMA,GAJAjD,EAAAkD,SAAA5gD,QAAA,SAAA6gD,GACAF,EAAAt3B,gBAAAw3B,KAGAn9C,YAAAo9C,mBAAA,CACA,GAAAC,GAAAr9C,EACAs9C,EAAAL,CACAK,GAAA5mC,MAAA2mC,EAAA3mC,MACA4mC,EAAA3mC,OAAA0mC,EAAA1mC,OACA2mC,EAAAC,WAAA,MAAAC,UAAAH,EAAA,EAAA,GAIA,IAAA,GADA1iC,GAAApJ,iBAAAvR,GACA7E,EAAA,EAAAA,EAAAwf,EAAAvf,OAAAD,IAAA,CACA,GAAAkC,GAAAsd,EAAAxf,EACAkC,GAAAqF,QAAA,cAAA,IACAu6C,EAAA1qC,MAAAlV,GAAAsd,EAAAtd,IAGA4/C,EAAA1qC,MAAAoqC,cAAA,MAEA,KAAA,GAAAxhD,GAAA,EAAAA,EAAA6E,EAAA0X,SAAAtc,OAAAD,IACA4C,KAAA8+C,WAAA78C,EAAA0X,SAAAvc,GAAA8hD,EAAAvlC,SAAAvc,KAGA6+C,EAAAv2C,UAAAy3C,eAAA,SAAAh8C,EAAA1B,EAAAS,GACA,GAAAiB,GAAAjB,EAAA,CACA,GAAA8oC,GAAAr9B,SAAA1K,YAAA,SACA8wC,EAAA5wC,EAAAi9C,QAAAj9C,EAAAi9C,QAAA,GAAAj9C,CAQA,OAPA6nC,GAAA0W,UAAAjgD,GAAA,GAAA,GACAupC,EAAA4K,OAAA,EACA5K,EAAA2W,MAAA3W,EAAA4W,QAAA,EACA5/C,KAAAi/C,WAAAjW,EAAA7nC,EAAA86C,EAAA4D,WACA7/C,KAAAi/C,WAAAjW,EAAA+I,EAAAkK,EAAA6D,UACA9W,EAAAtD,aAAA1lC,KAAAq+C,cACAn+C,EAAAkrB,cAAA4d,GACAA,EAAAmV,iBAEA,OAAA,GAGAlC,EAAAv2C,UAAA03C,kBAAA,SAAAj8C,GACA,KAAAA,EAAAA,EAAAA,EAAA09C,cACA,GAAA19C,EAAAylB,aAAA,cAAAzlB,EAAAojC,UACA,MAAApjC,EAGA,OAAA,OAEA86C,IAiBA,OAbAA,GAAAC,UAAA,GAAAD,GAEAA,EAAA6B,WAAA,EACA7B,EAAA+C,SAAA,GACA/C,EAAAiB,UAAA,IACAjB,EAAAyB,SAAA,IAEAzB,EAAAkD,SAAA,2BAAAliD,MAAA,KAGAg/C,EAAA4D,UAAA,kCAAA5iD,MAAA,KACAg/C,EAAA6D,SAAA,8CAAA7iD,MAAA,KAEAg/C,IAGAz+C,EAAA,sBACA,YACA,UACA,UACA,QACA,YACA,UACA,WACA,OACA,SACA,UACA,UACA,YACA,SAAAmB,EAAA6K,EAAA0f,EAAAyb,EAAA/X,EAAAwb,EAAAzgB,EAAAqL,EAAAzT,EAAA+0B,EAAAt6B,EAAAlG,GAwBA,QAAAisC,GAAAx+C,EAAAoC,GACA,MAAA,YACA,GAAAoI,GAAA/L,KACA41B,EAAA7pB,EAAAi0C,QACAh1C,EAAAzJ,EAAA/C,MAAAmF,GAAAiyB,GAAAjvB,OAAAC,EAAA9F,KAAA9B,YAEA,IAAAgM,EAAA,CACA,GAAAA,IAAArH,EACA,MAAAoI,EAEAf,aAAAi1C,aACAj1C,EAAA,GAAAk1C,GAAAl1C,GACAxB,EAAAjG,YAAAyH,KACAA,EAAAlN,EAAAgD,KAAAkK,EAAA,SAAA+rB,GACA,MAAAA,aAAAkpB,aACA,GAAAC,GAAAl1C,GAEA+rB,KAMA,MAAA/rB,IA9CA,GAAAlN,GAAAiE,MAAA2D,UAAA5H,IACA8I,EAAA7E,MAAA2D,UAAAkB,MAEAs5C,EAAA12C,EAAAuI,OACA5G,UAAA,gBAEAD,KAAA,SAAA4H,GACAtJ,EAAA1E,SAAAgO,KACAA,EAAAnH,SAAA0V,eAAAvO,IAEA9S,KAAAggD,QAAAltC,KAIAiO,EAAA,GAAAm/B,GAAAv0C,SAAA2H,MACAuN,EAAA,SAAA/N,GACA,MAAAA,GACA,GAAAotC,GAAAptC,GAEAiO,EA4MA,OA7KAvX,GAAAtB,MAAA2Y,GACAs/B,MAAA,SAAA1qC,EAAA2qC,EAAA9hD,GAMA,MALAmX,GAAAlX,QAAA,SAAAuU,GACA,GAAAe,GAAAf,YAAAotC,GAAAptC,EAAA+N,EAAA/N,EACAe,GAAAusC,GAAA5hD,MAAAqV,EAAAvV,KAGA0B,MAGA+gB,KAAA,GAAAm/B,GAAAv0C,SAAA2H,MAEA4sC,cAAAA,EAEA30C,QAAA,SAAAlF,EAAA9E,GACA,GAAAL,KAEAA,GAAAmF,GAAA9E,EAEA2+C,EAAA30C,QAAArK,IAGAuK,SAAA,SAAA0I,EAAAxQ,GACA,GAAAzC,KAEAiT,GAAA5V,QAAA,SAAA8H,GACAnF,EAAAmF,GAAA05C,EAAAp8C,EAAA0C,GAAA1C,KAGAu8C,EAAA30C,QAAArK,MAKA2f,EAAApV,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAyd,GAGArI,EAAApV,UACA,YACA,aACAk5B,GAIA9jB,EAAApV,UACA,MACA,KACA,MACA,YACA,WACAmhB,GAGA/L,EAAApV,UACA,SACA,YACA28B,GAGAvnB,EAAApV,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAkc,GAEA9G,EAAAgB,KAAA,SAAAxT,GACA,MAAA,SAAAA,EACArO,KAAA+gB,KAEA/gB,KAAA+gB,KAAAY,WAAAtT,IAKAwS,EAAApV,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAunB,GAIAnS,EAAApV,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACA8T,GAGAsB,EAAApV,UACA,WACAk5B,GAIA9jB,EAAApV,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAuO,GAGA6G,EAAApV,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAqI,GAEAnV,EAAAkiB,KAAAA,IAGArjB,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","file":"../skylark-utils-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n              proto[name] = typeof props[name] == \"function\" && !props[name]._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                      (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, options) {\r\n                    return createClass(props, this, options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        mixin(p,{\r\n            then : function(onResolved,onRejected,onProgress) {\r\n                if (onProgress) {\r\n                    this.progress(onProgress);\r\n                }\r\n                return Promise.prototype.then.call(this,onResolved,onRejected);\r\n            },\r\n            done : function(handler) {\r\n                return Promise.prototype.then.call(this,handler);\r\n            },\r\n            fail : function(handler) { \r\n                return Promise.prototype.catch.call(this,handler);\r\n            }, \r\n            progress : function(handler) {\r\n                self[PGLISTENERS].push(handler);\r\n                return this;\r\n            }\r\n\r\n        });\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n        this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            e.target = this;\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        'checkbox': function(elm){\r\n            return elm.type === \"checkbox\";\r\n        },\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'radio': function(elm){\r\n            return elm.type === \"radio\";\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        local.pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/ajax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    var Callbacks = function(options) {\r\n        options = langx.mixin({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                langx.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        langx.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = langx.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? langx.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    //     This module is borrow from zepto.deferred.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    //\r\n    //     Some code (c) 2005, 2013 jQuery Foundation, Inc. and other contributors\r\n\r\n    var slice = Array.prototype.slice\r\n\r\n    function Deferred(func) {\r\n        var tuples = [\r\n                // action, add listener, listener list, final state\r\n                [\"resolve\", \"done\", Callbacks({ once: 1, memory: 1 }), \"resolved\"],\r\n                [\"reject\", \"fail\", Callbacks({ once: 1, memory: 1 }), \"rejected\"],\r\n                [\"notify\", \"progress\", Callbacks({ memory: 1 })]\r\n            ],\r\n            state = \"pending\",\r\n            promise = {\r\n                state: function() {\r\n                    return state\r\n                },\r\n                always: function() {\r\n                    deferred.done(arguments).fail(arguments)\r\n                    return this\r\n                },\r\n                then: function( /* fnDone [, fnFailed [, fnProgress]] */ ) {\r\n                    var fns = arguments\r\n                    return Deferred(function(defer) {\r\n                        langx.each(tuples, function(i, tuple) {\r\n                            var fn = $.isFunction(fns[i]) && fns[i]\r\n                            deferred[tuple[1]](function() {\r\n                                var returned = fn && fn.apply(this, arguments)\r\n                                if (returned && langx.isFunction(returned.promise)) {\r\n                                    returned.promise()\r\n                                        .done(defer.resolve)\r\n                                        .fail(defer.reject)\r\n                                        .progress(defer.notify)\r\n                                } else {\r\n                                    var context = this === promise ? defer.promise() : this,\r\n                                        values = fn ? [returned] : arguments\r\n                                    defer[tuple[0] + \"With\"](context, values)\r\n                                }\r\n                            })\r\n                        })\r\n                        fns = null\r\n                    }).promise()\r\n                },\r\n\r\n                promise: function(obj) {\r\n                    return obj != null ? langx.mixin(obj, promise) : promise\r\n                }\r\n            },\r\n            deferred = {}\r\n\r\n        langx.each(tuples, function(i, tuple) {\r\n            var list = tuple[2],\r\n                stateString = tuple[3]\r\n\r\n            promise[tuple[1]] = list.add\r\n\r\n            if (stateString) {\r\n                list.add(function() {\r\n                    state = stateString\r\n                }, tuples[i ^ 1][2].disable, tuples[2][2].lock)\r\n            }\r\n\r\n            deferred[tuple[0]] = function() {\r\n                deferred[tuple[0] + \"With\"](this === deferred ? promise : this, arguments)\r\n                return this\r\n            }\r\n            deferred[tuple[0] + \"With\"] = list.fireWith\r\n        })\r\n\r\n        promise.promise(deferred)\r\n        if (func) func.call(deferred, deferred)\r\n        return deferred\r\n    }\r\n\r\n    var when = function(sub) {\r\n        var resolveValues = slice.call(arguments),\r\n            len = resolveValues.length,\r\n            i = 0,\r\n            remain = len !== 1 || (sub && langx.isFunction(sub.promise)) ? len : 0,\r\n            deferred = remain === 1 ? sub : Deferred(),\r\n            progressValues, progressContexts, resolveContexts,\r\n            updateFn = function(i, ctx, val) {\r\n                return function(value) {\r\n                    ctx[i] = this\r\n                    val[i] = arguments.length > 1 ? slice.call(arguments) : value\r\n                    if (val === progressValues) {\r\n                        deferred.notifyWith(ctx, val)\r\n                    } else if (!(--remain)) {\r\n                        deferred.resolveWith(ctx, val)\r\n                    }\r\n                }\r\n            }\r\n\r\n        if (len > 1) {\r\n            progressValues = new Array(len)\r\n            progressContexts = new Array(len)\r\n            resolveContexts = new Array(len)\r\n            for (; i < len; ++i) {\r\n                if (resolveValues[i] && langx.isFunction(resolveValues[i].promise)) {\r\n                    resolveValues[i].promise()\r\n                        .done(updateFn(i, resolveContexts, resolveValues))\r\n                        .fail(deferred.reject)\r\n                        .progress(updateFn(i, progressContexts, progressValues))\r\n                } else {\r\n                    --remain\r\n                }\r\n            }\r\n        }\r\n        if (!remain) deferred.resolveWith(resolveContexts, resolveValues)\r\n        return deferred.promise()\r\n    };\r\n\r\n    //     zepto.ajax.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    var jsonpID = 0,\r\n        document = window.document,\r\n        key,\r\n        name,\r\n        rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n        jsonType = 'application/json',\r\n        htmlType = 'text/html',\r\n        blankRE = /^\\s*$/,\r\n        originAnchor = document.createElement('a');\r\n\r\n    originAnchor.href = window.location.href;\r\n\r\n    // trigger a custom event and return false if it was cancelled\r\n    function triggerAndReturn(context, eventName, data) {\r\n        var event = eventer.create(eventName);\r\n        $(context).trigger(event, data)\r\n        return !event.isDefaultPrevented()\r\n    }\r\n\r\n    // trigger an Ajax \"global\" event\r\n    function triggerGlobal(settings, context, eventName, data) {\r\n        if (settings.global) return triggerAndReturn(context || document, eventName, data)\r\n    }\r\n\r\n    // Number of active Ajax requests\r\n    var active = 0;\r\n\r\n    function ajaxStart(settings) {\r\n        if (settings.global && active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\r\n    }\r\n\r\n    function ajaxStop(settings) {\r\n        if (settings.global && !(--active)) triggerGlobal(settings, null, 'ajaxStop')\r\n    }\r\n\r\n    // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\r\n    function ajaxBeforeSend(xhr, settings) {\r\n        var context = settings.context\r\n        if (settings.beforeSend.call(context, xhr, settings) === false ||\r\n            triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\r\n            return false\r\n\r\n        triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        ajaxStop(settings)\r\n    }\r\n\r\n    // Empty function, used as default callback\r\n    function empty() {}\r\n\r\n    var ajaxJSONP = function(options, deferred) {\r\n        if (!('type' in options)) return ajax(options)\r\n\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = (langx.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                ajaxError(null, errorType || 'error', xhr, options, deferred)\r\n            } else {\r\n                ajaxSuccess(responseData[0], xhr, options, deferred)\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && langx.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        if (ajaxBeforeSend(xhr, options) === false) {\r\n            abort('abort')\r\n            return xhr\r\n        }\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return xhr;\r\n    };\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest()\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: jsonType,\r\n            xml: 'application/xml, text/xml',\r\n            html: htmlType,\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    };\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) mime = mime.split(';', 2)[0]\r\n        return mime && (mime == htmlType ? 'html' :\r\n            mime == jsonType ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text'\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && langx.type(options.data) != \"string\")\r\n            options.data = param(options.data, options.traditional)\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\r\n            options.url = appendQuery(options.url, options.data), options.data = undefined\r\n    }\r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options || {}),\r\n            deferred = Deferred(),\r\n            urlAnchor\r\n        for (key in ajaxSettings)\r\n            if (settings[key] === undefined) settings[key] = ajaxSettings[key]\r\n\r\n        ajaxStart(settings)\r\n\r\n        if (!settings.crossDomain) {\r\n            urlAnchor = document.createElement('a')\r\n            urlAnchor.href = settings.url\r\n            urlAnchor.href = urlAnchor.href\r\n            settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\r\n        }\r\n\r\n        if (!settings.url) settings.url = window.location.toString()\r\n        serializeData(settings)\r\n\r\n        var dataType = settings.dataType,\r\n            hasPlaceholder = /\\?.+=\\?/.test(settings.url)\r\n        if (hasPlaceholder) dataType = 'jsonp'\r\n\r\n        if (settings.cache === false || (\r\n                (!options || options.cache !== true) &&\r\n                ('script' == dataType || 'jsonp' == dataType)\r\n            ))\r\n            settings.url = appendQuery(settings.url, '_=' + Date.now())\r\n\r\n        if ('jsonp' == dataType) {\r\n            if (!hasPlaceholder)\r\n                settings.url = appendQuery(settings.url,\r\n                    settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\r\n            return ajaxJSONP(settings, deferred)\r\n        }\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n\r\n        if (settings.headers)\r\n            for (name in settings.headers) setHeader(name, settings.headers[name])\r\n        xhr.setRequestHeader = setHeader\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script')(1, eval)(result)\r\n                        else if (dataType == 'xml') result = xhr.responseXML\r\n                        else if (dataType == 'json') result = blankRE.test(result) ? null : JSON.parse(result)\r\n                    } catch (e) { error = e }\r\n\r\n                    if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\r\n                    else ajaxSuccess(result, xhr, settings, deferred)\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) nativeSetHeader.apply(xhr, headers[name])\r\n\r\n        if (settings.timeout > 0) abortTimeout = setTimeout(function() {\r\n            xhr.onreadystatechange = empty\r\n            xhr.abort()\r\n            ajaxError(null, 'timeout', xhr, settings, deferred)\r\n        }, settings.timeout)\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr\r\n    }\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if (langx.isFunction(data)) dataType = success, success = data, data = undefined\r\n        if (!langx.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    var get = function( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    };\r\n\r\n    var post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return ajax(options)\r\n    };\r\n\r\n    var getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return ajax(options)\r\n    }\r\n\r\n    query.fn.load = function(url, data, success) {\r\n        if (!this.length) return this\r\n        var self = this,\r\n            parts = url.split(/\\s/),\r\n            selector,\r\n            options = parseArguments(url, data, success),\r\n            callback = options.success\r\n        if (parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        ajax(options)\r\n        return this\r\n    }\r\n\r\n    var escape = encodeURIComponent\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value)\r\n            if (scope) key = traditional ? scope :\r\n                scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) params.add(value.name, value.value)\r\n            // recurse into nested objects\r\n            else if (type == \"array\" || (!traditional && type == \"object\"))\r\n                serialize(params, value, traditional, key)\r\n            else params.add(key, value)\r\n        })\r\n    }\r\n\r\n    var param = function(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) value = value()\r\n            if (value == null) value = \"\"\r\n            this.push(escape(key) + '=' + escape(value))\r\n        }\r\n        serialize(params, obj, traditional)\r\n        return params.join('&').replace(/%20/g, '+')\r\n    };\r\n\r\n    var\r\n        /* Prefilters\r\n         * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n         * 2) These are called:\r\n         *    - BEFORE asking for a transport\r\n         *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n         * 3) key is the dataType\r\n         * 4) the catchall symbol \"*\" can be used\r\n         * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n         */\r\n        prefilters = {},\r\n\r\n        /* Transports bindings\r\n         * 1) key is the dataType\r\n         * 2) the catchall symbol \"*\" can be used\r\n         * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n         */\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    var ajaxTransport = addToPrefiltersOrTransports(transports);\r\n\r\n    // A special extend for ajax options\r\n    // that takes \"flat\" options (not to be deep extended)\r\n    // Fixes #9887\r\n    function ajaxExtend(target, src) {\r\n        var key, deep,\r\n            flatOptions = ajaxSettings.flatOptions || {};\r\n\r\n        for (key in src) {\r\n            if (src[key] !== undefined) {\r\n                (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\r\n            }\r\n        }\r\n        if (deep) {\r\n            jQuery.extend(true, target, deep);\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    // Creates a full fledged settings object into target\r\n    // with both ajaxSettings and settings fields.\r\n    // If target is omitted, writes into ajaxSettings.\r\n    var ajaxSetup = function(target, settings) {\r\n        return settings ?\r\n\r\n            // Building a settings object\r\n            ajaxExtend(ajaxExtend(target, ajaxSettings), settings) :\r\n\r\n            // Extending ajaxSettings\r\n            ajaxExtend(ajaxSettings, target);\r\n    };\r\n\r\n    // Base inspection function for prefilters and transports\r\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\r\n\r\n        var inspected = {},\r\n            seekingTransport = (structure === transports);\r\n\r\n        function inspect(dataType) {\r\n            var selected;\r\n            inspected[dataType] = true;\r\n            jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\r\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\r\n                if (typeof dataTypeOrTransport === \"string\" &&\r\n                    !seekingTransport && !inspected[dataTypeOrTransport]) {\r\n\r\n                    options.dataTypes.unshift(dataTypeOrTransport);\r\n                    inspect(dataTypeOrTransport);\r\n                    return false;\r\n                } else if (seekingTransport) {\r\n                    return !(selected = dataTypeOrTransport);\r\n                }\r\n            });\r\n            return selected;\r\n        }\r\n\r\n        return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\r\n    }\r\n\r\n\r\n    langx.mixin(ajax, {\r\n    \tajaxJSONP : ajaxJSONP,\r\n    \tajaxPrefilter : ajaxPrefilter,\r\n    \tajaxTransport: ajaxTransport,\r\n    \tajaxSettings : ajaxSettings,\r\n    \tajaxSetup : ajaxSetup,\r\n\r\n    \tCallbacks:Callbacks,\r\n\r\n    \tDeferred: Deferred,\r\n\r\n    \tget : get,\r\n    \tgetJSON : getJSON,\r\n    \tparam: param,\r\n    \tpost: post,\r\n\r\n    \twhen: when\r\n\r\n    });\r\n\r\n\r\n    return skylark.ajax = ajax;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./query\"\r\n], function(skylark,langx,$) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n  /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // coerce ImagesLoaded() without new, to be new ImagesLoaded()\r\n      if ( !( this instanceof ImagesLoaded ) ) {\r\n        return new ImagesLoaded( elem, options, onAlways );\r\n      }\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new Background( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger( eventName);\r\n      this.trigger( 'always');\r\n\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n\r\n    // ----- events ----- //\r\n\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- Background -------------------------- //\r\n  var Background = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n\r\n   $.fn.imagesLoaded = function( options, callback ) {\r\n      var inst = new ImagesLoaded( this, options, callback );\r\n\r\n      var d = new langx.Deferred();\r\n      \r\n      inst.on(\"progress\",function(e){\r\n        d.progress(e);\r\n      });\r\n\r\n      inst.on(\"done\",function(e){\r\n        d.resolve(e);\r\n      });\r\n\r\n      inst.on(\"fail\",function(e){\r\n        d.reject(e);\r\n      });\r\n\r\n      return d.promise;\r\n   };\r\n\r\n    function images() {\r\n        return images;\r\n    }\r\n\r\n    langx.mixin(images, {\r\n      loaded : ImagesLoaded\r\n    });\r\n\r\n    return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./ajax\"\r\n], function(skylark,langx,ajax) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = ajax(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/resizer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return skylark.resizer = resizer;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/selector',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return skylark.selector = selector;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widget',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    function widget() {\r\n        return widget;\r\n    }\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n        init :function(el,options) {\r\n            if (!langx.isHtmlNode(el)) {\r\n                options = el;\r\n                el = null;\r\n            }\r\n            if (el) {\r\n            \tthis.el = el;\r\n        \t}\r\n            if (options) {\r\n                langx.mixin(this,options);\r\n            }\r\n            if (!this.cid) {\r\n                this.cid = langx.uniqueId('w');\r\n            }\r\n            this._ensureElement();\r\n        },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    }\r\n  \t});\r\n\r\n\r\n    langx.mixin(widget, {\r\n    \t$ : query,\r\n\r\n    \tWidget : Widget\r\n    });\r\n\r\n\r\n    return skylark.widget = widget;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./ajax\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./resizer\",\r\n    \"./scripter\",\r\n    \"./selector\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widget\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}