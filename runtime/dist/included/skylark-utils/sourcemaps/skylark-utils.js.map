{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","this","isInvisible","hide","addClass","names","cls","isString","re","property","arguments","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","contents","contentDocument","childNodes","html","innerHTML","empty","isNumber","clone","deep","isIE","nodeType","each","getAttribs","attr","setAttrib","getAttrib","tag","createFragment","singleTagRE","test","$1","fragmentRE","containers","container","dom","slice","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","parent","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","after","placing","refNode","nextSibling","insertBefore","before","prepend","append","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","type","async","defer","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","selector","index","addRule","createStyleSheet","loadStyleSheet","url","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","href","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","filter","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","rootIsSelector","matches","ancestors","ret","byId","getElementById","closest","descendants","querySelectorAll","matchError","local","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","checked","idx","disabled","enabled","eq","focus","activeElement","tabindex","gt","has","sel","hidden","lt","not","selected","visible","offsetWidth","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","getAttribute","pseudo","hasAttribute","simpleExpCounter","currentExpression","item","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","concat","finder","setAttribute","removeAttribute","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","obj","pageXOffset","pageYOffset","pageRect","round","offset","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","isWindow","innerWidth","innerHeight","isDocument","geom","toPixel","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","e","Event","createEvent","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","options","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","result","l","related","relatedTarget","console","warn","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","delete","create","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","Evented","inherit","klassName","prepare","dragSource","handleElm","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","over","dropped","manager","_params","eventName","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Deferred","localStream","isSupported","video","audio","d","stream","src","URL","createObjectURL","localMediaStream","onloadedmetadata","resolve","err","reject","promise","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","selectFile","selectFiles","pickedFiles","maxFileSize","splice","fileSelected","fileInput","input","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","file","reader","FileReader","evt","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","a","Blob","CustomEvent","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","animationDelay","fast","slow","mimeToDataType","mime","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","ajaxSuccess","xhr","settings","deferred","context","status","success","ajaxComplete","ajaxError","ajax","ajaxSettings","crossDomain","abortTimeout","dataType","accepts","headers","setHeader","protocol","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseText","eval","responseXML","blankRE","statusText","open","username","password","timeout","send","get","parseArguments","post","getJSON","http","beforeSend","global","XMLHttpRequest","script","json","xml","gtJSON","_place","choices","layoutNode","aroundNodeCoords","win","view","String","best","some","choice","corner","overflow","spaceAvailable","w","L","R","M","charAt","h","T","B","res","aroundCorner","bb","startXpos","min","startYpos","startX","startY","endX","endY","at","corners","padding","c","around","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","t","b","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","array","ltr","movable","updateWithTouchData","keys","changedTouches","downButton","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","wrapper_map","func","elem","uniq","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isArray","isObject","NodeList","compact","exec","wrapper_node_operation","argType","arg","object","el","toArray","is","excludes","collection","parents","parentsUntil","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","detach","Dimension","m","margin","cb","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","cookies","sKey","unescape","cookie","escape","list","path","set","expires","domain","secure","sExpires","constructor","Number","vEnd","Infinity","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","errback","getFile","fileEntry","onloadend","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","results","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","f","exportToHost","request","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","serializeValue","defaultVal","getItem","removeItem","clear","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","enumerable","configurable","clearData","getData","img","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","now","_DBLCLICK","_dispatchEvent","_reset","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","toString","requestAnimationFrame","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","partial","main"],"mappings":"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AxD,IAKAyC,EAAAq7B,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACA9a,GAIAvgB,EAAAq7B,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACA1sB,GAGA3O,EAAAq7B,UACA,WACAhiB,GAIArZ,EAAAq7B,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAjgC,GAGA4E,EAAAq7B,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAjoC,GACA1D,EAAAsQ,KAAAA,IAGAzR,EAAA,sBACA,YACA,YACA,QACA,UACA,QACA,YACA,YACA,UACA,WACA,OACA,SACA,SACA,UACA,UACA,UACA,aACA,aACA,WACA,WACA,UACA,UACA,SAAAmB,GACA,MAAAA,KAGAnB,EAAA,iBAAA,sBAAA,SAAAgtC,GAAA,MAAAA,MA8EEjoC","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            langx.mixin(node, props);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent) {\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        checked: function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        contains: function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        eq: function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        first: function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        gt: function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        has: function(elm, idx, nodes, sel) {\r\n            return local.querySelector(elm, sel).length > 0;\r\n        },\r\n\r\n\r\n        hidden: function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        last: function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        lt: function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        not: function(elm, idx, nodes, sel) {\r\n            return local.match(elm, sel);\r\n        },\r\n\r\n        parent: function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        selected: function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        visible: function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n        if (tag = cond.tag) {\r\n            var nodeName = node.nodeName.toUpperCase();\r\n            if (tag == '*') {\r\n                if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n            } else {\r\n                if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n            }\r\n        }\r\n\r\n        if (id = cond.id) {\r\n            if (node.getAttribute('id') != id) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        var i, part, cls, pseudo;\r\n\r\n        if (classes = cond.classes) {\r\n            for (i = classes.length; i--;) {\r\n                cls = node.getAttribute('class');\r\n                if (!(cls && classes[i].regexp.test(cls))) return false;\r\n            }\r\n        }\r\n\r\n        if (attributes)\r\n            for (i = attributes.length; i--;) {\r\n                part = attributes[i];\r\n                if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n            }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if (!pseudo(node, idx, nodes, part.value)) {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    if (!nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed = local.Slick.parse(selector);\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                ret.push(node);\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(selector) {\r\n        return descendant(document.body, selector);\r\n    }\r\n\r\n    function findAll(selector) {\r\n        return descendants(document.body, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector);\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type;\r\n                type = props.type;\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                var listener = events[event];\r\n\r\n                if (listener) {\r\n                    listener.remove(fn, langx.mixin({\r\n                        ns: parsed.ns\r\n                    }, options));\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        (evented.dispatchEvent || evented.trigger).call(evented, e);\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - h.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: h.size,\r\n                    total: h.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(h));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if(i<=freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, callback) {\r\n        animate(elm, { opacity: opacity }, speed, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, callback) {\r\n\r\n        fadeTo(elm, speed, 0, function() {\r\n            styler.hide(elm);\r\n            if (callback) {\r\n                callback.call(elm);\r\n            }\r\n\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, callback);\r\n        } else {\r\n            fadeOut(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\r\n\ndefine('skylark-utils/http',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n],function(skylark, langx){\r\n    var Deferred = langx.Deferred,\r\n        blankRE = /^\\s*$/,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i;\r\n\r\n\r\n    function empty() {}\r\n\r\n    var ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest();\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: 'application/json',\r\n            xml: 'application/xml, text/xml',\r\n            html: 'text/html',\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    }\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) {\r\n            mime = mime.split(';', 2)[0];\r\n        }\r\n        return mime && (mime == 'text/html' ? 'html' :\r\n            mime == 'application/json' ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text';\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') {\r\n            return url;\r\n        }\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?');\r\n    }\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = langx.isArray(obj),\r\n            hash = langx.isPlainObject(obj)\r\n        langx.each(obj, function(key, value) {\r\n            type = langx.type(value);\r\n            if (scope) {\r\n                key = traditional ? scope :\r\n                        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']' ;\r\n            }\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) {\r\n                params.add(value.name, value.value);\r\n            // recurse into nested objects\r\n            } else if (type == \"array\" || (!traditional && type == \"object\")) {\r\n                serialize(params, value, traditional, key);\r\n            } else {\r\n                params.add(key, value);\r\n            }\r\n        })\r\n    }    \r\n\r\n    function param(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if (langx.isFunction(value)) {\r\n                value = value();\r\n            }\r\n            if (value == null) {\r\n                value = \"\";\r\n            }\r\n            this.push(escape(key) + '=' + escape(value));\r\n        }\r\n        \r\n        serialize(params, obj, traditional);\r\n\r\n        return params.join('&').replace(/%20/g, '+')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && !langx.isString(options.data)) {\r\n            options.data = $.param(options.data, options.traditional)\r\n        }\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n            options.url = appendQuery(options.url, options.data);\r\n            options.data = undefined;\r\n        }\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        //if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        //triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        //if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        //triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        //triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        //ajaxStop(settings)\r\n    }    \r\n\r\n    function ajax(options) {\r\n        var settings = langx.mixin({}, options),\r\n            deferred = new Deferred();\r\n\r\n        langx.safeMixin(settings,ajaxSettings);\r\n\r\n        //ajaxStart(settings)\r\n        if (!settings.crossDomain) {\r\n        //    settings.crossDomain = !langx.isSameOrigin(settings.url);\r\n        }\r\n\r\n        serializeData(settings);\r\n        var dataType = settings.dataType;\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout;\r\n\r\n        //if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) {\r\n            setHeader('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET')) {\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n        }\r\n\r\n        if (settings.headers) {\r\n            for (name in settings.headers) {\r\n                setHeader(name, settings.headers[name]);\r\n            }    \r\n        }\r\n        xhr.setRequestHeader = setHeader;\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script') {\r\n                            (1, eval)(result);\r\n                        } else if (dataType == 'xml') {\r\n                            result = xhr.responseXML\r\n                        } else if (dataType == 'json') {\r\n                            result = blankRE.test(result) ? null : JSON.parse(result);\r\n                        }\r\n                    } catch (e) { \r\n                        error = e \r\n                    }\r\n\r\n                    if (error) {\r\n                        ajaxError(error, 'parsererror', xhr, settings, deferred);\r\n                    } else {\r\n                        ajaxSuccess(result, xhr, settings, deferred);\r\n                    }\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred);\r\n                }\r\n            }\r\n        }\r\n\r\n        /*\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n        */\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) {\r\n            nativeSetHeader.apply(xhr, headers[name]);\r\n        }\r\n\r\n        if (settings.timeout > 0) {\r\n            abortTimeout = setTimeout(function() {\r\n                xhr.onreadystatechange = empty;\r\n                xhr.abort();\r\n                ajaxError(null, 'timeout', xhr, settings, deferred);\r\n            }, settings.timeout);\r\n        }\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr;\r\n    }\r\n\r\n\r\n    function get( /* url, data, success, dataType */ ) {\r\n        return ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    function post( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.type = 'POST';\r\n        return ajax(options);\r\n    }\r\n\r\n    function getJSON( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments);\r\n        options.dataType = 'json';\r\n        return ajax(options);\r\n    }    \r\n\r\n\r\n    function http(){\r\n      return http;\r\n    }\r\n\r\n    langx.mixin(http, {\r\n        ajax: ajax,\r\n\r\n        get: get,\r\n        \r\n        gtJSON: getJSON,\r\n\r\n        post: post\r\n\r\n    });\r\n\r\n    return skylark.http = http;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                var l = originalPos.left + e.deltaX,\r\n                    t = originalPos.top + e.deltaY;\r\n                if (constraints) {\r\n\r\n                    if (l < constraints.minX) {\r\n                        l = constraints.minX;\r\n                    }\r\n\r\n                    if (l > constraints.maxX) {\r\n                        l = constraints.maxX;\r\n                    }\r\n\r\n                    if (t < constraints.minY) {\r\n                        t = constraints.minY;\r\n                    }\r\n\r\n                    if (t > constraints.maxY) {\r\n                        t = constraints.maxY;\r\n                    }\r\n                }\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem] : [elem, selector]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util,selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem,util] : [elem, selector,util]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    self.attr(props);\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                }))\r\n            },\r\n\r\n            slice: function() { \r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: function(selector, context) {\r\n                var node = this[0],\r\n                    collection = false\r\n                if (typeof selector == 'object') collection = $(selector)\r\n                while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                    node = node !== context && !isDocument(node) && node.parentNode\r\n                return $(node)\r\n            },\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom),\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./http\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}