{"version":3,"sources":["arrays.js"],"names":["define","types","compact","array","filter","call","item","each","obj","callback","length","key","i","undef","value","hasOwnProperty","this","flatten","isArrayLike","result","j","push","inArray","indexOf","makeArray","offset","startWith","concat","Array","prototype","slice","map","elements","values","uniq","idx","first","items","n"],"mappings":";;;;;;;AAAAA,QACC,WACC,SAASC,GAIP,QAASC,GAAQC,GACb,MAAOC,GAAOC,KAAKF,EAAO,SAASG,GAC/B,MAAe,OAARA,IAIf,QAASC,GAAKC,EAAKC,GACf,GAAIC,GAAQC,EAAKC,EAAGC,EAAOC,CAE3B,IAAIN,EAGA,GAFAE,EAASF,EAAIE,OAETA,IAAWG,GAEX,IAAKF,IAAOH,GACR,GAAIA,EAAIO,eAAeJ,KACnBG,EAAQN,EAAIG,GACRF,EAASJ,KAAKS,EAAOH,EAAKG,MAAW,GACrC,UAMZ,KAAKF,EAAI,EAAGA,EAAIF,IACZI,EAAQN,EAAII,GACRH,EAASJ,KAAKS,EAAOF,EAAGE,MAAW,GAFnBF,KAShC,MAAOI,MAGX,QAASC,GAAQd,GACb,GAAIe,EAAYf,GAAQ,CAEpB,IAAK,GADDgB,MACKP,EAAI,EAAGA,EAAIT,EAAMO,OAAQE,IAAK,CACnC,GAAIN,GAAOH,EAAMS,EACjB,IAAIM,EAAYZ,GACZ,IAAK,GAAIc,GAAI,EAAGA,EAAId,EAAKI,OAAQU,IAC7BD,EAAOE,KAAKf,EAAKc,QAGrBD,GAAOE,KAAKf,GAGpB,MAAOa,GAEP,MAAOhB,GAiBf,QAASmB,GAAQhB,EAAMH,GACnB,IAAKA,EACD,QAEJ,IAAIS,EAEJ,IAAIT,EAAMoB,QACN,MAAOpB,GAAMoB,QAAQjB,EAIzB,KADAM,EAAIT,EAAMO,OACHE,KACH,GAAIT,EAAMS,KAAON,EACb,MAAOM,EAIf,UAGJ,QAASY,GAAUhB,EAAKiB,EAAQC,GAC7B,MAAIR,GAAYV,IACPkB,OAAiBC,OAAOC,MAAMC,UAAUC,MAAMzB,KAAKG,EAAKiB,GAAU,KAInEjB,GAGX,QAASuB,GAAIC,EAAUvB,GACnB,GAAIK,GACAF,EAAGD,EADIsB,IAEX,IAAIf,EAAYc,GACZ,IAAKpB,EAAI,EAAGA,EAAIoB,EAAStB,OAAQE,IAC7BE,EAAQL,EAASJ,KAAK2B,EAASpB,GAAIoB,EAASpB,GAAIA,GACnC,MAATE,GAAemB,EAAOZ,KAAKP,OAGnC,KAAKH,IAAOqB,GACRlB,EAAQL,EAASJ,KAAK2B,EAASrB,GAAMqB,EAASrB,GAAMA,GACvC,MAATG,GAAemB,EAAOZ,KAAKP,EAEvC,OAAOG,GAAQgB,GAGnB,QAASC,GAAK/B,GACV,MAAOC,GAAOC,KAAKF,EAAO,SAASG,EAAM6B,GACrC,MAAOhC,GAAMoB,QAAQjB,IAAS6B,IAtHzC,GAAI/B,GAASwB,MAAMC,UAAUzB,OAC5Bc,EAAcjB,EAAMiB,WAyHlB,QACIhB,QAASA,EAETkC,MAAQ,SAASC,EAAMC,GACnB,MAAIA,GACOD,EAAMP,MAAM,EAAEQ,GAEdD,EAAM,IAIxB9B,KAAMA,EAEHU,QAASA,EAETK,QAASA,EAETE,UAAWA,EAEXO,IAAMA,EAENG,KAAOA","file":"../arrays.js","sourcesContent":["define([\r\n\t\"./types\"\r\n],function(types){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n\t    each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});"]}