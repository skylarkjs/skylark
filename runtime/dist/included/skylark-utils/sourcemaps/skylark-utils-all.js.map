{"version":3,"sources":["skylark-utils-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","get","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","then","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","ArrayStore","klassName-","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","async","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","RegExp","cssPropName","support","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","contents","contentDocument","childNodes","innerHTML","empty","isIE","getAttribs","setAttrib","getAttrib","tag","setAttribute","append","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","contains","child","isChildOf","createTextNode","doc","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","placing","refNode","nextSibling","insertBefore","prepend","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","rel","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","button","checked","disabled","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","offsetParent","rootNodeRE","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","handleElm","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","over","dropped","manager","_params","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","usermedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","localStream","isSupported","video","audio","stream","createObjectURL","localMediaStream","onloadedmetadata","vibrate","webkitVibrate","mozVibrate","msVibrate","duration","devices","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","onchange","files","filer","dropzone","droppedCallback","enterdCount","types","picker","pickedCallback","picked","readFile","reader","FileReader","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","uploader","writeFile","msSaveBlob","dataURItoBlob","animate","properties","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","func","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","exec","wrapper_node_operation","argType","el","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","images","elementNodeTypes","1","9","11","ImagesLoaded","onAlways","getImages","bind","addElementImages","addImage","background","addElementBackgroundImages","childImgs","img","reURL","backgroundImage","addBackground","loadingImage","LoadingImage","Background","_this","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","Image","handleEvent","unbindEvents","imagesLoaded","inst","loaded","models","methodMap","read","sync","entity","emulateHTTP","emulateJSON","urlError","_method","textStatus","errorThrown","Entity","fetch","resp","serverAttrs","wrapError","save","destroy","stopListening","encodeURIComponent","Collection","entities","comparator","_reset","setOptions","addOptions","at","min","tail","initialize","singular","removed","_removeEntitys","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","_place","choices","layoutNode","aroundNodeCoords","win","view","best","choice","corner","spaceAvailable","w","L","R","M","h","T","B","res","aroundCorner","bb","startXpos","startYpos","startX","startY","endX","endY","corners","padding","c","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","r","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","resizable","touchActionNone","direction","border","grabber","startSize","currentSize","resizer","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","cookies","sKey","unescape","cookie","list","expires","domain","secure","sExpires","vEnd","toGMTString","errorHandler","msg","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","localfs","requestFileSystem","webkitRequestFileSystem","FileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","getFile","fileEntry","readfileAsDataURL","readfileAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","blob","write","rmfile","readdir","getDirectory","dirEntry","readEntries","dirReader","entries","entry","isDirectory","createReader","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","moveTo","chdir","onchdir","fullPath","importFromHost","exportToHost","isPersisted","typ","PERSISTENT","TEMPORARY","localStorage","storage","setItem","defaultVal","getItem","sessiionStorage","sessionStorage","storages","DataTransfer","_dropEffect","_effectAllowed","_data","enumerable","configurable","clearData","getData","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","_shouldHandle","now","_DBLCLICK","_dispatchEvent","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","widget","delegateEventSplitter","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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,aACA,OACA,OACAmlB,GAGAhJ,EAAAnc,UACA,YACA,aACA0yB,GAIAvW,EAAAnc,UACA,MACA,KACA,MACA,YACA,WACAotB,GAGAjR,EAAAnc,UACA,SACA,YACAm2B,GAGAha,EAAAnc,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACA2jB,GAEAxH,EAAAiB,KAAA,SAAA7Z,GACA,MAAA,SAAAA,EACArQ,KAAAspB,KAEAtpB,KAAAspB,KAAAU,WAAA3Z,IAKA4Y,EAAAnc,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAs4B,GAIAnc,EAAAnc,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAwqB,GAGArO,EAAAnc,UACA,WACA0yB,GAIAvW,EAAAnc,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAiY,GAGAkE,EAAAnc,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAoS,GAEAvgB,EAAAsqB,KAAAA,IAGAxrB,OAAA,wBACA,YACA,UACA,UACA,WACA,SACA,YACA,WACA,SAAAkB,EAAAsL,EAAA8a,EAAA7F,EAAAoY,EAAA4C,EAAArmB,GAIA,QAAA6tC,KACA,MAAAA,GAHA,GAAAC,GAAA,iBAMAC,EAAA33C,EAAAiG,QAAApL,SACA4H,KAAA,SAAAu8B,EAAAl+B,GACAd,EAAA5E,WAAA4jC,KACAl+B,EAAAk+B,EACAA,EAAA,MAEAA,IACAjpC,KAAAipC,GAAAA,GAEAl+B,GACAd,EAAAtB,MAAA3I,KAAA+K,GAEA/K,KAAA+R,MACA/R,KAAA+R,IAAA9H,EAAAH,SAAA,MAEA9J,KAAA6hD,kBAIA32B,QAAA,MAIA7C,EAAA,SAAAhY,GACA,MAAArQ,MAAA8hD,IAAA53B,KAAA7Z,IAMA0xC,OAAA,WACA,MAAA/hD,OAKAC,OAAA,WAGA,MAFAD,MAAAgiD,iBACAhiD,KAAA4R,aACA5R,MAMAgiD,eAAA,WACAhiD,KAAA8hD,IAAA7hD,UAKAgiD,WAAA,SAAA1jC,GAIA,MAHAve,MAAAkiD,mBACAliD,KAAAmiD,YAAA5jC,GACAve,KAAAoiD,iBACApiD,MAQAmiD,YAAA,SAAAlZ,GACAjpC,KAAA8hD,IAAAJ,EAAAr5B,EAAA4gB,GACAjpC,KAAAipC,GAAAjpC,KAAA8hD,IAAA,IAgBAM,eAAA,SAAAhyC,GAEA,GADAA,IAAAA,EAAAnG,EAAAzG,OAAAxD,KAAA,YACAoQ,EAAA,MAAApQ,KACAA,MAAAkiD,kBACA,KAAA,GAAA5iD,KAAA8Q,GAAA,CACA,GAAA6E,GAAA7E,EAAA9Q,EAEA,IADA2K,EAAAlG,WAAAkR,KAAAA,EAAAjV,KAAAiV,IACAA,EAAA,CACA,GAAA9L,GAAA7J,EAAA6J,MAAAw4C,EACA3hD,MAAA8M,SAAA3D,EAAA,GAAAA,EAAA,GAAAc,EAAAtC,MAAAsN,EAAAjV,QAEA,MAAAA,OAMA8M,SAAA,SAAA4D,EAAAL,EAAAvB,GAEA,MADA9O,MAAA8hD,IAAA3xC,GAAAO,EAAA,kBAAA1Q,KAAA2J,IAAA0G,EAAAvB,GACA9O,MAMAkiD,iBAAA,WAEA,MADAliD,MAAA8hD,KAAA9hD,KAAA8hD,IAAArwC,IAAA,kBAAAzR,KAAA2J,KACA3J,MAKAqiD,WAAA,SAAA3xC,EAAAL,EAAAvB,GAEA,MADA9O,MAAA8hD,IAAArwC,IAAAf,EAAA,kBAAA1Q,KAAA2J,IAAA0G,EAAAvB,GACA9O,MAKAsiD,eAAA,SAAAp3B,EAAAlkB,GACA,MAAA+d,GAAA7X,cAAAge,EAAAlkB,IAOA66C,eAAA,WACA,GAAA7hD,KAAAipC,GAOAjpC,KAAAiiD,WAAAh4C,EAAAzG,OAAAxD,KAAA,WAPA,CACA,GAAAgH,GAAAiD,EAAAtB,SAAAsB,EAAAzG,OAAAxD,KAAA,cACAA,MAAAhC,KAAAgJ,EAAAhJ,GAAAiM,EAAAzG,OAAAxD,KAAA,OACAA,KAAAwK,YAAAxD,EAAA,SAAAiD,EAAAzG,OAAAxD,KAAA,cACAA,KAAAiiD,WAAAjiD,KAAAsiD,eAAAr4C,EAAAzG,OAAAxD,KAAA,WAAAgH,IACAhH,KAAAuiD,eAAAv7C,KAQAu7C,eAAA,SAAAzwC,GACA9R,KAAA8hD,IAAAvvC,KAAAT,KAYA,OAPA7H,GAAAtB,MAAA+4C,GACAr5B,EAAAxU,EAEA+tC,OAAAA,IAIAjjD,EAAA+iD,OAAAA,IAGAjkD,OAAA,sBACA,YACA,YACA,QACA,UACA,QACA,YACA,YACA,UACA,WACA,OACA,SACA,WACA,WACA,UACA,UACA,UACA,YACA,aACA,aACA,aACA,WACA,WACA,UACA,SACA,YACA,SAAAkB,GACA,MAAAA,KAGAlB,OAAA,iBAAA,sBAAA,SAAA+kD,GAAA,MAAAA,MA8EExiD","file":"../skylark-utils-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get || prop.value !== undefined)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName-\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            document = window.document,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && url.startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/_devices/usermedia',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.getUserMedia = navigator.getUserMedia\r\n                        || navigator.webkitGetUserMedia\r\n                        || navigator.mozGetUserMedia\r\n                        || navigator.msGetUserMedia;\r\n   \r\n    var Deferred = langx.Deferred,\r\n        localStream  = null;\r\n\r\n    function usermedia() {\r\n        return usermedia;\r\n    }\r\n\r\n    langx.mixin(usermedia, {\r\n        isSupported : function() {\r\n            return !!navigator.getUserMedia;\r\n        },\r\n\r\n        start : function(video,audio) {\r\n\r\n            var d = new Deferred();\r\n            navigator.getUserMedia (\r\n                {video: true,audio: true},\r\n                // successCallback\r\n                function(stream) {\r\n                    localStream = stream;\r\n                    video.src = window.URL.createObjectURL(localMediaStream);\r\n                    video.onloadedmetadata = function(e) {\r\n                         // Do something with the video here.\r\n                    };\r\n                    d.resolve();\r\n                },\r\n\r\n                // errorCallback\r\n                function(err) {\r\n                  d.reject(err);\r\n                }\r\n            );\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        stop : function() {\r\n            if (localStream) {\r\n                localStream.stop();\r\n                localStream = null; \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return  usermedia;\r\n});\r\n\ndefine('skylark-utils/_devices/vibrate',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    navigator.vibrate = navigator.vibrate\r\n                        || navigator.webkitVibrate\r\n                        || navigator.mozVibrate\r\n                        || navigator.msVibrate;\r\n    \r\n\r\n    function vibrate() {\r\n        return vibrate;\r\n    }\r\n\r\n    langx.mixin(vibrate, {\r\n        isSupported : function() {\r\n            return !!navigator.vibrate;\r\n        },\r\n\r\n        start : function(duration) {\r\n            navigator.vibrate(duration);\r\n        },\r\n\r\n        stop : function() {\r\n            navigator.vibrate(0);\r\n        }\r\n    });\r\n\r\n\r\n    return  vibrate;\r\n});\r\n\ndefine('skylark-utils/devices',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_devices/usermedia\",\r\n    \"./_devices/vibrate\"\r\n], function(skylark,langx,usermedia,vibrate) {\r\n\r\n    function devices() {\r\n        return devices;\r\n    }\r\n\r\n    langx.mixin(devices, {\r\n        usermedia: usermedia,\r\n        vibrate : vibrate\r\n    });\r\n\r\n\r\n    return skylark.devices = devices;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, eventer,styler) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(files, url, params) {\r\n        params = params || {};\r\n        var chunkSize = params.chunkSize || 0,\r\n            maxSize = params.maxSize || 0,\r\n            progressCallback = params.progress,\r\n            errorCallback = params.error,\r\n            completedCallback = params.completed,\r\n            uploadedCallback = params.uploaded;\r\n\r\n        function createFormData(e) {\r\n            var t = new FormData();\r\n            t.append(\"file\", e);\r\n            return t;\r\n        }\r\n\r\n\r\n        function uploadOneFile(fileItem,oneFileloadedSize, fileItems) {\r\n            function handleProcess(nowLoadedSize) {\r\n                var t;\r\n                speed = Math.ceil(oneFileloadedSize + nowLoadedSize / ((now() - uploadStartedTime) / 1e3)), \r\n                percent = Math.round((oneFileloadedSize + nowLoadedSize) / file.size * 100); \r\n                if (progressCallback) {\r\n                    progressCallback({\r\n                        name: file.name,\r\n                        loaded: oneFileloadedSize + nowLoadedSize,\r\n                        total: file.size,\r\n                        percent: percent,\r\n                        bytesPerSecond: speed,\r\n                        global: {\r\n                            loaded: allLoadedSize + oneFileloadedSize + nowLoadedSize,\r\n                            total: totalSize\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            var file = fileItem.file,\r\n                uploadChunkSize = chunkSize || file.size,\r\n                chunk = file.slice(oneFileloadedSize, oneFileloadedSize + uploadChunkSize);\r\n\r\n            xhr = createXmlHttpRequest();\r\n            //xhr.open(\"POST\", url + \r\n            //                \"?action=upload&path=\" + \r\n            //                encodeURIComponent(path) + \r\n            //                \"&name=\" + encodeURIComponent(file.name) + \r\n            //                \"&loaded=\" + oneFileloadedSize + \r\n            //                \"&total=\" + file.size + \r\n            //                \"&id=\" + id + \r\n            //                \"&csrf=\" + encodeURIComponent(token) + \r\n            //                \"&resolution=\" + \r\n            //                encodeURIComponent(fileItem.type));\r\n            xhr.upload.onprogress = function(event) {\r\n                handleProcess(event.loaded - (event.total - chunk.size))\r\n            };\r\n            xhr.onload = function() {\r\n                var response, i;\r\n                xhr.upload.onprogress({\r\n                    loaded: chunk.size,\r\n                    total: chunk.size\r\n                });\r\n                try {\r\n                    response = JSON.parse(xhr.responseText);\r\n                } catch (e) {\r\n                    i = {\r\n                        code: -1,\r\n                        message: \"Error response is not proper JSON\\n\\nResponse:\\n\" + xhr.responseText,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    };\r\n                    errorFileInfos.push(i);\r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    return uploadFiles(fileItems)\r\n                }\r\n                if (response.error) {\r\n\r\n                    i = {\r\n                        code: response.error.code,\r\n                        message: response.error.message,\r\n                        data: {\r\n                            fileName: file.name,\r\n                            fileSize: file.size,\r\n                            maxSize: uploadMaxSize,\r\n                            extensions: extensions.join(\", \")\r\n                        },\r\n                        extra: extra\r\n                    }; \r\n                    errorFileInfos.push(i); \r\n                    if (errorCallback) {\r\n                        errorCallback(i);\r\n                    }\r\n                    uploadFiles(fileItems);\r\n                } else {\r\n                    if (!response.error && oneFileloadedSize + uploadChunkSize < file.size) {\r\n                        uploadOneFile(fileItem, oneFileloadedSize + uploadChunkSize, fileItems);\r\n                    } else {\r\n                        if (response.result) {\r\n                            utils.each(response.result, function(e) {\r\n                                e = File.fromJSON(e);\r\n                                uploadFileItems.push(e);\r\n\r\n                                if (uploadedCallback) {\r\n                                    uploadedCallback({\r\n                                        file: e\r\n                                    });\r\n                                }\r\n                            }); \r\n\r\n                        } \r\n                        allLoadedSize += file.size;\r\n                        response.result && k.push(response.result);\r\n                        uploadFiles(fileItems);\r\n                    }                            \r\n                }     \r\n\r\n            };\r\n            handleProcess(0);\r\n            xhr.send(createFormData(chunk));\r\n        }\r\n\r\n        function uploadFiles(fileItems) {\r\n            var fileItem = fileItems.shift();\r\n            processedFilesCount++; \r\n            if (fileItem && fileItem.file.error) {\r\n                uploadFiles(fileItem);\r\n            } else {\r\n                if (uploadingFile) {\r\n                    uploadOneFile(fileItem, null, 0, fileItems);\r\n                } else {\r\n\r\n                    if (completedCallback) {\r\n                        completedCallback({\r\n                            files: new FileCollection(uploadFileItems),\r\n                            bytesPerSecond: I,\r\n                            errors: E(D),\r\n                            extra: extra\r\n                        });\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n\r\n        var self = this,\r\n            fileItems = [],\r\n            processedFilesCount = -1,\r\n            xhr, \r\n            totalSize = 0,\r\n            allLoadedSize = 0,\r\n            k = [],\r\n            errorFileInfos = [],\r\n            startedTime = now(),\r\n            I = 0,\r\n            uploadFileItems = [];\r\n\r\n        for ( var  i = 0; i < files.length; i++) {\r\n            totalSize += files[i].size;\r\n            fileItems.push({\r\n                file : files[i]\r\n            });\r\n        }        \r\n\r\n        uploadFiles(fileItems);\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n            var hoverClass = params.hoverClass || \"dropzone\",\r\n                droppedCallback = params.dropped;\r\n\r\n            var enterdCount = 0;\r\n            on(elm, \"dragenter\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                    enterdCount ++;\r\n                    styler.addClass(elm,hoverClass)\r\n                }\r\n            });\r\n\r\n            on(elm, \"dragover\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    eventer.stop(e);\r\n                }\r\n            });\r\n\r\n\r\n            on(elm, \"dragleave\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    enterdCount--\r\n                    if (enterdCount==0) {\r\n                        styler.removeClass(elm,hoverClass);\r\n                    }\r\n                }\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                    styler.removeClass(elm,hoverClass)\r\n                    eventer.stop(e);\r\n                    if (droppedCallback) {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            return this;\r\n        },\r\n\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        uploader : function(elm,options) {\r\n\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./query\"\r\n], function(skylark,langx,$) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n  /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // coerce ImagesLoaded() without new, to be new ImagesLoaded()\r\n      if ( !( this instanceof ImagesLoaded ) ) {\r\n        return new ImagesLoaded( elem, options, onAlways );\r\n      }\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new Background( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger( eventName);\r\n      this.trigger( 'always');\r\n\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n\r\n    // ----- events ----- //\r\n\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- Background -------------------------- //\r\n  var Background = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n\r\n   $.fn.imagesLoaded = function( options, callback ) {\r\n      var inst = new ImagesLoaded( this, options, callback );\r\n\r\n      var d = new langx.Deferred();\r\n      \r\n      inst.on(\"progress\",function(e){\r\n        d.progress(e);\r\n      });\r\n\r\n      inst.on(\"done\",function(e){\r\n        d.resolve(e);\r\n      });\r\n\r\n      inst.on(\"fail\",function(e){\r\n        d.reject(e);\r\n      });\r\n\r\n      return d.promise;\r\n   };\r\n\r\n    function images() {\r\n        return images;\r\n    }\r\n\r\n    langx.mixin(images, {\r\n      loaded : ImagesLoaded\r\n    });\r\n\r\n    return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/resizer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return skylark.resizer = resizer;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/selector',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return skylark.selector = selector;\r\n});\r\n\ndefine('skylark-utils/_storages/cookies',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    function cookies() {\r\n        return cookies;\r\n    }\r\n\r\n    langx.mixin(cookies, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var cookies = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < cookies.length; i++) { \r\n\t\t    \tcookies[i] = unescape(cookies[i]); \r\n\t\t    }\r\n\t\t    return cookies;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\t\t    var sExpires = \"\";\r\n\t\t    if (expires) {\r\n\t\t      switch (expires.constructor) {\r\n\t\t        case Number:\r\n\t\t          sExpires = vEnd === Infinity ? \"; expires=Tue, 19 Jan 2038 03:14:07 GMT\" : \"; max-age=\" + expires;\r\n\t\t          break;\r\n\t\t        case String:\r\n\t\t          sExpires = \"; expires=\" + expires;\r\n\t\t          break;\r\n\t\t        case Date:\r\n\t\t          sExpires = \"; expires=\" + expires.toGMTString();\r\n\t\t          break;\r\n\t\t      }\r\n\t\t    }\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + sExpires + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return  cookies;\r\n\r\n});\r\n\r\n\n/**\r\n *\r\n * Copyright (c) 2013 psteam Inc.(http://www.psteam.co.jp)\r\n * http://www.psteam.co.jp/qface/license\r\n * \r\n * @Author: liwenfeng\r\n * @Date: 2014/02/28\r\n */\r\ndefine('skylark-utils/_storages/localfs',[\r\n    \"../langx\"\r\n], function(langx){\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar FileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(localfs, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new FileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        FileSystem : FileSystem\r\n    });\r\n    \r\n\treturn localfs;\r\n});\ndefine('skylark-utils/_storages/localStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/_storages/sessionStorage',[\r\n    \"../langx\"\r\n], function(langx) {\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        forEach : function(callback) {\r\n            for (var i=0; i<storage.length; i++) {\r\n                var key = storage.key(i)\r\n                callback(key, store.get(key))\r\n            }\r\n        }\r\n    });\r\n\r\n    return  sessiionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils/storages',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./_storages/cookies\",\r\n    \"./_storages/localfs\",\r\n    \"./_storages/localStorage\",\r\n    \"./_storages/sessionStorage\"\r\n], function(skylark,langx,cookies,localfs,localStorage,sessionStorage) {\r\n    function storages() {\r\n        return storages;\r\n    }\r\n\r\n    langx.mixin(storages, {\r\n        cookies: cookies,\r\n        localfs : localfs,\r\n        localStorage : localStorage,\r\n        sessionStorage : sessionStorage\r\n    });\r\n\r\n\r\n    return skylark.storages = storages;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/widget',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    function widget() {\r\n        return widget;\r\n    }\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n        init :function(el,options) {\r\n            if (!langx.isHtmlNode(el)) {\r\n                options = el;\r\n                el = null;\r\n            }\r\n            if (el) {\r\n            \tthis.el = el;\r\n        \t}\r\n            if (options) {\r\n                langx.mixin(this,options);\r\n            }\r\n            if (!this.cid) {\r\n                this.cid = langx.uniqueId('w');\r\n            }\r\n            this._ensureElement();\r\n        },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    }\r\n  \t});\r\n\r\n\r\n    langx.mixin(widget, {\r\n    \t$ : query,\r\n\r\n    \tWidget : Widget\r\n    });\r\n\r\n\r\n    return skylark.widget = widget;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./devices\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./models\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./resizer\",\r\n    \"./scripter\",\r\n    \"./selector\",\r\n    \"./storages\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\",\r\n    \"./widget\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}